bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  nullText  =  getNumberText()  + "n ";  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getNumberText()  + "n ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNumberText()  + "n ";	  String    nullText    =    getNumberText();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
2	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
3	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
4	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
5	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
6	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
7	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText  ==  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
8	[BUG]  [BUGGY]  String  nullText  =  getNonNullText();  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getNonNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNonNullText();	          String    nullText    =    getNullText();    String    nullText    =    getNonNullText();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
9	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  [CE]  variable  nullText  is  already  defined  in  method  getNullText()  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNonNullText();    	non-compiled	[CE]  variable  nullText  is  already  defined  in  method  getNullText()	31	None	replace
10	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  nullText  is  already  defined  in  method  getNullText()  [FE]                    StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    String    nullText    =    getNonNullText();    	non-compiled	[CE]  variable  nullText  is  already  defined  in  method  getNullText()	31	None	replace
11	[BUG]  [BUGGY]  return(String)this.getEmptyText();  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getEmptyText();	  return(String)this.getNullText();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
12	[BUG]  [BUGGY]  return(String)this.getErrorText();  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getErrorText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getErrorText();	  return(String)this.getNullText();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
13	[BUG]  [BUGGY]  String  msg  =  getMessage();  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =  getMessage();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =  getMessage();	  String    msg    =    getString();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
14	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ");  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "   ");	  	non-compiled	[CE]  not  a  statement	156	None	add
15	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ";  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "   ";	  	non-compiled	[CE]  not  a  statement	156	None	add
16	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ");  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "n ");	  	non-compiled	[CE]  not  a  statement	156	None	add
17	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ";  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "n ";	  	non-compiled	[CE]  not  a  statement	156	None	add
18	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "   ");  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "   ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    this.nullText    :   "   ";    (this.nullText!=  null)?  this.nullText  : "   ");	  	non-compiled	[CE]  not  a  statement	156	None	add
19	[BUG]  [BUGGY]          getNullText();    getNullText();  getNullText();  getNullText();  [CE]  not  a  statement  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  getNullText();  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    getNullText();  getNullText();	  	non-compiled	[CE]  not  a  statement	123	None	add
20	[BUG]  [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  String>  nullText  =  new  StackOverflowError();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  String>  nullText  =  new  StackOverflowError();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    StackOverflowError  <  String>  nullText  =  new  StackOverflowError();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
21	[BUG]  [BUGGY]          getNullText();    getNullText();  getNumberText();  getNullText();  [CE]  not  a  statement  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  getNumberText();  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    getNumberText();  getNullText();	  	non-compiled	[CE]  not  a  statement	123	None	add
22	[BUG]  [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  String>  nullText  =  new  StackOverflowError();  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  String>  nullText  =  new  StackOverflowError();  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    StackOverflowError  <  String>  nullText  =  new  StackOverflowError();  getNullText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
23	[BUG]  [BUGGY]          getNullText();    getNullText();  if(getNullText()!=  null)  {  getNullText();  getNullText();  }  [CE]  not  a  statement  [FE]            StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  if(getNullText()!=  null)  {  getNullText();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    if(getNullText()!=  null)  {  getNullText();  getNullText();  }	  	non-compiled	[CE]  not  a  statement	123	None	add
24	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
25	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
26	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
27	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : "n ";  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : "n ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  this.nullText  : "n ";	  return(this.nullText    ==    null)?    this.nullText    :   "   ";    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
28	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : ", ";  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : ", ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  this.nullText  : ", ";	  return(this.nullText    ==    null)?    this.nullText    :   "   ";    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
29	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : "# ";  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : "# ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  this.nullText  : "# ";	  return(this.nullText    ==    null)?    this.nullText    :   "   ";    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
30	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
31	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
32	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( "  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( "	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
33	[BUG]  [BUGGY]  return(String)this.nullText  = " ";  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText  = " ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText  = " ";	  return(String)this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
34	[BUG]  [BUGGY]  return(String)this.nullText  =  String.valueOf(this.nullText);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText  =  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText  =  String.valueOf(this.nullText);	  return(String)this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
35	[BUG]  [BUGGY]  return(String)this.symbol,  this.symbol.getText();  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.symbol,  this.symbol.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.symbol,  this.symbol.getText();	  return(String)this.symbol.getText();    	non-compiled	[CE]  ';'  expected	9	None	replace
36	[BUG]  [BUGGY]  return(String)this.symbol.toString();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.symbol.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.symbol.toString();	  return(String)this.symbol.getText();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  this.nullText  =(String)this.nullText;  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.nullText  =(String)this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	this.nullText  =(String)this.nullText;	  return(String)this.nullText;    this.nullText    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  this.nullText  =(String)this.nullText;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  this.nullText  =(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  this.nullText  =(String)this.nullText;  }	  return(String)this.nullText;    this.nullText    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
39	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
40	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalStateException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
41	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
42	[BUG]  [BUGGY]  getNullText().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  getNullText().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getNullText().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  getText().length()    ==    0)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	79	None	replace
43	[BUG]  [BUGGY]  getText().length()!=  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  getText().length()!=  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getText().length()!=  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  getText().length()    ==    0)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	79	None	replace
44	[BUG]  [BUGGY]  string.getNullText();  String  msg  =  getText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  string.getNullText();  String  msg  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string.getNullText();  String  msg  =  getText();	  return    this.getNullText();    String    msg    =    getText();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  nullText  =  this.getNullText();  String  msg  =  getText();  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  this.getNullText();  String  msg  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  this.getNullText();  String  msg  =  getText();	  return    this.getNullText();    String    msg    =    getText();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  string  msg  =  getText();  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  string  msg  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string  msg  =  getText();	  return    this.getNullText();    String    msg    =    getText();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  getText();  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  getText();  }	  return    this.getNullText();    getText();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  getText();  }  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  getText();  }	  return    this.getNullText();    getText();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  }  else  {  getText();  }  [CE]  illegal  start  of  type  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  }  else  {  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  text.getNullText();  }  else  {  getText();  }	  return    this.getNullText();    getText();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  return  nullText;  getNullText();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return  nullText;  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  nullText;  getNullText();	  return    this.nullText;    getNullText();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
51	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  getNullText();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  getNullText();  }	  return    this.nullText;    getNullText();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
52	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  getNullText();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  getNullText();  }	  return    this.nullText;    getNullText();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
53	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	  String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	86	None	replace
54	[BUG]  [BUGGY]  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
55	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }	  String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	86	None	replace
56	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  String.valueOf(this.nullText);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=  null)?  null  :  String.valueOf(this.nullText);	  return(nullText!=    null)?    null    :    String.valueOf(nullText);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
57	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  String.valueOf(this.nullText);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  null  :  String.valueOf(this.nullText);	  return(nullText!=    null)?    null    :    String.valueOf(nullText);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
58	[BUG]  [BUGGY]  String  msg  =  nullText;  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =  nullText;  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =  nullText;	  String    msg    =    null;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
59	[BUG]  [BUGGY]  String  msg  =(String)null;  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =(String)null;  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =(String)null;	  String    msg    =    null;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
60	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText;  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText;	  	non-compiled	[CE]  not  a  statement	55	None	add
61	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText);	  	non-compiled	[CE]  not  a  statement	55	None	add
62	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  this.nullText  =(String)this.nullText.clone();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  this.nullText  =(String)this.nullText.clone();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    this.nullText  =(String)this.nullText.clone();	  	non-compiled	[CE]  illegal  start  of  type	55	None	add
63	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText.toString();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText.toString();	  	non-compiled	[CE]  not  a  statement	55	None	add
64	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText.toString());  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText.toString());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText.toString());	  	non-compiled	[CE]  not  a  statement	55	None	add
65	[BUG]  [BUGGY]  String  nullText  =  this.super.getNullText();  [CE]  '('  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  this.super.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  this.super.getNullText();	  String    nullText    =    super.getNullText();    	non-compiled	[CE]  '('  expected	37	None	replace
66	[BUG]  [BUGGY]  String  nullText  =  this.nullText.getNullText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  this.nullText.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  this.nullText.getNullText();	  String    nullText    =    super.getNullText();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
67	[BUG]  [BUGGY]  String  nullText  =  this.getNullText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  this.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  this.getNullText();	  String    nullText    =    super.getNullText();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
68	[BUG]  [BUGGY]  if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  null;  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  null;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  null;	  return(this.nullText!=    null)?    null    :    this.nullText;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
69	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
70	[BUG]  [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nu  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nu  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nu	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
71	[BUG]  [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  null  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  null  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  null	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
72	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
73	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  if(text  ==  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  if(text  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  if(text  ==  null)  {  return  null;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
74	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  if(text!=  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  if(text!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  if(text!=  null)  {  return  null;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
75	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  if(text.length()  ==  0)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  if(text.length()  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  if(text.length()  ==  0)  {  return  null;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
76	[BUG]  [BUGGY]  return  null;  StringBuffer  buf  =  new  StringBuffer(getText().length());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  StringBuffer  buf  =  new  StringBuffer(getText().length());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    StringBuffer  buf  =  new  StringBuffer(getText().length());	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
77	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText);	  return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
78	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText,  this.string);  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText,  this.string);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText,  this.string);	  return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
79	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.text ",  new  StackOverflowError());  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.text ",  new  StackOverflowError());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.text ",  new  StackOverflowError());	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
80	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.text ",  new  StackOverflowError[]  {  }  );  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.text ",  new  StackOverflowError[]  {  }  );  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.text ",  new  StackOverflowError[]  {  }  );	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
81	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMalformedException( " ");	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
82	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  NullPointerException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
83	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
84	[BUG]  [BUGGY]  if(getErrors()  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
85	[BUG]  [BUGGY]  if(getErrors()  ==  null)  {  getErrors();  if(getErrors()!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  ==  null)  {  getErrors();  if(getErrors()!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  ==  null)  {  getErrors();  if(getErrors()!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
86	[BUG]  [BUGGY]  return(String)this.text.getValue();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.text.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.text.getValue();	  return(String)this.text.getText();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
88	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  getNullText();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  getNullText();  }	  return(String)this.nullText;    getNullText();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
89	[BUG]  [BUGGY]  (String)this.nullText;  getNullText();  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  (String)this.nullText;  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	(String)this.nullText;  getNullText();	  return(String)this.nullText;    getNullText();    	non-compiled	[CE]  not  a  statement	115	None	replace
90	[BUG]  [BUGGY]  this.nullText  =(String)this.nullText.getValue();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.nullText  =(String)this.nullText.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	this.nullText  =(String)this.nullText.getValue();	  return    this.nullText;    this.nullText    =(String)this.nullText.getValue();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
91	[BUG]  [BUGGY]  nullText  =(String)this.nullText.getValue();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  nullText  =(String)this.nullText.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =(String)this.nullText.getValue();	  return    this.nullText;    this.nullText    =(String)this.nullText.getValue();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
92	[BUG]  [BUGGY]  nullText  =  getEmptyText();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  getEmptyText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getEmptyText();	  nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
93	[BUG]  [BUGGY]  nullText  =  getText();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  getText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getText();	  nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
94	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingText(text);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingText(text);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingText(text);	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
95	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingText( " ");  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingText( " ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingText( " ");	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	155	None	replace
96	[BUG]  [BUGGY]  String  null  =  getText().trim();  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getText().trim();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getText().trim();	  String    null    =    getText();    	non-compiled	[CE]  not  a  statement	76	None	replace
97	[BUG]  [BUGGY]  String  null  =  getText()  + "n ";  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getText()  + "n ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getText()  + "n ";	  String    null    =    getText();    	non-compiled	[CE]  not  a  statement	76	None	replace
98	[BUG]  [BUGGY]  String  text  =  getEmptyText()  + "n ";  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getEmptyText()  + "n ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getEmptyText()  + "n ";	  String    text    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
99	[BUG]  [BUGGY]  nullText  =  null;  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  null;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  null;	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
100	[BUG]  [BUGGY]  nullText  =  this.nullText;  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  this.nullText;	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
101	[BUG]  [BUGGY]  return(statement  ==  null)?  null  :  statement.toString();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return(statement  ==  null)?  null  :  statement.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(statement  ==  null)?  null  :  statement.toString();	  return(str    ==    null)?    null    :    statement.toString();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
102	[BUG]  [BUGGY]  return(status  ==  null)?  null  :  statement.toString();  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  return(status  ==  null)?  null  :  statement.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(status  ==  null)?  null  :  statement.toString();	  return(str    ==    null)?    null    :    statement.toString();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
103	[BUG]  [BUGGY]  return(statement!=  null)?  null  :  statement.toString();  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  return(statement!=  null)?  null  :  statement.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(statement!=  null)?  null  :  statement.toString();	  return(str    ==    null)?    null    :    statement.toString();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
104	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  getNullText();  getNullText();  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  getNullText();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  getNullText();  getNullText();  }	          getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
105	[BUG]  [BUGGY]  nullText();  [CE]  illegal  start  of  type  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  nullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText();	          getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
106	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  getNullText();  getNullText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  getNullText();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  getNullText();  getNullText();  }	          getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
107	[BUG]  [BUGGY]  if(null!=  null)  {  getNullText();  getNullText();  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]  if(null!=  null)  {  getNullText();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  null)  {  getNullText();  getNullText();  }	          getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
108	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	          getNullText();    if(getNullText()    ==    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	138	None	replace
109	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	          getNullText();    if(getNullText()    ==    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	138	None	replace
110	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  }  [CE]  not  a  statement  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  }	          getNullText();    if(getNullText()    ==    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	138	None	replace
111	[BUG]  [BUGGY]  if(nullText!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }	          getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
112	[BUG]  [BUGGY]  if(nullText!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
113	[BUG]  [BUGGY]  this.nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  this.nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	this.nullText  =  getNullText();	  return    this.nullText;    this.nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
114	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =  getNullText();  }	  return    this.nullText;    this.nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
115	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =  getNullText();  }	  return    this.nullText;    this.nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError();  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError();	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
117	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Standard  overflow  error ");  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Standard  overflow  error ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "Standard  overflow  error ");	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
118	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingValue();	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
119	[BUG]  [BUGGY]  aughtExceptionHandler.handleStatement();  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStatement();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStatement();	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
120	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
121	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
122	[BUG]  [BUGGY]  String  nullText  =  getWrappedText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getWrappedText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getWrappedText();	  String    nullText    =    getErrorText();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
123	[BUG]  [BUGGY]  nullText  =(String)this.nullText.clone();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  nullText  =(String)this.nullText.clone();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =(String)this.nullText.clone();	  return    this.nullText;    this.nullText    =(String)this.nullText.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
124	[BUG]  [BUGGY]  this.nullText  =(String)this.nullText.clone();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.nullText  =(String)this.nullText.clone();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	this.nullText  =(String)this.nullText.clone();	  return    this.nullText;    this.nullText    =(String)this.nullText.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
125	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =(String)this.nullText.clone();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =(String)this.nullText.clone();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =(String)this.nullText.clone();  }	  return    this.nullText;    this.nullText    =(String)this.nullText.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
126	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =(String)this.nullText.clone();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =(String)this.nullText.clone();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =(String)this.nullText.clone();  }	  return    this.nullText;    this.nullText    =(String)this.nullText.clone();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
127	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  getNullText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  getNullText();  }	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
128	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  getNullText();  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  getNullText();  }	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
129	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  }	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
130	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  getNullText();  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  getNullText();  }	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
131	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }	          String    text    =    getNullText();    String    text    =    nullText();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
132	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  nullText();  }	          String    text    =    getNullText();    String    text    =    nullText();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
133	[BUG]  [BUGGY]  String  text  =  getEscapedText();  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getEscapedText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getEscapedText();	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
134	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingText();  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingText();	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
135	[BUG]  [BUGGY]  if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  this.nullText;  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  this.nullText;	  return(this.nullText    ==    null)?    null    :    this.nullText;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
136	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getText();  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
137	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getText();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getText();  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
138	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
139	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.no.text.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.no.text.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.no.text.start  of  expression ");	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
140	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undef.text.start  of  expression ");  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undef.text.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.undef.text.start  of  expression ");	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
141	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undeclared.text.start  of  expression ");  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undeclared.text.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.undeclared.text.start  of  expression ");	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
142	[BUG]  [BUGGY]  return  this.nullText.getEmptyText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return  this.nullText.getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.nullText.getEmptyText();	  return    this.getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
143	[BUG]  [BUGGY]  return  null.getEmptyText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  null.getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  null.getEmptyText();	  return    this.getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
144	[BUG]  [BUGGY]  String  msg  =(String)this.nullText;  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =(String)this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =(String)this.nullText;	  return(String)this.nullText;    String    msg    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
145	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  String  msg  =(String)this.nullText;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  String  msg  =(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  String  msg  =(String)this.nullText;  }	  return(String)this.nullText;    String    msg    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
146	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  }	  return(String)this.nullText;    String    msg    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
147	[BUG]  [BUGGY]  string  msg  =(String)this.nullText;  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  string  msg  =(String)this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string  msg  =(String)this.nullText;	  return(String)this.nullText;    String    msg    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
148	[BUG]  [BUGGY]  return(this.symbol!=  null)?  null  :  this.symbol;  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(this.symbol!=  null)?  null  :  this.symbol;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.symbol!=  null)?  null  :  this.symbol;	  return    this.symbol;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
149	[BUG]  [BUGGY]  return(this.symbol!=  null)?  this.symbol  :  String.valueOf(this.symbol);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(this.symbol!=  null)?  this.symbol  :  String.valueOf(this.symbol);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.symbol!=  null)?  this.symbol  :  String.valueOf(this.symbol);	  return    this.symbol;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
150	[BUG]  [BUGGY]  return(this.symbol  ==  null)?  null  :  this.symbol;  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return(this.symbol  ==  null)?  null  :  this.symbol;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.symbol  ==  null)?  null  :  this.symbol;	  return    this.symbol;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
151	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  String.valueOf(this.nullText);  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  String.valueOf(this.nullText);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  String.valueOf(this.nullText);  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    return(String)this.nullText;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
152	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  return(String)this.nullText;  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  return(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  return(String)this.nullText;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    return(String)this.nullText;    }    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
153	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  null  statement. ");  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Unable  to  parse  null  statement. ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	NullPointerException.println( "Unable  to  parse  null  statement. ");	  NullPointerException.println(   "Unable    to    parse    null    statement   ");    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
154	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  null  statement: ");  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Unable  to  parse  null  statement: ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	NullPointerException.println( "Unable  to  parse  null  statement: ");	  NullPointerException.println(   "Unable    to    parse    null    statement   ");    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
155	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  null  statement, ");  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "Unable  to  parse  null  statement, ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	NullPointerException.println( "Unable  to  parse  null  statement, ");	  NullPointerException.println(   "Unable    to    parse    null    statement   ");    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
156	[BUG]  [BUGGY]  return(null  ==  null)?  getNullText()  : "null ";  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return(null  ==  null)?  getNullText()  : "null ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(null  ==  null)?  getNullText()  : "null ";	  return(str    ==    null)?    getNullText()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
157	[BUG]  [BUGGY]  return(text  ==  null)?  getNullText()  : "null ";  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(text  ==  null)?  getNullText()  : "null ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(text  ==  null)?  getNullText()  : "null ";	  return(str    ==    null)?    getNullText()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
158	[BUG]  [BUGGY]  return(this.null  ==  null)?  getNullText()  : "null ";  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return(this.null  ==  null)?  getNullText()  : "null ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.null  ==  null)?  getNullText()  : "null ";	  return(str    ==    null)?    getNullText()    :   "null   ";    	non-compiled	[CE]  <identifier>  expected	133	None	replace
159	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
160	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getErrors();  if(getErrors()  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getErrors();  if(getErrors()  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getErrors();  if(getErrors()  ==  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
161	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getErrors();  if(getErrors()!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getErrors();  if(getErrors()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getErrors();  if(getErrors()!=  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
162	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  this);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  this);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  this);	  MutableTokenizer.startString(getNullText(),    null);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
163	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  null,  null);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  null,  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  null,  null);	  MutableTokenizer.startString(getNullText(),    null);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
164	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  null,  true);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  null,  true);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  null,  true);	  MutableTokenizer.startString(getNullText(),    null);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
165	[BUG]  [BUGGY]  string(this.getNullText());  String  text  =  getText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  string(this.getNullText());  String  text  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string(this.getNullText());  String  text  =  getText();	  return    this.getNullText();    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
166	[BUG]  [BUGGY]  nullText  =  this.getNullText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  this.getNullText();	  return    this.getNullText();    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
167	[BUG]  [BUGGY]  String  null  =  getEmptyText().trim();  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getEmptyText().trim();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getEmptyText().trim();	  String    null    =    getEmptyText();    	non-compiled	[CE]  not  a  statement	88	None	replace
168	[BUG]  [BUGGY]  String  text  =  getEscapedText().trim();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getEscapedText().trim();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getEscapedText().trim();	  String    text    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
169	[BUG]  [BUGGY]  String  text  =  getNullText().toString();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getNullText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getNullText().toString();	  String    text    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
170	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
171	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
172	[BUG]  [BUGGY]  String  msg  =  getText().toString();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =  getText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =  getText().toString();	  String    msg    =    getText().trim();    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
173	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText,  null,  null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText,  null,  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  nullText,  null,  null);	  MutableTokenizer.startString(getNullText(),    nullText,    null);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
174	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText,  this);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText,  this);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  nullText,  this);	  MutableTokenizer.startString(getNullText(),    nullText,    null);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
175	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText,  null,  false);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText,  null,  false);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  nullText,  null,  false);	  MutableTokenizer.startString(getNullText(),    nullText,    null);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
176	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
177	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
178	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText);  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    (this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText);	  	non-compiled	[CE]  not  a  statement	125	None	add
179	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    (this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);	  	non-compiled	[CE]  not  a  statement	125	None	add
180	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  this.nullText  =  String.valueOf(this.nullText);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  this.nullText  =  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    this.nullText  =  String.valueOf(this.nullText);	  	non-compiled	[CE]  illegal  start  of  type	125	None	add
181	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText,  this.nullText);  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText,  this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    (this.nullText  ==  null)?  this.nullText  :  String.valueOf(this.nullText,  this.nullText);	  	non-compiled	[CE]  not  a  statement	125	None	add
182	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText,  this.nullText);  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  (this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText,  this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    (this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText,  this.nullText);	  	non-compiled	[CE]  not  a  statement	125	None	add
183	[BUG]  [BUGGY]  String  text  =  this.super.getNullText();  [CE]  '('  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  this.super.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  this.super.getNullText();	  String    text    =    super.getNullText();    	non-compiled	[CE]  '('  expected	64	None	replace
184	[BUG]  [BUGGY]  String  text  =  this.text.getNullText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  this.text.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  this.text.getNullText();	  String    text    =    super.getNullText();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
185	[BUG]  [BUGGY]  String  text  =  this.getNullText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  this.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  this.getNullText();	  String    text    =    super.getNullText();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
186	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  (String)this.nullText);  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  (String)this.nullText);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  (String)this.nullText);  }	  return(String)this.nullText;    (String)this.nullText);    	non-compiled	[CE]  not  a  statement	26	None	replace
187	[BUG]  [BUGGY]  return(this.type  ==  null?  null  :  this.type.toString());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(this.type  ==  null?  null  :  this.type.toString());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.type  ==  null?  null  :  this.type.toString());	  return(type    ==    null?    null    :    type.toString());    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
188	[BUG]  [BUGGY]  return(type!=  null?  null  :  type.toString());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(type!=  null?  null  :  type.toString());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(type!=  null?  null  :  type.toString());	  return(type    ==    null?    null    :    type.toString());    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
189	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
190	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [CE]  not  a  statement  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	135	None	replace
191	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  StrBuilderReader.this.getText();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  StrBuilderReader.this.getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  StrBuilderReader.this.getText();  }	  return    this.nullText;    StrBuilderReader.this.getText();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
192	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  StrBuilderReader.this.getText();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  StrBuilderReader.this.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  null  :  this.nullText;  StrBuilderReader.this.getText();	  return    this.nullText;    StrBuilderReader.this.getText();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
193	[BUG]  [BUGGY]  nullText  =  StrBuilderReader.this.getText();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  StrBuilderReader.this.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  StrBuilderReader.this.getText();	  return    this.nullText;    StrBuilderReader.this.getText();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
194	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  String  nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  String  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    String  nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	70	None	add
195	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    StackOverflowError  <  String>  nullText  =  getNullText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	add
196	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  getNullText();  String  nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  getNullText();  String  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    getNullText();  String  nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	70	None	add
197	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  StackOverflowError  =  new  StackOverflowError();  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  StackOverflowError  =  new  StackOverflowError();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    StackOverflowError  =  new  StackOverflowError();	  	non-compiled	[CE]  illegal  start  of  type	70	None	add
198	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNumberText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNumberText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    StackOverflowError  <  String>  nullText  =  getNumberText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	add
199	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	throw  new  IllegalArgumentException( " ");	  return    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
200	[BUG]  [BUGGY]  throw  new  NullPointerException( " ");  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	throw  new  NullPointerException( " ");	  return    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
201	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	throw  new  IllegalStateException( " ");	  return    null;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
202	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
203	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
204	[BUG]  [BUGGY]  MutableTokenizer.checkState(getNullText());  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkState(getNullText());  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkState(getNullText());	  MutableTokenizer.checkNotNull(getNullText());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
205	[BUG]  [BUGGY]  MutableTokenizer.checkNull(getNullText());  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkNull(getNullText());  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkNull(getNullText());	  MutableTokenizer.checkNotNull(getNullText());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
206	[BUG]  [BUGGY]  String  nullText  =  getNullText(String.valueOf( "-   "));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getNullText(String.valueOf( "-   "));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNullText(String.valueOf( "-   "));	  String    nullText    =    getEmptyText(String.valueOf(   "-   "));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
207	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.valueOf( "-$ "));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.valueOf( "-$ "));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.valueOf( "-$ "));	  String    nullText    =    getEmptyText(String.valueOf(   "-   "));    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
208	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText);  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(nullText);	  	non-compiled	[CE]  not  a  statement	44	None	add
209	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText!=  null)?  null  :  String.valueOf(nullText);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText!=  null)?  null  :  String.valueOf(nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    (nullText!=  null)?  null  :  String.valueOf(nullText);	  	non-compiled	[CE]  not  a  statement	44	None	add
210	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText).toLowerCase();  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText).toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(nullText).toLowerCase();	  	non-compiled	[CE]  not  a  statement	44	None	add
211	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  String  nullText  =  getNullText();  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  String  nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    String  nullText  =  getNullText();	  	non-compiled	[CE]  not  a  statement	44	None	add
212	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText).toString();  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText).toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(nullText).toString();	  	non-compiled	[CE]  not  a  statement	44	None	add
213	[BUG]  [BUGGY]  return(this.type  ==  null)?  null  :  this.type.toLowerCase();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(this.type  ==  null)?  null  :  this.type.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.type  ==  null)?  null  :  this.type.toLowerCase();	  return(type    ==    null)?    null    :    type.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
214	[BUG]  [BUGGY]  return(type!=  null)?  null  :  type.toLowerCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(type!=  null)?  null  :  type.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(type!=  null)?  null  :  type.toLowerCase();	  return(type    ==    null)?    null    :    type.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
215	[BUG]  [BUGGY]  return(value  ==  null)?  null  :  value.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(value  ==  null)?  null  :  value.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(value  ==  null)?  null  :  value.toLowerCase();	  return(type    ==    null)?    null    :    type.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
216	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
217	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  }  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
218	[BUG]  [BUGGY]  nullText  =  getNullText().trim();  [CE]  illegal  start  of  type  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText().trim();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText().trim();	          String    nullText    =    getNullText();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
219	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }	          String    text    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
220	[BUG]  [BUGGY]  if(nullText  ==  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }	          String    text    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
221	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }	          String    text    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
222	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
223	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
224	[BUG]  [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(nullText!=  null)  {  String  nullText  =  nullText.trim();  if(nullText.length()  ==  0)  {  return  null  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(nullText!=  null)  {  String  nullText  =  nullText.trim();  if(nullText.length()  ==  0)  {  return  null  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(nullText!=  null)  {  String  nullText  =  nullText.trim();  if(nullText.length()  ==  0)  {  return  null	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
225	[BUG]  [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(nullText!=  null)  {  String  nullText  =  nullText.trim();  if(nullText.length()  ==  0)  {  return  nu  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(nullText!=  null)  {  String  nullText  =  nullText.trim();  if(nullText.length()  ==  0)  {  return  nu  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	StackOverflowError  <  String>  nullText  =  getStackOverflowError().trim();  if(nullText!=  null)  {  String  nullText  =  nullText.trim();  if(nullText.length()  ==  0)  {  return  nu	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
226	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
227	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
228	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
229	[BUG]  [BUGGY]  nullText  =  getNullText();  StrBuilderReader.this.getNullText();  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  StrBuilderReader.this.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  StrBuilderReader.this.getNullText();	          String    text    =    getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
230	[BUG]  [BUGGY]  String  text  =  getNullText(),  StrBuilderReader.this.getNullText();  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getNullText(),  StrBuilderReader.this.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getNullText(),  StrBuilderReader.this.getNullText();	          String    text    =    getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  ';'  expected	89	None	replace
231	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase(Locale.getDefault());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase(Locale.getDefault());	  return(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
232	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText.toLowerCase();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText.toLowerCase();  }	  return(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
233	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase(Locale.ENGLISH);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase(Locale.ENGLISH);	  return(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
234	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
235	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
236	[BUG]  [BUGGY]  String  text  =  getStringText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getStringText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getStringText();	  String    text    =    getNumberText();    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
237	[BUG]  [BUGGY]  return(this.type  ==  null)?  null  :  this.type.toString();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return(this.type  ==  null)?  null  :  this.type.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.type  ==  null)?  null  :  this.type.toString();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
238	[BUG]  [BUGGY]  return(value  ==  null)?  null  :  value.toString();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(value  ==  null)?  null  :  value.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(value  ==  null)?  null  :  value.toString();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
239	[BUG]  [BUGGY]  return(type!=  null)?  null  :  type.toString();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(type!=  null)?  null  :  type.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(type!=  null)?  null  :  type.toString();	  return(type    ==    null)?    null    :    type.toString();    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
240	[BUG]  [BUGGY]  String  nullText  =  getNumberText().toString();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getNumberText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNumberText().toString();	  String    nullText    =    getNumberText().trim();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
241	[BUG]  [BUGGY]  nullText  =  this.getText();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  this.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  this.getText();	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
242	[BUG]  [BUGGY]  if(nullText!=  null)  {  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  getNullText();  String  nullText  =  getNullText();  }	          getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
243	[BUG]  [BUGGY]  if(nullText  ==  null)  {  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  getNullText();  String  nullText  =  getNullText();  }	          getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
244	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  getNullText();  String  nullText  =  getNullText();  }	          getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
245	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  getNullText();  String  nullText  =  getNullText();  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  getNullText();  String  nullText  =  getNullText();  }	          getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
246	[BUG]  [BUGGY]  return  this.text.getText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  this.text.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.text.getText();	  return    this.getText();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
247	[BUG]  [BUGGY]  return  text.getText();  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  return  text.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text.getText();	  return    this.getText();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
248	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  getErrorText();  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  getErrorText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  getErrorText();  }	  if(getNullText()!=    null)    {    getErrorText();    }    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
249	[BUG]  [BUGGY]  String  text  =  getNullText();  return  text  ==  null?  null  :  text.toString();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getNullText();  return  text  ==  null?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getNullText();  return  text  ==  null?  null  :  text.toString();	  String    text    =    getText();    return    text    ==    null?    null    :    text.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
250	[BUG]  [BUGGY]  return  text  ==  null?  null  :  text.toString();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return  text  ==  null?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text  ==  null?  null  :  text.toString();	  String    text    =    getText();    return    text    ==    null?    null    :    text.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
251	[BUG]  [BUGGY]  String  nullText  =  getEmptyText().toString();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText().toString();	  String    nullText    =    getEmptyText().trim();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
252	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undef.null ",  null);  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undef.null ",  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.undef.null ",  null);	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
253	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.null.statement ");  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.null.statement ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.null.statement ");	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
254	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undef.null ",  statement);  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.undef.null ",  statement);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.undef.null ",  statement);	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
255	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
256	[BUG]  [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNumberText()!=  null)  {  String  nullText  =  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
257	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
258	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(text,  this.getNullText());  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingValue(text,  this.getNullText());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingValue(text,  this.getNullText());	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
259	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText,  null);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText,  null);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText  ==  null)?  null  :  String.valueOf(nullText,  null);	  return(nullText    ==    null)?    null    :    String.valueOf(nullText);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
260	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText,  1);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText,  1);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText  ==  null)?  null  :  String.valueOf(nullText,  1);	  return(nullText    ==    null)?    null    :    String.valueOf(nullText);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
261	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText().trim();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
262	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
263	[BUG]  [BUGGY]  nullText  =  StrBuilderReader.this.getNullText();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  StrBuilderReader.this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  StrBuilderReader.this.getNullText();	  return    this.nullText;    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
264	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  StrBuilderReader.this.getNullText();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  StrBuilderReader.this.getNullText();  }	  return    this.nullText;    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
265	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  StrBuilderReader.this.getNullText();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  StrBuilderReader.this.getNullText();  }	  return    this.nullText;    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
266	[BUG]  [BUGGY]  String  text  =  this.super.getText();  [CE]  '('  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  this.super.getText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  this.super.getText();	  String    text    =    super.getText();    	non-compiled	[CE]  '('  expected	49	None	replace
267	[BUG]  [BUGGY]  String  text  =  this.text.getText();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  this.text.getText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  this.text.getText();	  String    text    =    super.getText();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
268	[BUG]  [BUGGY]  String  text  =  this.getText();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  this.getText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  this.getText();	  String    text    =    super.getText();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
269	[BUG]  [BUGGY]  return  this.nullText.getErrorText();  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  return  this.nullText.getErrorText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.nullText.getErrorText();	  return    this.getErrorText();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
270	[BUG]  [BUGGY]  return  null.getErrorText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return  null.getErrorText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  null.getErrorText();	  return    this.getErrorText();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
271	[BUG]  [BUGGY]  return  getErrorText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  getErrorText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  getErrorText();	  return    this.getErrorText();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
272	[BUG]  [BUGGY]  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	  String    null    =    getNullText();    if(null    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
273	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText);  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(nullText);	  	non-compiled	[CE]  not  a  statement	42	None	add
274	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  String  nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  String  nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    String  nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	42	None	add
275	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(String.valueOf(nullText));  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(String.valueOf(nullText));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(String.valueOf(nullText));	  	non-compiled	[CE]  not  a  statement	42	None	add
276	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText).toString();  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText).toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(nullText).toString();	  	non-compiled	[CE]  not  a  statement	42	None	add
277	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText,  null);  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  (nullText  ==  null)?  null  :  String.valueOf(nullText,  null);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    (nullText  ==  null)?  null  :  String.valueOf(nullText,  null);	  	non-compiled	[CE]  not  a  statement	42	None	add
278	[BUG]  [BUGGY]  return  this.nullText.getNumberText();  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  return  this.nullText.getNumberText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.nullText.getNumberText();	  return    this.getNumberText();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
279	[BUG]  [BUGGY]  return  null.getNumberText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return  null.getNumberText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  null.getNumberText();	  return    this.getNumberText();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
280	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getNullText();  String  nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getNullText();  String  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    String  text  =  getNullText();  String  nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
281	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getText();  String  nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getText();  String  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    String  text  =  getText();  String  nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
282	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    StackOverflowError  <  String>  nullText  =  getNullText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	add
283	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  nullText  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    String  nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
284	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    String  text  =  getText();	  	non-compiled	[CE]  illegal  start  of  type	52	None	add
285	[BUG]  [BUGGY]  if(getErrors()  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
286	[BUG]  [BUGGY]  if(getErrors()  ==  null)  {  getErrors();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  ==  null)  {  getErrors();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  ==  null)  {  getErrors();  if(getNullText()!=  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
287	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	146	None	replace
288	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	146	None	replace
289	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getEmptyText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getEmptyText();  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	146	None	replace
290	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  String  msg  =(String)this.nullText.toLowerCase();  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  String  msg  =(String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    String  msg  =(String)this.nullText.toLowerCase();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
291	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  (String)this.nullText.toLowerCase());  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  (String)this.nullText.toLowerCase());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    (String)this.nullText.toLowerCase());	  	non-compiled	[CE]  not  a  statement	19	None	add
292	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  (String)this.nullText.toLowerCase();  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  (String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    (String)this.nullText.toLowerCase();	  	non-compiled	[CE]  not  a  statement	19	None	add
293	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  this.nullText  =(String)this.nullText.toLowerCase();  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  this.nullText  =(String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    this.nullText  =(String)this.nullText.toLowerCase();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
294	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  String  msg  =(String)this.nullText.toLowerCase();  getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  String  msg  =(String)this.nullText.toLowerCase();  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    String  msg  =(String)this.nullText.toLowerCase();  getNullText();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	add
295	[BUG]  [BUGGY]  getErrorText(),  nullText;  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  getErrorText(),  nullText;  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getErrorText(),  nullText;	  getErrorText();    	non-compiled	[CE]  ';'  expected	67	None	replace
296	[BUG]  [BUGGY]  String  text  =  getText().toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getText().toString();	  String    text    =    getText().trim();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
297	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "StackOverflowError ");  [CE]  invalid  method  declaration;  return  type  required  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "StackOverflowError ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleError( "StackOverflowError ");	  if(getNullText()    ==    null)    {    getNullText();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
298	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Missing  row: "  +  getClass().getName());  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Missing  row: "  +  getClass().getName());  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "Missing  row: "  +  getClass().getName());	  if(getNullText()    ==    null)    {    getNullText();    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
299	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
300	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return(String)this.nullText;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
301	[BUG]  [BUGGY]  this.nullText  =  null;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  this.nullText  =  null;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	this.nullText  =  null;	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
302	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.getNullText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.getNullText();  }	  return    this.getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
303	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.getNullText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.getNullText();  }	  return    this.getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
304	[BUG]  [BUGGY]  nullText  =  this.getNullText();  StrBuilderReader.this.getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  this.getNullText();  StrBuilderReader.this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  this.getNullText();  StrBuilderReader.this.getNullText();	  return    this.getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
305	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  nullText;  }  else  {  String  nullText  =  getNullText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  nullText;  }  else  {  String  nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  nullText;  }  else  {  String  nullText  =  getNullText();  }	  return    this.getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
306	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  String  nullText  =  getNullText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  String  nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  String  nullText  =  getNullText();  }	  return    this.getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
307	[BUG]  [BUGGY]  null  =  getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  null  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	null  =  getNullText();	  return    this.getNullText();    StrBuilderReader.this.setNullText(getNullText());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
308	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  text.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(str  ==  null)?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(str  ==  null)?  null  :  text.toString();	  return(str    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
309	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  string.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return(str  ==  null)?  null  :  string.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(str  ==  null)?  null  :  string.toString();	  return(str    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
310	[BUG]  [BUGGY]  String  null  =  getNullText().trim()  + "n ";  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getNullText().trim()  + "n ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getNullText().trim()  + "n ";	  String    null    =    getNullText().trim();    	non-compiled	[CE]  not  a  statement	77	None	replace
311	[BUG]  [BUGGY]  return(strategy  ==  null)?  null  :  string.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(strategy  ==  null)?  null  :  string.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(strategy  ==  null)?  null  :  string.toString();	  return(strategy    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	134	None	replace
312	[BUG]  [BUGGY]  return(strategy  ==  null)?  null  :  text.toString();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return(strategy  ==  null)?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(strategy  ==  null)?  null  :  text.toString();	  return(strategy    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
313	[BUG]  [BUGGY]  MutableTokenizer.checkNotNull(getNullText(),  this);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkNotNull(getNullText(),  this);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkNotNull(getNullText(),  this);	  MutableTokenizer.checkNotNull(getNullText(),    null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
314	[BUG]  [BUGGY]  MutableTokenizer.checkNull(getNullText(),  null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkNull(getNullText(),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkNull(getNullText(),  null);	  MutableTokenizer.checkNotNull(getNullText(),    null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
315	[BUG]  [BUGGY]  MutableTokenizer.checkNotNull(getNullText(),  String.valueOf(null));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkNotNull(getNullText(),  String.valueOf(null));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkNotNull(getNullText(),  String.valueOf(null));	  MutableTokenizer.checkNotNull(getNullText(),    null);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
316	[BUG]  [BUGGY]  nullText  =  this.getNullText();  String  msg  =  getMessage();  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  this.getNullText();  String  msg  =  getMessage();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  this.getNullText();  String  msg  =  getMessage();	  return    this.getNullText();    String    msg    =    getMessage();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
317	[BUG]  [BUGGY]  string  msg  =  getMessage();  [CE]  illegal  start  of  type  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  string  msg  =  getMessage();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string  msg  =  getMessage();	  return    this.getNullText();    String    msg    =    getMessage();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
318	[BUG]  [BUGGY]  string.getNullText();  String  msg  =  getMessage();  [CE]  illegal  start  of  type  [FE]                    StackOverflowError      [CONTEXT]        [BUGGY]  string.getNullText();  String  msg  =  getMessage();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string.getNullText();  String  msg  =  getMessage();	  return    this.getNullText();    String    msg    =    getMessage();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
319	[BUG]  [BUGGY]  String  msg  =(String)this.nullText.toLowerCase();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =(String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =(String)this.nullText.toLowerCase();	  return(String)this.nullText;    String    msg    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
320	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  String  msg  =(String)this.nullText.toLowerCase();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  String  msg  =(String)this.nullText.toLowerCase();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  String  msg  =(String)this.nullText.toLowerCase();  }	  return(String)this.nullText;    String    msg    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
321	[BUG]  [BUGGY]  nullText  =(String)this.nullText.toLowerCase();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  nullText  =(String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =(String)this.nullText.toLowerCase();	  return(String)this.nullText;    String    msg    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
322	[BUG]  [BUGGY]  string  msg  =(String)this.nullText.toLowerCase();  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  string  msg  =(String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	string  msg  =(String)this.nullText.toLowerCase();	  return(String)this.nullText;    String    msg    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
323	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }	          String    nullText    =    getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
324	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
325	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  return  nullText;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  return  nullText;  }	          String    nullText    =    getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
326	[BUG]  [BUGGY]  nullText;  String  text  =  getText();  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  nullText;  String  text  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText;  String  text  =  getText();	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  not  a  statement	84	None	replace
327	[BUG]  [BUGGY]  nullText  =  text;  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  nullText  =  text;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  text;	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
328	[BUG]  [BUGGY]  String  nullText  =  this.super.getEmptyText();  [CE]  '('  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  this.super.getEmptyText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  this.super.getEmptyText();	  String    nullText    =    super.getEmptyText();    	non-compiled	[CE]  '('  expected	18	None	replace
329	[BUG]  [BUGGY]  String  nullText  =  this.getEmptyText();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  this.getEmptyText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  this.getEmptyText();	  String    nullText    =    super.getEmptyText();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
330	[BUG]  [BUGGY]  String  null  =  getNullText().toString()  + "n ";  [CE]  not  a  statement  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getNullText().toString()  + "n ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getNullText().toString()  + "n ";	  String    null    =    getNullText().toString();    	non-compiled	[CE]  not  a  statement	78	None	replace
331	[BUG]  [BUGGY]  String  null  =  getNullText().toString()  + ", ";  [CE]  not  a  statement  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getNullText().toString()  + ", ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getNullText().toString()  + ", ";	  String    null    =    getNullText().toString();    	non-compiled	[CE]  not  a  statement	78	None	replace
332	[BUG]  [BUGGY]  String  text  =  nullText( " ");  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  nullText( " ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  nullText( " ");	  String    text    =    nullText();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
333	[BUG]  [BUGGY]  String  text  =  nullText(this.text);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  nullText(this.text);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  nullText(this.text);	  String    text    =    nullText();    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
334	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =  null;  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  this.nullText  =  null;  }	  return    this.nullText;    this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
335	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =  null;  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  null;  }  else  {  this.nullText  =  null;  }	  return    this.nullText;    this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
336	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  }  else  {  this.nullText  =  null;  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  }  else  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return  this.nullText;  }  else  {  this.nullText  =  null;  }	  return    this.nullText;    this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
337	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getString();  }	          String    text    =    getNullText();    String    text    =    getString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	147	None	replace
338	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getString();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getString();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  text  =  getNullText();  text  =  getString();  }	          String    text    =    getNullText();    String    text    =    getString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	147	None	replace
339	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNumberText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
340	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNumberText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
341	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    String    nullText    =    getNumberText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
342	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText;  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText;	  	non-compiled	[CE]  not  a  statement	46	None	add
343	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText);  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText);	  	non-compiled	[CE]  not  a  statement	46	None	add
344	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText!=  null)?  null  :  this.nullText;  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText!=  null)?  null  :  this.nullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    (this.nullText!=  null)?  null  :  this.nullText;	  	non-compiled	[CE]  not  a  statement	46	None	add
345	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText!=  null)?  null  :  this.nullText);  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  (this.nullText!=  null)?  null  :  this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    (this.nullText!=  null)?  null  :  this.nullText);	  	non-compiled	[CE]  not  a  statement	46	None	add
346	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  this.nullText  =  getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  this.nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    this.nullText  =  getNullText();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	add
347	[BUG]  [BUGGY]  return(String)this.getNullText();  String  msg  =(String)this.getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  String  msg  =(String)this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    String  msg  =(String)this.getNullText();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	add
348	[BUG]  [BUGGY]  return(String)this.getNullText();  String  msg  =(String)this.getText();  [CE]  invalid  method  declaration;  return  type  required  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  String  msg  =(String)this.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    String  msg  =(String)this.getText();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	add
349	[BUG]  [BUGGY]  return(String)this.getNullText();  String[]  nullText  =  this.getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  String[]  nullText  =  this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    String[]  nullText  =  this.getNullText();	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	add
350	[BUG]  [BUGGY]  return(String)this.getNullText();  (String)this.getNullText());  [CE]  not  a  statement  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  (String)this.getNullText());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    (String)this.getNullText());	  	non-compiled	[CE]  not  a  statement	57	None	add
351	[BUG]  [BUGGY]  return(String)this.getNullText();  String[]  nullText  =  getNullText();  [CE]  not  a  statement  [FE]            StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  String[]  nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    String[]  nullText  =  getNullText();	  	non-compiled	[CE]  not  a  statement	57	None	add
352	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ");  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "   ");	  	non-compiled	[CE]  not  a  statement	158	None	add
353	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "   ");  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "   ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText!=  null)?  this.nullText  : "   ");	  	non-compiled	[CE]  not  a  statement	158	None	add
354	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ";  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "   ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "   ";	  	non-compiled	[CE]  not  a  statement	158	None	add
355	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ");  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "n ");	  	non-compiled	[CE]  not  a  statement	158	None	add
356	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "   ";  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "   ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText!=  null)?  this.nullText  : "   ";	  	non-compiled	[CE]  not  a  statement	158	None	add
357	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.class,  nullText);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.class,  nullText);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.class,  nullText);	  String    nullText    =    getEmptyText(String.class);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	129	None	replace
358	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.valueOf(class));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.valueOf(class));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.valueOf(class));	  String    nullText    =    getEmptyText(String.class);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
359	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.valueOf(class),  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.valueOf(class),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.valueOf(class),  null);	  String    nullText    =    getEmptyText(String.class);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
360	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  not  a  statement  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
361	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
362	[BUG]  [BUGGY]  ||!getNullText())  {  getNullText();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  ||!getNullText())  {  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	||!getNullText())  {  getNullText();  }	  if(!getNullText())    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
363	[BUG]  [BUGGY]  String  nullText  =  getNullText().toString()  + "n ";  [CE]  invalid  method  declaration;  return  type  required  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getNullText().toString()  + "n ";  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getNullText().toString()  + "n ";	  String    nullText    =    getNullText().toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
364	[BUG]  [BUGGY]  NullPointerException.printStackTrace();  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.printStackTrace();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	NullPointerException.printStackTrace();	  nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
365	[BUG]  [BUGGY]  return(String)symbolReader.getText();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(String)symbolReader.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)symbolReader.getText();	  return(String)symbol.getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
366	[BUG]  [BUGGY]  return(String)str.getText();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return(String)str.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)str.getText();	  return(String)symbol.getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
367	[BUG]  [BUGGY]  return(String)this.NullText  =  getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.NullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.NullText  =  getNullText();	  return(String)this.nullText    =    getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
368	[BUG]  [BUGGY]  (String)this.nullText  =  getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  (String)this.nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	(String)this.nullText  =  getNullText();	  return(String)this.nullText    =    getNullText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
369	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.no.start  of  expression ");  [CE]  invalid  method  declaration;  return  type  required  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.no.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.no.start  of  expression ");	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	130	None	replace
370	[BUG]  [BUGGY]  return  null.getText();  [CE]  invalid  method  declaration;  return  type  required  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  null.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  null.getText();	  return    this.getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
371	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  this.nullText  =(String)this.nullText.clone();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  this.nullText  =(String)this.nullText.clone();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  this.nullText  =(String)this.nullText.clone();  }	  return    this.nullText;    this.nullText    =(String)this.nullText.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
372	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  this.nullText  =(String)this.nullText.clone();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  this.nullText  =(String)this.nullText.clone();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return  this.nullText;  this.nullText  =(String)this.nullText.clone();  }	  return    this.nullText;    this.nullText    =(String)this.nullText.clone();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
373	[BUG]  [BUGGY]  return(String)this.nullText.getValue();  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.getValue();	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
374	[BUG]  [BUGGY]  return(String)this.nullText.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText.clone();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.clone();	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
375	[BUG]  [BUGGY]  MutableTokenizer.checkNotNull(getNullText(),  String.valueOf);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkNotNull(getNullText(),  String.valueOf);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkNotNull(getNullText(),  String.valueOf);	  MutableTokenizer.checkNotNull(getNullText(),    null);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
376	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
377	[BUG]  [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
378	[BUG]  [BUGGY]  return  text.getNullText();  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return  text.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text.getNullText();	  return    this.getNullText();    String    text    =    getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
379	[BUG]  [BUGGY]  return  text.getNullText();  String  text  =  getText();  [CE]  invalid  method  declaration;  return  type  required  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  text.getNullText();  String  text  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text.getNullText();  String  text  =  getText();	  return    this.getNullText();    String    text    =    getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
380	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  }  else  {  String  text  =  getText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  }  else  {  String  text  =  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  text.getNullText();  }  else  {  String  text  =  getText();  }	  return    this.getNullText();    String    text    =    getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
381	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  text  =  getText();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  text  =  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  text.getNullText();  text  =  getText();  }	  return    this.getNullText();    String    text    =    getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
382	[BUG]  [BUGGY]  String  null  =  getEmptyText().toString();  [CE]  not  a  statement  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getEmptyText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getEmptyText().toString();	  String    null    =    getNullText().toString();    	non-compiled	[CE]  not  a  statement	78	None	replace
383	[BUG]  [BUGGY]  return(String)mv.getText();  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(String)mv.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)mv.getText();	  return(String)symbol.getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
384	[BUG]  [BUGGY]  return(String)symbol.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return(String)symbol.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)symbol.toString();	  return(String)symbol.getText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
385	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "n ");  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "n ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText!=  null)?  this.nullText  : "n ");	  	non-compiled	[CE]  not  a  statement	158	None	add
386	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "n ";  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText!=  null)?  this.nullText  : "n ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText!=  null)?  this.nullText  : "n ";	  	non-compiled	[CE]  not  a  statement	158	None	add
387	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =(String)this.nullText;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =(String)this.nullText;  }	  return(String)this.nullText;    String    msg    =(String)this.nullText;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
388	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullTex  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullTex  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullTex	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
389	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	119	None	replace
390	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  null  =  null;  if(nullText!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  null  =  null;  if(nullText!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  String  null  =  null;  if(nullText!=  null)  {  return  null;  }	  	non-compiled	[CE]  not  a  statement	44	None	add
391	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no-errors ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no-errors ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingError( "msg.no-errors ");	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
392	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "msg.no-errors ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "msg.no-errors ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleError( "msg.no-errors ");	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
393	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.start  of  expression ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                    StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.start  of  expression ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingError( "msg.no.start  of  expression ");	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
394	[BUG]  [BUGGY]  getErrorText( "OverflowError ");  [CE]  invalid  method  declaration;  return  type  required  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  getErrorText( "OverflowError ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getErrorText( "OverflowError ");	  getErrorText();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
395	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  }  else  {  String  nullText  =  getNullText().trim();  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  }  else  {  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  }  else  {  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
396	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
397	[BUG]  [BUGGY]  if(null!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	  String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	86	None	replace
398	[BUG]  [BUGGY]  if(null!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(null!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }	  String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	86	None	replace
399	[BUG]  [BUGGY]  String  text  =  getText().replace('ufffd',  'ufffd');  [CE]  unclosed  character  literal  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText().replace('ufffd',  'ufffd');  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getText().replace('ufffd',  'ufffd');	  String    text    =    getText().trim();    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
400	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  StringBuffer  buf  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  StringBuffer  buf  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  StringBuffer  buf  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length());  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	add
401	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  this.nullText  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length());  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	add
402	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  this.nullText  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	add
403	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  StringBuffer  buf  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  StringBuffer  buf  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  StringBuffer  buf  =  new  StringBuffer();  System.arraycopy(this.nullText,  0,  this.nullText,  0,  this.nullText.length);  }	  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	add
404	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }	  return    this.getNullText();    StrBuilderReader.this.setNullText(getNullText());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
405	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  StrBuilderReader.this.setNullText(getNullText());  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  StrBuilderReader.this.setNullText(getNullText());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  StrBuilderReader.this.setNullText(getNullText());  }	  return    this.getNullText();    StrBuilderReader.this.setNullText(getNullText());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
406	[BUG]  [BUGGY]  return(this.getNullText()  ==  null)?  null  :  this.getNullText();  StrBuilderReader.this.setNullText(getNullText());  [CE]  <identifier>  expected  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  return(this.getNullText()  ==  null)?  null  :  this.getNullText();  StrBuilderReader.this.setNullText(getNullText());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.getNullText()  ==  null)?  null  :  this.getNullText();  StrBuilderReader.this.setNullText(getNullText());	  return    this.getNullText();    StrBuilderReader.this.setNullText(getNullText());    	non-compiled	[CE]  <identifier>  expected	105	None	replace
407	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  <identifier>  expected  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  getNullText();  String  nullText  =  getNullText();  }	          String    text    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
408	[BUG]  [BUGGY]  String  nullText  =  getStringText();  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getStringText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getStringText();	  String    nullText    =    getNumberText();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
409	[BUG]  [BUGGY]  return  text.getNullText();  String  msg  =  getText();  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  text.getNullText();  String  msg  =  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text.getNullText();  String  msg  =  getText();	  return    this.getNullText();    String    msg    =    getText();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
410	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
411	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
412	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getText();  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
413	[BUG]  [BUGGY]  String  text  =  super.getNullTextValue();  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  super.getNullTextValue();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getNullTextValue();	  String    text    =    super.getNullText();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
414	[BUG]  [BUGGY]  String  text  =  super.getNullText(true);  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  super.getNullText(true);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getNullText(true);	  String    text    =    super.getNullText();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
415	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  this.nullText  =  getNullText();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  :   "   ";  this.nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    this.nullText    :   "   ";    this.nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  type	156	None	add
416	[BUG]  [BUGGY]  String  nullText  =  super.getNullTextValue();  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  super.getNullTextValue();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  super.getNullTextValue();	  String    nullText    =    super.getNullText();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
417	[BUG]  [BUGGY]  String  nullText  =  super.getNullText(String.valueOf('  '));  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  super.getNullText(String.valueOf('  '));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  super.getNullText(String.valueOf('  '));	  String    nullText    =    super.getNullText();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
418	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return(String)this.nullText;    getNullText();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
419	[BUG]  [BUGGY]  return(String)this.NullText;  getNullText();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.NullText;  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.NullText;  getNullText();	  return(String)this.nullText;    getNullText();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
420	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
421	[BUG]  [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
422	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0  ||  statement  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0  ||  statement  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0  ||  statement  ==  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
423	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  StrBuilderReader.this.getNullText();  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  StrBuilderReader.this.getNullText();  }	  return    this.getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
424	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  StrBuilderReader.this.getNullText();  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  this.getNullText();  StrBuilderReader.this.getNullText();  }	  return    this.getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
425	[BUG]  [BUGGY]  String  text  =  getText();  return  null?  null  :  text.toString();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText();  return  null?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getText();  return  null?  null  :  text.toString();	  String    text    =    getText();    return    text    ==    null?    null    :    text.toString();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
426	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  String  msg  =  getMessage();  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  String  msg  =  getMessage();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  String  msg  =  getMessage();  }	  return    this.getNullText();    String    msg    =    getMessage();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
427	[BUG]  [BUGGY]  return  msg.getNullText();  [CE]  illegal  start  of  type  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  return  msg.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  msg.getNullText();	  return    this.getNullText();    String    msg    =    getMessage();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
428	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  msg  =  getMessage();  }  [CE]  illegal  start  of  type  [FE]                    StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  msg  =  getMessage();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  msg  =  getMessage();  }	  return    this.getNullText();    String    msg    =    getMessage();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
429	[BUG]  [BUGGY]  return(statement  ==  null)?  null  :  string.toString();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return(statement  ==  null)?  null  :  string.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(statement  ==  null)?  null  :  string.toString();	  return(strategy    ==    null)?    null    :    statement.toString();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
430	[BUG]  [BUGGY]  return(statement  ==  null)?  null  :  str.toString();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(statement  ==  null)?  null  :  str.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(statement  ==  null)?  null  :  str.toString();	  return(strategy    ==    null)?    null    :    statement.toString();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
431	[BUG]  [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  this.getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  this.getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    if(this.getNullText()!=  null)  {  String[]  nullText  =  this.getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
432	[BUG]  [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  this.getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  this.getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    if(this.getNullText()!=  null)  {  String[]  nullText  =  this.getNullText();  if(nullText  ==  null)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
433	[BUG]  [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  new  String[this.getNullText().length()  ];  System.arraycopy(this.getNullText(),  0,  this.getNumericText().length());  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  new  String[this.getNullText().length()  ];  System.arraycopy(this.getNullText(),  0,  this.getNumericText().length());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    if(this.getNullText()!=  null)  {  String[]  nullText  =  new  String[this.getNullText().length()  ];  System.arraycopy(this.getNullText(),  0,  this.getNumericText().length());  }	  	non-compiled	[CE]  illegal  start  of  type	57	None	add
434	[BUG]  [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  new  String[this.getNullText().length()  ];  System.arraycopy(this.getNullText(),  0,  this.getNullText(),  this.getName());  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  if(this.getNullText()!=  null)  {  String[]  nullText  =  new  String[this.getNullText().length()  ];  System.arraycopy(this.getNullText(),  0,  this.getNullText(),  this.getName());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    if(this.getNullText()!=  null)  {  String[]  nullText  =  new  String[this.getNullText().length()  ];  System.arraycopy(this.getNullText(),  0,  this.getNullText(),  this.getName());  }	  	non-compiled	[CE]  illegal  start  of  type	57	None	add
435	[BUG]  [BUGGY]  return  text;  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return  text;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text;	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
436	[BUG]  [BUGGY]  if(text!=  null)  {  return  this.nullText;  text  =  getText();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(text!=  null)  {  return  this.nullText;  text  =  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  return  this.nullText;  text  =  getText();  }	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
437	[BUG]  [BUGGY]  if(text  ==  null)  {  return  this.nullText;  text  =  getText();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  return  this.nullText;  text  =  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  return  this.nullText;  text  =  getText();  }	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
438	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  String.valueOf(this.nullText):  String.valueOf(this.nullText);  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  String.valueOf(this.nullText):  String.valueOf(this.nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  String.valueOf(this.nullText):  String.valueOf(this.nullText);	  return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
439	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText,  0);  [CE]  <identifier>  expected  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText,  0);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText  ==  null)?  null  :  String.valueOf(nullText,  0);	  return(nullText    ==    null)?    null    :    String.valueOf(nullText);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
440	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  null;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText  ==  null)  {  this.nullText  =  null;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
441	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  this.nullText  =  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  this.nullText  =  null;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
442	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  this.nullText  =  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  this.nullText  =  null;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
443	[BUG]  [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
444	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()    ==    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
445	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullTex  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullTex  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullTex	          String    nullText    =    getNullText();    if(getNullText()    ==    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
446	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText	          String    nullText    =    getNullText();    if(getNullText()    ==    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	118	None	replace
447	[BUG]  [BUGGY]  return  nullText;  this.nullText  =(String)this.nullText.getValue();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return  nullText;  this.nullText  =(String)this.nullText.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  nullText;  this.nullText  =(String)this.nullText.getValue();	  return    this.nullText;    this.nullText    =(String)this.nullText.getValue();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
448	[BUG]  [BUGGY]  return(String)this.nullText;  this.nullText  =(String)this.nullText.getValue();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText;  this.nullText  =(String)this.nullText.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText;  this.nullText  =(String)this.nullText.getValue();	  return    this.nullText;    this.nullText    =(String)this.nullText.getValue();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
449	[BUG]  [BUGGY]  return  this.nullText  =(String)this.nullText.getValue();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  this.nullText  =(String)this.nullText.getValue();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.nullText  =(String)this.nullText.getValue();	  return    this.nullText;    this.nullText    =(String)this.nullText.getValue();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
450	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null  ||  nullText.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null  ||  nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null  ||  nullText.length()  ==  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
451	[BUG]  [BUGGY]  return  getNullText();  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  return  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  getNullText();	  return    this.getErrorText();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
452	[BUG]  [BUGGY]  nullPointerException.printStackTrace();  [CE]  <identifier>  expected  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  nullPointerException.printStackTrace();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullPointerException.printStackTrace();	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
453	[BUG]  [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  Object>  nullText  =  new  StackOverflowError();  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  Object>  nullText  =  new  StackOverflowError();  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    StackOverflowError  <  Object>  nullText  =  new  StackOverflowError();  getNullText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
454	[BUG]  [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  Object>  getNullText();  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  StackOverflowError  <  Object>  getNullText();  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    StackOverflowError  <  Object>  getNullText();  getNullText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
455	[BUG]  [BUGGY]  return  nullText;  StrBuilderReader.this.getText();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return  nullText;  StrBuilderReader.this.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  nullText;  StrBuilderReader.this.getText();	  return    this.nullText;    StrBuilderReader.this.getText();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
456	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  StrBuilderReader.this.getText();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  StrBuilderReader.this.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=  null)?  this.nullText  :  StrBuilderReader.this.getText();	  return    this.nullText;    StrBuilderReader.this.getText();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
457	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(getNullText(),  null);  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(getNullText(),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingName(getNullText(),  null);	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
458	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(getNullText(),  null,  null);  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(getNullText(),  null,  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingName(getNullText(),  null,  null);	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
459	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(getNullText());  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(getNullText());  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingName(getNullText());	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	35	None	replace
460	[BUG]  [BUGGY]  return(text  ==  null)?  null  :  text.toString();  [CE]  cannot  find  symbol  text  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(text  ==  null)?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(text  ==  null)?  null  :  text.toString();	  return(str    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  cannot  find  symbol  text	92	None	replace
461	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  SHORT.toString();  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  return(str  ==  null)?  null  :  SHORT.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(str  ==  null)?  null  :  SHORT.toString();	  return(str    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
462	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  return  this.nullText;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  return  this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  return  this.nullText;  }	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
463	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  this.nullText  =  getNullText();  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  this.nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    this.nullText  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
464	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  this.nullText  =  new  StringBuffer();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  this.nullText  =  new  StringBuffer();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  this.nullText  =  new  StringBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
465	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  this.nullText  =  null;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  this.nullText  =  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
466	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
467	[BUG]  [BUGGY]  if(null!=  getNullText())  {  getNullText();  getNullText();  }  [CE]  illegal  start  of  type  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  if(null!=  getNullText())  {  getNullText();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  getNullText())  {  getNullText();  getNullText();  }	          getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
468	[BUG]  [BUGGY]  if(null  ==  getNullText())  {  getNullText();  getNullText();  }  [CE]  <identifier>  expected  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  if(null  ==  getNullText())  {  getNullText();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null  ==  getNullText())  {  getNullText();  getNullText();  }	          getNullText();    getNullText();    	non-compiled	[CE]  <identifier>  expected	124	None	replace
469	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNumberText();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
470	[BUG]  [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNumberText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNumberText();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
471	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNumberText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  StackOverflowError  <  String>  nullText  =  getNumberText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    StackOverflowError  <  String>  nullText  =  getNumberText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	add
472	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getNullText();  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  String  text  =  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    String  text  =  getNullText();	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
473	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  <  String>  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  <  String>  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    if(nullText!=  null)  {  StackOverflowError  <  String>	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	add
474	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "stack-overflow  error ");  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "stack-overflow  error ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "stack-overflow  error ");	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
475	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.statement ");  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.statement ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.missing.statement ");	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
476	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.no.statement ");  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.no.statement ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.no.statement ");	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
477	[BUG]  [BUGGY]  aughtExceptionHandler.handleStatement( "OverflowError ");  [CE]  illegal  start  of  type  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStatement( "OverflowError ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStatement( "OverflowError ");	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
478	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : "  <  null> ";  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  this.nullText  : "  <  null> ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  this.nullText  : "  <  null> ";	  return(this.nullText    ==    null)?    this.nullText    :   "   ";    	non-compiled	[CE]  <identifier>  expected	157	None	replace
479	[BUG]  [BUGGY]  return  null;  StrBuilderReader.this.getNullText();  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  StrBuilderReader.this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    StrBuilderReader.this.getNullText();	  	non-compiled	[CE]  <identifier>  expected	40	None	add
480	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  if(text!=  null)  {  return  text;  }  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  if(text!=  null)  {  return  text;  }	  	non-compiled	[CE]  illegal  start  of  type	40	None	add
481	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  getNullText();  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  this.getNullText();  getNullText();  }	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
482	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
483	[BUG]  [BUGGY]  return  this.getErrorText();  getNullText();  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  return  this.getErrorText();  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.getErrorText();  getNullText();	  return    this.getNullText();    getNullText();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
484	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  if(text!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  if(text!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();  if(text!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
485	[BUG]  [BUGGY]  return(String)this.nullText  =  text;  if(text  ==  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText  =  text;  if(text  ==  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText  =  text;  if(text  ==  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
486	[BUG]  [BUGGY]  return(String)this.nullText  =  text;  if(text!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText  =  text;  if(text!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText  =  text;  if(text!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
487	[BUG]  [BUGGY]  String  text  =  super.getText(String.valueOf('n'));  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.getText(String.valueOf('n'));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getText(String.valueOf('n'));	  String    text    =    super.getText();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
488	[BUG]  [BUGGY]  String  text  =  super.getText(String.valueOf( "n ");  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.getText(String.valueOf( "n ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getText(String.valueOf( "n ");	  String    text    =    super.getText();    	non-compiled	[CE]  	49	None	replace
489	[BUG]  [BUGGY]  String  text  =  super.getText(String.valueOf( "- "));  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.getText(String.valueOf( "- "));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getText(String.valueOf( "- "));	  String    text    =    super.getText();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
490	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
491	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
492	[BUG]  [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullTex  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullTex  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(nullText!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullTex	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	120	None	replace
493	[BUG]  [BUGGY]  String  null  =  getText().toString();  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getText().toString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getText().toString();	  String    null    =    getText();    	non-compiled	[CE]  not  a  statement	76	None	replace
494	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  String  nullText  =  getNullText();  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  this.getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  this.getNullText();  String  nullText  =  getNullText();  }	  return    this.getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	1	None	replace
495	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  nullText;  }  else  {  String  nullText  =  getNullText();  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  nullText;  }  else  {  String  nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  nullText;  }  else  {  String  nullText  =  getNullText();  }	  return    this.getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	1	None	replace
496	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.expression ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError( "msg.no.expression ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingError( "msg.no.expression ");	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	34	None	replace
497	[BUG]  [BUGGY]  return(this.symbol!=  null)?  this  :  this.symbol;  [CE]  cannot  find  symbol  symbol  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(this.symbol!=  null)?  this  :  this.symbol;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.symbol!=  null)?  this  :  this.symbol;	  return    this.symbol;    	non-compiled	[CE]  cannot  find  symbol  symbol	61	None	replace
498	[BUG]  [BUGGY]  return(strategy  ==  null)?  null  :  String.valueOf(strategy.toString());  [CE]  cannot  find  symbol  strategy  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(strategy  ==  null)?  null  :  String.valueOf(strategy.toString());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(strategy  ==  null)?  null  :  String.valueOf(strategy.toString());	  return(strategy    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  cannot  find  symbol  strategy	134	None	replace
499	[BUG]  [BUGGY]  return  getEmptyText();  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return  getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  getEmptyText();	  return    this.getEmptyText();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
500	[BUG]  [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
501	[BUG]  [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
502	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.class,  null);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.class,  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.class,  null);	  String    nullText    =    getEmptyText(String.class);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
503	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
504	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalStateException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
505	[BUG]  [BUGGY]  return(value  ==  null?  null  :  value.toString());  [CE]  cannot  find  symbol  value  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(value  ==  null?  null  :  value.toString());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(value  ==  null?  null  :  value.toString());	  return(type    ==    null?    null    :    type.toString());    	non-compiled	[CE]  cannot  find  symbol  value	143	None	replace
506	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  return  nullText;  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	33	None	replace
507	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	33	None	replace
508	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  throw  new  IllegalStateException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	33	None	replace
509	[BUG]  [BUGGY]  ||  getNullText()!=  null)  {  getNullText();  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  ||  getNullText()!=  null)  {  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	||  getNullText()!=  null)  {  getNullText();  }	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
510	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.null ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.null ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.missing.null ");	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	66	None	replace
511	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  getNullText();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  null  :  this.nullText;  getNullText();	  return    this.nullText;    getNullText();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	109	None	replace
512	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  return(String)this.nullText.toLowerCase();  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  return(String)this.nullText.toLowerCase();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  return(String)this.nullText.toLowerCase();  }	  	non-compiled	[CE]  ';'  expected	19	None	add
513	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  this.nullText  =(String)this.nullText.toUpperCase();  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  this.nullText  =(String)this.nullText.toUpperCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    this.nullText  =(String)this.nullText.toUpperCase();	  	non-compiled	[CE]  ';'  expected	19	None	add
514	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  returnString.valueOf(this.nullText);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  returnString.valueOf(this.nullText);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  returnString.valueOf(this.nullText);  }	  	non-compiled	[CE]  ';'  expected	19	None	add
515	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  return(String)this.nullText.toUpperCase();  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  return(String)this.nullText.toUpperCase();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    if(this.nullText!=  null)  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  return(String)this.nullText.toUpperCase();  }	  	non-compiled	[CE]  ';'  expected	19	None	add
516	[BUG]  [BUGGY]  return(String)this.nullText.toUpperCase();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toUpperCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toUpperCase();	  return(String)this.nullText.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	20	None	replace
517	[BUG]  [BUGGY]  return(String)this.nullText  =  text;  [CE]  unexpected  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText  =  text;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText  =  text;	  return(String)this.nullText    =    null;    	non-compiled	[CE]  unexpected  type	59	None	replace
518	[BUG]  [BUGGY]  return(String)this.node.getText();  [CE]  cannot  find  symbol  node  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.node.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.node.getText();	  return(String)this.text.getText();    	non-compiled	[CE]  cannot  find  symbol  node	8	None	replace
519	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "msg.no.start  of  expression ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "msg.no.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleError( "msg.no.start  of  expression ");	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	130	None	replace
520	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Failed  to  start  of  expression: "  +  text);  [CE]  cannot  find  symbol  text  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Failed  to  start  of  expression: "  +  text);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "Failed  to  start  of  expression: "  +  text);	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  text	130	None	replace
521	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  if(text  ==  null)  {  text  =  getNullText();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  if(text  ==  null)  {  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  if(text  ==  null)  {  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
522	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getNullText();  }  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  Text  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
523	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	51	None	replace
524	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  if(text  ==  null)  {  text  =  getEscapedText();  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  if(text  ==  null)  {  text  =  getEscapedText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  if(text  ==  null)  {  text  =  getEscapedText();  }	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
525	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  if(text!=  null)  {  text  =  getEscapedText();  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  if(text!=  null)  {  text  =  getEscapedText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  if(text!=  null)  {  text  =  getEscapedText();  }	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
526	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getEscapedText();  }  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getEscapedText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  Text  text  =  getEscapedText();  }	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
527	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
528	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  text  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  cannot  find  symbol  text	146	None	replace
529	[BUG]  [BUGGY]  return  text.getNullText();  getText();  [CE]  cannot  find  symbol  text  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  return  text.getNullText();  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text.getNullText();  getText();	  return    this.getNullText();    getText();    	non-compiled	[CE]  cannot  find  symbol  text	4	None	replace
530	[BUG]  [BUGGY]  return  getNullText();  getText();  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  return  getNullText();  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  getNullText();  getText();	  return    this.getNullText();    getText();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
531	[BUG]  [BUGGY]  return  nullText;  getText();  [CE]  cannot  find  symbol  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  return  nullText;  getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  nullText;  getText();	  return    this.getNullText();    getText();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
532	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null  [CE]  not  a  statement  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null	          getNullText();    if(getNullText()!=    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	135	None	replace
533	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    nullText();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
534	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.illegal.start  of  expression ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.illegal.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.illegal.start  of  expression ");	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	131	None	replace
535	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.start  of  expression ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.missing.text.start  of  expression ");	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	131	None	replace
536	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  nullText  =  getNullText();  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  nullText  =  getNullText();  }	  nullText    =    getNullText();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	80	None	replace
537	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  nullText  =  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  nullText  =  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  nullText  =  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  nullText    =    getNullText();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	80	None	replace
538	[BUG]  [BUGGY]  ||!getNullText())  {  getNullText();  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  ||!getNullText())  {  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	||!getNullText())  {  getNullText();	  if(!getNullText())    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
539	[BUG]  [BUGGY]  ErrorText.getNullText();  [CE]  cannot  find  symbol  ErrorText  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  ErrorText.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	ErrorText.getNullText();	  if(getNullText()!=    null)    {    getErrorText();    }    	non-compiled	[CE]  cannot  find  symbol  ErrorText	69	None	replace
540	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  StrBuilderReader.this.getNullText();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  StrBuilderReader.this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  null  :  this.nullText;  StrBuilderReader.this.getNullText();	  return    this.nullText;    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	108	None	replace
541	[BUG]  [BUGGY]  return  nullText;  StrBuilderReader.this.getNullText();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return  nullText;  StrBuilderReader.this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  nullText;  StrBuilderReader.this.getNullText();	  return    this.nullText;    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	108	None	replace
542	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  String.valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  String.valueOf);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  String.valueOf);	  MutableTokenizer.startString(getNullText(),    null);    	non-compiled	[CE]  cannot  find  symbol  valueOf	140	None	replace
543	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),   " ");  [CE]  cannot  find  symbol  MutableTokenizer  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),   " ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),   " ");	  MutableTokenizer.startString(getNullText(),    null);    	non-compiled	[CE]  cannot  find  symbol  MutableTokenizer	140	None	replace
544	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText  + "n ";  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText  + "n ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  null  :  this.nullText  + "n ";	  return(this.nullText    ==    null)?    null    :    this.nullText;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	56	None	replace
545	[BUG]  [BUGGY]  aughtExceptionHandler.handleNullText(getNullText(),  null);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleNullText(getNullText(),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleNullText(getNullText(),  null);	  if(getNullText().length()!=    0)    {    String    null    =    getNullText();    if(null    ==    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	161	None	replace
546	[BUG]  [BUGGY]  aughtExceptionHandler.handleNullText(getNullText());  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleNullText(getNullText());  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleNullText(getNullText());	  if(getNullText().length()!=    0)    {    String    null    =    getNullText();    if(null    ==    null)    {    return    null;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	161	None	replace
547	[BUG]  [BUGGY]  String  nullText  =  getOverflowErrorText();  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getOverflowErrorText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getOverflowErrorText();	  String    nullText    =    getErrorText();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
548	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }	          String    text    =    getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	89	None	replace
549	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	89	None	replace
550	[BUG]  [BUGGY]  if(nullText  ==  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  cannot  find  symbol  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  getNullText();  String  nullText  =  getEmptyText();  }	          getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
551	[BUG]  [BUGGY]  if(NullText.isEmpty())  {  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  cannot  find  symbol  NullText  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(NullText.isEmpty())  {  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(NullText.isEmpty())  {  getNullText();  String  nullText  =  getEmptyText();  }	          getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  cannot  find  symbol  NullText	137	None	replace
552	[BUG]  [BUGGY]  if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
553	[BUG]  [BUGGY]  if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText  [CE]  ';'  expected  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
554	[BUG]  [BUGGY]  if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullTex  [CE]  ';'  expected  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullTex  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()!=  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullTex	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	73	None	replace
555	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  {  getNullText();  String  nullText  =  getNullText();  }  [CE]  not  a  statement  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  {  getNullText();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    if(nullText!=  null)  {  StackOverflowError  {  getNullText();  String  nullText  =  getNullText();  }	  	non-compiled	[CE]  not  a  statement	70	None	add
556	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  {  getNullText();  String  nullText  =  getNullText();  return  nullText;  }  [CE]  not  a  statement  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  {  getNullText();  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    if(nullText!=  null)  {  StackOverflowError  {  getNullText();  String  nullText  =  getNullText();  return  nullText;  }	  	non-compiled	[CE]  not  a  statement	70	None	add
557	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  [CE]  variable  nullText  is  already  defined  in  method  getNullText()  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNonNullText();    	non-compiled	[CE]  variable  nullText  is  already  defined  in  method  getNullText()	31	None	replace
558	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  nullText  is  already  defined  in  method  getNullText()  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    String    nullText    =    getNonNullText();    	non-compiled	[CE]  variable  nullText  is  already  defined  in  method  getNullText()	31	None	replace
559	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null  [CE]  not  a  statement  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null	          getNullText();    if(getNullText()    ==    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	138	None	replace
560	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
561	[BUG]  [BUGGY]  if(statement!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(statement!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
562	[BUG]  [BUGGY]  ||  getNullText()  ==  null)  {  getNullText();  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  ||  getNullText()  ==  null)  {  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	||  getNullText()  ==  null)  {  getNullText();  }	  if(getNullText()    ==    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
563	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullTex  [CE]  ';'  expected  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullTex  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullTex	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	117	None	replace
564	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText  [CE]  ';'  expected  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  ';'  expected	117	None	replace
565	[BUG]  [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
566	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }	  	non-compiled	[CE]  ';'  expected	125	None	add
567	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText!=  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText!=  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    if(this.nullText!=  null)  {  this.nullText  =  String.valueOf(this.nullText);  }	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
568	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  else  {  getNullText();  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  else  {  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  else  {  getNullText();  }	  	non-compiled	[CE]  ';'  expected	125	None	add
569	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  else  {  getNullText();  return  null;  }  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  else  {  getNullText();  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    if(this.nullText  ==  null)  {  this.nullText  =  String.valueOf(this.nullText);  }  else  {  getNullText();  return  null;  }	  	non-compiled	[CE]  ';'  expected	125	None	add
570	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
571	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
572	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  nullText  =  null;  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  nullText  =  null;  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  String  nullText  =  null;  if(nullText.length()  ==  0)  {  return  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
573	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  null  :  String.valueOf(nullText);  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  null  :  String.valueOf(nullText);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    null  :  String.valueOf(nullText);	  	non-compiled	[CE]  not  a  statement	42	None	add
574	[BUG]  [BUGGY]  return  null;  this.nullText  =  null;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  null;  this.nullText  =  null;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  null;  this.nullText  =  null;	  return    this.nullText;    this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
575	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  this.nullText  =  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  this.nullText  =  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  this.nullText  =  null;  }	  return    this.nullText;    this.nullText    =    null;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
576	[BUG]  [BUGGY]  String  null  =  getEmptyText(String.valueOf('  '));  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  getEmptyText(String.valueOf('  '));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  getEmptyText(String.valueOf('  '));	  String    null    =    getEmptyText();    	non-compiled	[CE]  not  a  statement	88	None	replace
577	[BUG]  [BUGGY]  String  text  =  nullTextEscape();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  nullTextEscape();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  nullTextEscape();	  String    text    =    nullText();    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
578	[BUG]  [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement  ==  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
579	[BUG]  [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
580	[BUG]  [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
581	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(this.getNullText(),  text);  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(this.getNullText(),  text);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingName(this.getNullText(),  text);	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
582	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(this.getNullText());  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(this.getNullText());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleMissingName(this.getNullText());	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
583	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  (String)this.nullText;  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  (String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  (String)this.nullText;  }	  return(String)this.nullText;    (String)this.nullText;    	non-compiled	[CE]  not  a  statement	22	None	replace
584	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  (String)this.nullText;  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  (String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return(String)this.nullText;  (String)this.nullText;  }	  return(String)this.nullText;    (String)this.nullText;    	non-compiled	[CE]  not  a  statement	22	None	replace
585	[BUG]  [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNumberText()!=  null)  {  String  nullText  =  getNullText();  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
586	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  nullText  =  getNullText();  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    return    nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
587	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =(String)this.nullText.toLowerCase();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =(String)this.nullText.toLowerCase();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =(String)this.nullText.toLowerCase();  }	  return(String)this.nullText;    String    msg    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
588	[BUG]  [BUGGY]  if(this.getErrors()!=  null)  {  return  this.getErrors();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()!=  null)  {  return  this.getErrors();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()!=  null)  {  return  this.getErrors();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
589	[BUG]  [BUGGY]  if(this.getErrors()!=  null)  {  return  this.getNullText();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()!=  null)  {  return  this.getNullText();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()!=  null)  {  return  this.getNullText();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
590	[BUG]  [BUGGY]  if(this.getErrors()!=  null)  {  return  this.getNullText();  if(this.getErrors()!=  null)  {  return  text;  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()!=  null)  {  return  this.getNullText();  if(this.getErrors()!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()!=  null)  {  return  this.getNullText();  if(this.getErrors()!=  null)  {  return  text;  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
591	[BUG]  [BUGGY]  return(value  ==  null)?  getNullText()  : "null ";  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  return(value  ==  null)?  getNullText()  : "null ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(value  ==  null)?  getNullText()  : "null ";	  return(str    ==    null)?    getNullText()    :   "null   ";    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
592	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  this.nullText  =(String)this.nullText;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  this.nullText  =(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  this.nullText  =(String)this.nullText;  }	  return(String)this.nullText;    this.nullText    =(String)this.nullText;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
593	[BUG]  [BUGGY]  String  text  =  getEmptyText(true);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getEmptyText(true);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getEmptyText(true);	  String    text    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
594	[BUG]  [BUGGY]  String  text  =  getEmptyText().trim();  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  getEmptyText().trim();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getEmptyText().trim();	  String    text    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
595	[BUG]  [BUGGY]  return  nullText;  this.nullText  =  getNullText();  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  return  nullText;  this.nullText  =  getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  nullText;  this.nullText  =  getNullText();	  return    this.nullText;    this.nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
596	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  }  else  {  this.nullText  =  getNullText();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  }  else  {  this.nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return  this.nullText;  }  else  {  this.nullText  =  getNullText();  }	  return    this.nullText;    this.nullText    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
597	[BUG]  [BUGGY]  getStatement().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  getStatement().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getStatement().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  getText().length()    ==    0)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	79	None	replace
598	[BUG]  [BUGGY]  getNullText().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  getNullText().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getNullText().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null	  getText().length()    ==    0)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	79	None	replace
599	[BUG]  [BUGGY]  nullText  =  getNullText();  String  text  =  getString();  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  nullText  =  getNullText();  String  text  =  getString();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	nullText  =  getNullText();  String  text  =  getString();	          String    text    =    getNullText();    String    text    =    getString();    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
600	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText().trim();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
601	[BUG]  [BUGGY]  return(String)text.toLowerCase();  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  return(String)text.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)text.toLowerCase();	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
602	[BUG]  [BUGGY]  return(String)this.NullText;  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.NullText;  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.NullText;	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    return(String)this.nullText;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
603	[BUG]  [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText  + "n ";  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  null  :  this.nullText  + "n ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=  null)?  null  :  this.nullText  + "n ";	  return(this.nullText!=    null)?    null    :    this.nullText;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
604	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.valueOf( "-- "));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.valueOf( "-- "));  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.valueOf( "-- "));	  String    nullText    =    getEmptyText(String.valueOf(   "-   "));    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
605	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }	          String    nullText    =    getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
606	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
607	[BUG]  [BUGGY]  ((  StackOverflowError)getSourceError()).printStackTrace();  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  ((  StackOverflowError)getSourceError()).printStackTrace();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	((  StackOverflowError)getSourceError()).printStackTrace();	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
608	[BUG]  [BUGGY]  if(this.startsWithEmpty)  {  return  this.nullText;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.startsWithEmpty)  {  return  this.nullText;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.startsWithEmpty)  {  return  this.nullText;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
609	[BUG]  [BUGGY]  if(this.startsWithEmpty)  {  return  null;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.startsWithEmpty)  {  return  null;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.startsWithEmpty)  {  return  null;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
610	[BUG]  [BUGGY]  if(this.startsWithNullText)  {  return  null;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.startsWithNullText)  {  return  null;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.startsWithNullText)  {  return  null;  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
611	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  >=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  >=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  if(nullText  >=  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
612	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  String.valueOf(null),  null);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  String.valueOf(null),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  String.valueOf(null),  null);	  MutableTokenizer.startString(getNullText(),    nullText,    null);    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
613	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  nullText);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  nullText);	  MutableTokenizer.startString(getNullText(),    nullText,    null);    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
614	[BUG]  [BUGGY]          getNullText();    getNullText();  if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  null  =  new  StackOverflowError();  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  null  =  new  StackOverflowError();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  null  =  new  StackOverflowError();  getNullText();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
615	[BUG]  [BUGGY]          getNullText();    getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  getNullText();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
616	[BUG]  [BUGGY]          getNullText();    getNullText();  if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  getNullText();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
617	[BUG]  [BUGGY]          getNullText();    getNullText();  if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  has  =  new  StackOverflowError();  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  has  =  new  StackOverflowError();  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    if(null!=  getNullText())  {  StackOverflowError  <  StackOverflowError>  has  =  new  StackOverflowError();  getNullText();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
618	[BUG]  [BUGGY]          getNullText();    getNullText();  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    getNullText();  getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        getNullText();    getNullText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	123	None	add
619	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
620	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getNullText();  }	          String    text    =    getNullText();    String    text    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
621	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	[Delete]	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
622	[BUG]  [BUGGY]  aughtExceptionHandler(getNullText());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler(getNullText());  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler(getNullText());	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
623	[BUG]  [BUGGY]  aughtExceptionHandler(getNullText(),  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler(getNullText(),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler(getNullText(),  null);	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
624	[BUG]  [BUGGY]  aughtException( " ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  aughtException( " ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtException( " ");	  if(getNullText()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
625	[BUG]  [BUGGY]  String  null  =  super.getNullText();  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  null  =  super.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  null  =  super.getNullText();	  String    null    =    getEmptyText();    	non-compiled	[CE]  not  a  statement	88	None	replace
626	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	  	non-compiled	[CE]  not  a  statement	42	None	add
627	[BUG]  [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  return  String.valueOf(nullText);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(nullText  ==  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  return  String.valueOf(nullText);  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText    ==    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  return  String.valueOf(nullText);  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	add
628	[BUG]  [BUGGY]  String  nullText  =  super.getEmptyText(String.class);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  super.getEmptyText(String.class);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  super.getEmptyText(String.class);	  String    nullText    =    super.getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
629	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  this.nullText  =(String)this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return(String)this.nullText;  this.nullText  =(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return(String)this.nullText;  this.nullText  =(String)this.nullText;  }	  return(String)this.nullText;    this.nullText    =(String)this.nullText;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
630	[BUG]  [BUGGY]  return(this.getErrorText()  ==  null)?  null  :  this.getErrorText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  return(this.getErrorText()  ==  null)?  null  :  this.getErrorText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.getErrorText()  ==  null)?  null  :  this.getErrorText();	  return    this.getErrorText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
631	[BUG]  [BUGGY]  return(this.getErrorText()  ==  null)?  this  :  this.getErrorText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return(this.getErrorText()  ==  null)?  this  :  this.getErrorText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.getErrorText()  ==  null)?  this  :  this.getErrorText();	  return    this.getErrorText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
632	[BUG]  [BUGGY]  if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	132	None	replace
633	[BUG]  [BUGGY]  if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	132	None	replace
634	[BUG]  [BUGGY]  if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null)  {  return  TextUtilities.EMPTY_STRING_ATTRIBUTE;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null)  {  return  TextUtilities.EMPTY_STRING_ATTRIBUTE;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.isEmpty())  {  String  text  =  this.getText();  if(text!=  null)  {  return  TextUtilities.EMPTY_STRING_ATTRIBUTE;  }	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	132	None	replace
635	[BUG]  [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
636	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  getText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  text.getNullText();  getText();  }	  return    this.getNullText();    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
637	[BUG]  [BUGGY]  String  text  =  getText().split( "n ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText().split( "n ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  getText().split( "n ");	  String    text    =    getText().trim();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
638	[BUG]  [BUGGY]  if(stack.isEmpty())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(stack.isEmpty())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(stack.isEmpty())  {  getNullText();  if(getNullText()!=  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	135	None	replace
639	[BUG]  [BUGGY]  if(state!=  StackOverflowError)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(state!=  StackOverflowError)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(state!=  StackOverflowError)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	135	None	replace
640	[BUG]  [BUGGY]  if(state  ==  StackOverflowError)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(state  ==  StackOverflowError)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(state  ==  StackOverflowError)  {  getNullText();  if(getNullText()!=  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	135	None	replace
641	[BUG]  [BUGGY]  return(StringText!=  null)?  null  :  String.valueOf(String.valueOf(nullText));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(StringText!=  null)?  null  :  String.valueOf(String.valueOf(nullText));  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(StringText!=  null)?  null  :  String.valueOf(String.valueOf(nullText));	  return(nullText!=    null)?    null    :    String.valueOf(nullText);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
642	[BUG]  [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNonNullText();  }	          String    nullText    =    getNullText();    String    nullText    =    getNonNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
643	[BUG]  [BUGGY]  return  text  ==  null?  null  :  text.trim();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return  text  ==  null?  null  :  text.trim();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text  ==  null?  null  :  text.trim();	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
644	[BUG]  [BUGGY]  return  text!=  null?  null  :  text.trim();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  text!=  null?  null  :  text.trim();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  text!=  null?  null  :  text.trim();	  return    this.nullText;    String    text    =    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
645	[BUG]  [BUGGY]  return(this.getNumberText()  ==  null)?  this  :  this.getNumberText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  return(this.getNumberText()  ==  null)?  this  :  this.getNumberText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.getNumberText()  ==  null)?  this  :  this.getNumberText();	  return    this.getNumberText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
646	[BUG]  [BUGGY]  return(this.getNumberText()  ==  null)?  this  :  text.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return(this.getNumberText()  ==  null)?  this  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.getNumberText()  ==  null)?  this  :  text.toString();	  return    this.getNumberText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
647	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  nullText();  }	          String    text    =    getNullText();    String    text    =    nullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
648	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  nullText();  }	          String    text    =    getNullText();    String    text    =    nullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
649	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  return  this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  if(this.nullText  ==  null)  {  return  this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    if(this.nullText  ==  null)  {  return  this.nullText;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	add
650	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText,  this.string);  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText;  (this.nullText  ==  null)?  null  :  this.nullText,  this.string);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText    ==    null)?    null    :    this.nullText;    (this.nullText  ==  null)?  null  :  this.nullText,  this.string);	  	non-compiled	[CE]  not  a  statement	55	None	add
651	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
652	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
653	[BUG]  [BUGGY]  if(start)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(start)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(start)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
654	[BUG]  [BUGGY]  if(startsWith( "n "))  {  getNullText();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(startsWith( "n "))  {  getNullText();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startsWith( "n "))  {  getNullText();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
655	[BUG]  [BUGGY]  if(start)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(start)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(start)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
656	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	150	None	replace
657	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	150	None	replace
658	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Failed  to  start  of  expression: "  +  this.getText());  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "Failed  to  start  of  expression: "  +  this.getText());  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "Failed  to  start  of  expression: "  +  this.getText());	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	130	None	replace
659	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  return  text  ==  null?  null  :  text.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  return  text  ==  null?  null  :  text.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  return  text  ==  null?  null  :  text.toString();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
660	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  if(text!=  null)  {  return  text.toString();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  if(text!=  null)  {  return  text.toString();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  if(text!=  null)  {  return  text.toString();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
661	[BUG]  [BUGGY]  return  null;  String  text  =  getText();  if(text  ==  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  return  null;  String  text  =  getText();  if(text  ==  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return    null;    String  text  =  getText();  if(text  ==  null)  {  return  text;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	40	None	add
662	[BUG]  [BUGGY]  if(stack.isEmpty())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(stack.isEmpty())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(stack.isEmpty())  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	          getNullText();    if(getNullText()    ==    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	138	None	replace
663	[BUG]  [BUGGY]  if(state!=  StackOverflowError)  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(state!=  StackOverflowError)  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(state!=  StackOverflowError)  {  getNullText();  if(getNullText()  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	          getNullText();    if(getNullText()    ==    null)    {    String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	138	None	replace
664	[BUG]  [BUGGY]  if(getErrorCount()  >  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrorCount()  >  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrorCount()  >  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	119	None	replace
665	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	119	None	replace
666	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }	  return    this.nullText;    this.nullText    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	81	None	replace
667	[BUG]  [BUGGY]  return(String)this.nullText.toLowerCase();  String  thisText  =(String)this.nullText.toLowerCase();  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(String)this.nullText.toLowerCase();  String  thisText  =(String)this.nullText.toLowerCase();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText.toLowerCase();    String  thisText  =(String)this.nullText.toLowerCase();	  	non-compiled	[CE]  not  a  statement	19	None	add
668	[BUG]  [BUGGY]  return(String)this.nullText  =  getEmptyText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.nullText  =  getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.nullText  =  getEmptyText();	  return(String)this.nullText    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
669	[BUG]  [BUGGY]  if(getNullText()!=  null  ||  getErrorText()!=  null)  {  getErrorText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null  ||  getErrorText()!=  null)  {  getErrorText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null  ||  getErrorText()!=  null)  {  getErrorText();  }	  if(getNullText()!=    null)    {    getErrorText();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
670	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.class,  text);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.class,  text);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.class,  text);	  String    nullText    =    getEmptyText(String.class);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	129	None	replace
671	[BUG]  [BUGGY]  if(StringUtils.isEmpty(getNullText()))  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(StringUtils.isEmpty(getNullText()))  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(StringUtils.isEmpty(getNullText()))  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	  String    null    =    getNullText();    if(null!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	86	None	replace
672	[BUG]  [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()!=  null)  {  return  text.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()!=  null)  {  return  text.getNullText();  }	  return    this.getNullText();    String    msg    =    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
673	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
674	[BUG]  [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
675	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nu  [CE]  ';'  expected  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nu  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nu	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	74	None	replace
676	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    StackOverflowError      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
677	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =  this.nullText.toLowerCase();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =  this.nullText.toLowerCase();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  msg  =  this.nullText.toLowerCase();  }	  return(String)this.nullText;    String    msg    =(String)this.nullText.toLowerCase();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
678	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	149	None	replace
679	[BUG]  [BUGGY]  if(startsWith( "n "))  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(startsWith( "n "))  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startsWith( "n "))  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	149	None	replace
680	[BUG]  [BUGGY]  if(startsWith( "- "))  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(startsWith( "- "))  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startsWith( "- "))  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	149	None	replace
681	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  StrBuilderReader.this.getText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  StrBuilderReader.this.getText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return  this.nullText;  }  else  {  StrBuilderReader.this.getText();  }	  return    this.nullText;    StrBuilderReader.this.getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	110	None	replace
682	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	136	None	replace
683	[BUG]  [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	136	None	replace
684	[BUG]  [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isOverflowError())  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	136	None	replace
685	[BUG]  [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	136	None	replace
686	[BUG]  [BUGGY]  String  nullText  =  getStackOverflowErrorText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  String  nullText  =  getStackOverflowErrorText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getStackOverflowErrorText();	  String    nullText    =    getErrorText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
687	[BUG]  [BUGGY]  if(status  ==  NullPointerException.EXPR_RESULT)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(status  ==  NullPointerException.EXPR_RESULT)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(status  ==  NullPointerException.EXPR_RESULT)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
688	[BUG]  [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
689	[BUG]  [BUGGY]  if(statement!=  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(statement!=  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(statement!=  null)  {  nullText  =  getNullText();  if(nullText.length()!=  0)  {  return  null;  }	  nullText    =    getNullText();    if(nullText.length()!=    0)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
690	[BUG]  [BUGGY]  if(null  ==  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(null  ==  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null  ==  null)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }	  String    null    =    getNullText();    if(null    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
691	[BUG]  [BUGGY]  if(null  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(null  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	  String    null    =    getNullText();    if(null    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
692	[BUG]  [BUGGY]  String  text  =  super.getText(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.getText(true);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getText(true);	  String    text    =    super.getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
693	[BUG]  [BUGGY]  String  text  =  super.getText(String.class);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.getText(String.class);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  super.getText(String.class);	  String    text    =    super.getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
694	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  String  nullText  =  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  String  nullText  =  getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  String  nullText  =  getNullText();  }	  return    this.getNullText();    String    nullText    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
695	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getText();  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
696	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getText();  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
697	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
698	[BUG]  [BUGGY]  if(null!=  getNullText())  {  getNullText();  }  else  {  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  if(null!=  getNullText())  {  getNullText();  }  else  {  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  getNullText())  {  getNullText();  }  else  {  getNullText();  }	          getNullText();    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	124	None	replace
699	[BUG]  [BUGGY]  if(null!=  getNullText())  {  getNullText();  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  if(null!=  getNullText())  {  getNullText();  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  getNullText())  {  getNullText();  getNullText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          getNullText();    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	124	None	replace
700	[BUG]  [BUGGY]  if(null!=  getNullText())  {  getNullText();  getNullText();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  if(null!=  getNullText())  {  getNullText();  getNullText();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(null!=  getNullText())  {  getNullText();  getNullText();  }  else  {  throw  new  IllegalStateException( " ");  }	          getNullText();    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	124	None	replace
701	[BUG]  [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
702	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
703	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    StackOverflowError      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  getNullText();  if(getNullText()!=  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
704	[BUG]  [BUGGY]  String  msg  =  getStdText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  msg  =  getStdText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  msg  =  getStdText();	  String    msg    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
705	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getString();  }	          String    text    =    getNullText();    String    text    =    getString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	147	None	replace
706	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getString();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getString();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getString();  }	          String    text    =    getNullText();    String    text    =    getString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	147	None	replace
707	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	147	None	replace
708	[BUG]  [BUGGY]  MutableTokenizer.checkState(getNullText(),  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.checkState(getNullText(),  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.checkState(getNullText(),  null);	  MutableTokenizer.checkNotNull(getNullText(),    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	96	None	replace
709	[BUG]  [BUGGY]  if(getErrorCount()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrorCount()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrorCount()  >  0)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	117	None	replace
710	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	117	None	replace
711	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }	  return    this.getNullText();    StrBuilderReader.this.setNullText(getNullText());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	105	None	replace
712	[BUG]  [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getNullText()  ==  null)  {  return  this.getNullText();  }  else  {  StrBuilderReader.this.setNullText(getNullText());  }	  return    this.getNullText();    StrBuilderReader.this.setNullText(getNullText());    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	105	None	replace
713	[BUG]  [BUGGY]  MutableTokenizer.startString(getNullText(),  String.class);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getNullText(),  String.class);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getNullText(),  String.class);	  MutableTokenizer.startString(getNullText(),    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	140	None	replace
714	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  return(String)this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  return(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  return(String)this.nullText;  }	  return(String)this.nullText;    (String)this.nullText;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
715	[BUG]  [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	155	None	replace
716	[BUG]  [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  text  =  getText();  if(text  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  text  =  getText();  if(text  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  text  =  getText();  if(text  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	155	None	replace
717	[BUG]  [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	155	None	replace
718	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  getNullText();  String  nullText  =  getEmptyText();  }	          getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	137	None	replace
719	[BUG]  [BUGGY]  if(!getNullText())  {  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(!getNullText())  {  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(!getNullText())  {  getNullText();  String  nullText  =  getEmptyText();  }	          getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	137	None	replace
720	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  String  nullText  =  getNullText().trim();  if(nullText  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	144	None	replace
721	[BUG]  [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	144	None	replace
722	[BUG]  [BUGGY]  if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  null;  if(this.nullText!=  null)  {  return  this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  null;  if(this.nullText!=  null)  {  return  this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)return  null;  if(this.nullText!=  null)return  null;  if(this.nullText!=  null)  {  return  this.nullText;  }	  return(this.nullText!=    null)?    null    :    this.nullText;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
723	[BUG]  [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	121	None	replace
724	[BUG]  [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	121	None	replace
725	[BUG]  [BUGGY]  if(status  ==  NullPointerException.NULL)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(status  ==  NullPointerException.NULL)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(status  ==  NullPointerException.NULL)  {  nullText  =  getNullText();  if(nullText  ==  null)  {  return  null;  }	  nullText    =    getNullText();    if(nullText    ==    null)    {    return    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	121	None	replace
726	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  <  String>  error  =  new  StackOverflowError();  text  =  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  <  String>  error  =  new  StackOverflowError();  text  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    if(nullText!=  null)  {  StackOverflowError  <  String>  error  =  new  StackOverflowError();  text  =  getNullText();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	add
727	[BUG]  [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  <  String>  error  =  new  StackOverflowError();  text  =  getNullText();  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          String    text    =    getNullText();    String  nullText  =  getNullText();  if(nullText!=  null)  {  StackOverflowError  <  String>  error  =  new  StackOverflowError();  text  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                String        text        =        getNullText();        String    nullText    =    getNullText();    if(nullText!=  null)  {  StackOverflowError  <  String>  error  =  new  StackOverflowError();  text  =  getNullText();  return  nullText;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	add
728	[BUG]  [BUGGY]  return(this.str  ==  null)?  null  :  this.str.toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(this.str  ==  null)?  null  :  this.str.toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.str  ==  null)?  null  :  this.str.toString();	  return(str    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
729	[BUG]  [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(getNullText()  ==  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()  ==  null)  {  String  nullText  =  getNullText().trim();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()    ==    null)    {    String    nullText    =    getNullText().trim();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	107	None	replace
730	[BUG]  [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText  + ", ";  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  return(this.nullText  ==  null)?  null  :  this.nullText  + ", ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText  ==  null)?  null  :  this.nullText  + ", ";	  return(this.nullText    ==    null)?    null    :    this.nullText;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
731	[BUG]  [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  StrBuilderReader.this.getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText  ==  null)  {  return  this.nullText;  StrBuilderReader.this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText  ==  null)  {  return  this.nullText;  StrBuilderReader.this.getNullText();  }	  return    this.nullText;    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	108	None	replace
732	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	146	None	replace
733	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getEmptyText();  }	          String    text    =    getNullText();    String    text    =    getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	146	None	replace
734	[BUG]  [BUGGY]  MutableTokenizer.startString(getEmptyText(),  nullText,  null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenizer.startString(getEmptyText(),  nullText,  null);  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	MutableTokenizer.startString(getEmptyText(),  nullText,  null);	  MutableTokenizer.startString(getNullText(),    nullText,    null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	139	None	replace
735	[BUG]  [BUGGY]  if(StrBuilderReader.this.getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(StrBuilderReader.this.getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(StrBuilderReader.this.getNullText()!=  null)  {  String  text  =  getNullText();  StrBuilderReader.this.getNullText();  }	          String    text    =    getNullText();    StrBuilderReader.this.getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	89	None	replace
736	[BUG]  [BUGGY]  if(getNullText()!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText()!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText()!=  null)  {  nullText  =  getNullText();  if(nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  nullText    =    getNullText();    if(nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
737	[BUG]  [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	154	None	replace
738	[BUG]  [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  return(String)this.nullText;  if(this.nullText!=  null)  {  text  =  getText();  if(text  ==  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	154	None	replace
739	[BUG]  [BUGGY]  return(String)msg.getText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(String)msg.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)msg.getText();	  return(String)symbol.getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
740	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  String  value  =  this.nullText.toString();  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText  ==  null)  {  String  value  =  this.nullText.toString();  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    if(this.nullText  ==  null)  {  String  value  =  this.nullText.toString();  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	125	None	add
741	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText!=  null)  {  String  value  =  this.nullText.toString();  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :  String.valueOf(this.nullText);  if(this.nullText!=  null)  {  String  value  =  this.nullText.toString();  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :    String.valueOf(this.nullText);    if(this.nullText!=  null)  {  String  value  =  this.nullText.toString();  if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	125	None	add
742	[BUG]  [BUGGY]  return(this.symbol!=  null? "null "  :  this.symbol);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(this.symbol!=  null? "null "  :  this.symbol);  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.symbol!=  null? "null "  :  this.symbol);	  return    this.symbol;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
743	[BUG]  [BUGGY]  return(this.symbol!=  null?  this.symbol.toString()  : "null ";  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return(this.symbol!=  null?  this.symbol.toString()  : "null ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.symbol!=  null?  this.symbol.toString()  : "null ";	  return    this.symbol;    	non-compiled	[CE]  	61	None	replace
744	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
745	[BUG]  [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(startTime  ==  null)  {  getNullText();  if(getNullText()!=  null)  {  String  nullText  =  getNullText();  if(nullText  ==  null)  {  return  nullText;  }	          getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText    ==    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
746	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
747	[BUG]  [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(text!=  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text!=  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
748	[BUG]  [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(text  ==  null)  {  String  text  =  getNullText();  text  =  getEscapedText();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          String    text    =    getNullText();    String    text    =    getEscapedText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
749	[BUG]  [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  String  nullText  =  getNullText();  String  nullText  =  getEmptyText();  }	          String    nullText    =    getNullText();    String    nullText    =    getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
750	[BUG]  [BUGGY]  ||  getNullText()!=  null;  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  ||  getNullText()!=  null;  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	||  getNullText()!=  null;	  if(getNullText()!=    null)    {    getNullText();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
751	[BUG]  [BUGGY]  String  nullText  =  getEmptyText(String.valueOf( "- ");  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  nullText  =  getEmptyText(String.valueOf( "- ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  nullText  =  getEmptyText(String.valueOf( "- ");	  String    nullText    =    getEmptyText(String.valueOf(   "-   "));    	non-compiled	[CE]  	112	None	replace
752	[BUG]  [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getErrors()  >  0)  {  String  nullText  =  getNullText().trim();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
753	[BUG]  [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNumberText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  String  nullText  =  getNullText().trim();  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
754	[BUG]  [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(getNumberText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNumberText()!=  null)  {  String  nullText  =  getNullText().trim();  if(getNullText()!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText().trim();    if(getNullText()!=    null)    {    String    nullText    =    getNullText().trim();    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
755	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text  ==  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text  ==  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  this.getText();  if(text  ==  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    this.getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	152	None	replace
756	[BUG]  [BUGGY]  return(String)str.text.getText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return(String)str.text.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)str.text.getText();	  return(String)this.text.getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
757	[BUG]  [BUGGY]  return(String)this.textBuffer.getText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return(String)this.textBuffer.getText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.textBuffer.getText();	  return(String)this.text.getText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
758	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  String  nullText  =  getNullText();  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  String  nullText  =  getNullText();  return  nullText;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	add
759	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  ExceptionEncoding.ERROR;  String  nullText  =  getNullText();  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  ExceptionEncoding.ERROR;  String  nullText  =  getNullText();  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    if(getNullText()!=  null)  {  StackOverflowError  <  ExceptionEncoding.ERROR;  String  nullText  =  getNullText();  return  nullText;  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	add
760	[BUG]  [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  String  nullText  =  getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]          getNullText();    String  nullText  =  getNullText();  if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  String  nullText  =  getNullText();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	                getNullText();        String    nullText    =    getNullText();    if(getNullText()!=  null)  {  StackOverflowError  <  StackOverflowError>  error  =  new  StackOverflowError();  String  nullText  =  getNullText();  }	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	add
761	[BUG]  [BUGGY]  if(this.getErrors()  >  0)  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()  >  0)  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()  >  0)  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	104	None	replace
762	[BUG]  [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getNullText();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getNullText();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()  >  0)  {  return  this.getNullText();  }  else  {  String  text  =  this.getText();  if(text!=  null)  {  return  text;  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	104	None	replace
763	[BUG]  [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getNullText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getNullText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()  >  0)  {  return  this.getNullText();  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	104	None	replace
764	[BUG]  [BUGGY]  if(this.startsWithNullText)  {  return(String)this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.startsWithNullText)  {  return(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.startsWithNullText)  {  return(String)this.nullText;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	116	None	replace
765	[BUG]  [BUGGY]  if(this.startsWithEmpty)  {  return(String)this.nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.startsWithEmpty)  {  return(String)this.nullText;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.startsWithEmpty)  {  return(String)this.nullText;  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    if(this.nullText    ==    null)    {    this.nullText    =    null;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	116	None	replace
766	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	153	None	replace
767	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	153	None	replace
768	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null  ||  text.length()  ==  0)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null  ||  text.length()  ==  0)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  getText();  if(text  ==  null  ||  text.length()  ==  0)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	153	None	replace
769	[BUG]  [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText!=  null)  {  String  nullText  =  getNullText();  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
770	[BUG]  [BUGGY]  getDocument().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  getDocument().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getDocument().length()  ==  0)  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  null;  }	  getText().length()    ==    0)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	79	None	replace
771	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null  ||  text.length()  ==  0)  {  return  text;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	151	None	replace
772	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  return  TextUtilities.EMPTY_STRING_TEXT;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  return  TextUtilities.EMPTY_STRING_TEXT;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  String  text  =  getText();  if(text!=  null)  {  return  TextUtilities.EMPTY_STRING_TEXT;  }	  return    this.nullText;    if(this.nullText!=    null)    {    String    text    =    getText();    if(text!=    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	151	None	replace
773	[BUG]  [BUGGY]  getErrorText( "StackOverflowError ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  getErrorText( "StackOverflowError ");  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	getErrorText( "StackOverflowError ");	  getErrorText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
774	[BUG]  [BUGGY]  return  this.text.getEmptyText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  return  this.text.getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return  this.text.getEmptyText();	  return    this.getEmptyText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
775	[BUG]  [BUGGY]  String  text  =  nullText.getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  String  text  =  nullText.getNullText();  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	String  text  =  nullText.getNullText();	  String    text    =    super.getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
776	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  String  nullText  =  getNullText();  if(nullText!=  null)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()    ==    null)    {    String    nullText    =    getNullText();    if(nullText!=    null)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	118	None	replace
777	[BUG]  [BUGGY]  return(String)this.getNullText();  (String)this.getNullText();  [CE]  not  a  statement  [FE]    StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  (String)this.getNullText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    (String)this.getNullText();	  	non-compiled	[CE]  not  a  statement	57	None	add
778	[BUG]  [BUGGY]  return(String)this.getNullText();  String  msg  =(String)this.getEmptyText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  String  msg  =(String)this.getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    String  msg  =(String)this.getEmptyText();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	add
779	[BUG]  [BUGGY]  return(String)this.getNullText();  (String)this.getEmptyText();  [CE]  not  a  statement  [FE]        StackOverflowError    [CONTEXT]        [BUGGY]  return(String)this.getNullText();  (String)this.getEmptyText();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(String)this.getNullText();    (String)this.getEmptyText();	  	non-compiled	[CE]  not  a  statement	57	None	add
780	[BUG]  [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        StackOverflowError      [CONTEXT]        [BUGGY]  if(nullText  ==  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(nullText  ==  null)  {  String  nullText  =  getNullText().trim();  String  nullText  =  getNullText().trim();  }	          String    nullText    =    getNullText().trim();    String    nullText    =    getNullText().trim();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
781	[BUG]  [BUGGY]  return(strategy  ==  null)?  null  :  getText().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  return(strategy  ==  null)?  null  :  getText().toString();  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(strategy  ==  null)?  null  :  getText().toString();	  return(strategy    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	134	None	replace
782	[BUG]  [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.bad.text.start  of  expression ");  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          StackOverflowError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStackOverflowError( "msg.bad.text.start  of  expression ");  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	aughtExceptionHandler.handleStackOverflowError( "msg.bad.text.start  of  expression ");	  return    this.getNullText();    if(this.isEmpty())    {    String    text    =    this.getText();    if(text!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	131	None	replace
783	[BUG]  [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.nullText!=  null)  {  return(String)this.nullText;  }  else  {  this.nullText  =  getNullText();  if(this.nullText!=  null)  {  throw  new  NullPointerException( " ");  }	  return(String)this.nullText;    if(this.nullText!=    null)    {    this.nullText    =    getNullText();    if(this.nullText!=    null)    {    throw    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	114	None	replace
784	[BUG]  [BUGGY]  if(getNullText().length()  ==  0)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(getNullText().length()  ==  0)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(getNullText().length()  ==  0)  {  String  null  =  getNullText();  if(null  ==  null)  {  return  null;  }	  if(getNullText().length()!=    0)    {    String    null    =    getNullText();    if(null    ==    null)    {    return    null;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
785	[BUG]  [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getEmptyText();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getEmptyText();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()  >  0)  {  return  this.getEmptyText();  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	106	None	replace
786	[BUG]  [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getErrors();  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  StackOverflowError      [CONTEXT]        [BUGGY]  if(this.getErrors()  >  0)  {  return  this.getErrors();  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(this.getErrors()  >  0)  {  return  this.getErrors();  }	  return    this.getNullText();    if(this.getNullText()!=    null)    {    String    text    =    this.getText();    if(text    ==    null)    {    return    text;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	106	None	replace
787	[BUG]  [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ";  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(this.nullText!=  null)?  this.nullText  :   "   ";  (this.nullText  ==  null)?  this.nullText  : "n ";  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(this.nullText!=    null)?    this.nullText    :   "   ";    (this.nullText  ==  null)?  this.nullText  : "n ";	  	non-compiled	[CE]  not  a  statement	158	None	add
788	[BUG]  [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  return(nullText!=  null)?  null  :  String.valueOf(nullText);  if(nullText  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	return(nullText!=    null)?    null    :    String.valueOf(nullText);    if(nullText  ==  null)  {  String  null  =  getNullText();  if(null!=  null)  {  return  null;  }	  	non-compiled	[CE]  not  a  statement	44	None	add
789	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              StackOverflowError      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	replace
790	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                StackOverflowError      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }  [BUGGY]      return  nullText;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  getNullText  [RETURN_TYPE]  String  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.8164965809277261	158	158	2	replace	if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  String  nullText  =  getNullText();  if(nullText.length()  ==  0)  {  return  nullText;  }	          String    nullText    =    getNullText();    if(getNullText()!=    null)    {    String    nullText    =    getNullText();    if(nullText.length()    ==    0)    {    return    nullText;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	120	None	replace
