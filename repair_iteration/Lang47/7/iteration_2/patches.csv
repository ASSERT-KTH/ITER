bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(length))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  ensureCapacity(size  +  2);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  2);	  ensureCapacity(size    *    2);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
5	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
6	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
7	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
8	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(length);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(length);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(length);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
9	[BUG]  [BUGGY]  safeAccess(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen  +  width);	  safeAccess(strLen);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  safeAdd(strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAdd(strLen);	  safeAccess(strLen);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
11	[BUG]  [BUGGY]  ensureCapacity(strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen);	  safeAccess(strLen);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
12	[BUG]  [BUGGY]  EnsureCapacity(size  +  strLen  +  2);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  +  strLen  +  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  +  strLen  +  2);	  EnsureCapacity(size    +    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  EnsureCapacity(size  +  strLen  +  3);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  +  strLen  +  3);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  +  strLen  +  3);	  EnsureCapacity(size    +    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  safeAccess(size  +  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(size  +  strLen)  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
15	[BUG]  [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }	  safeAccess(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
16	[BUG]  [BUGGY]  safeAccess(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
17	[BUG]  [BUGGY]  safeMultiply(length)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(length)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(length)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
18	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
19	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
20	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
21	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  2);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
22	[BUG]  [BUGGY]  ensureCapacity(size  *  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  strLen  +  1);	  ensureCapacity(size    *    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  ensureCapacity(strLen  +  length);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  length);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  length);	  ensureCapacity(length    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  ensureCapacity(length  +  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  +  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  +  strLen  +  1);	  ensureCapacity(length    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  EnsureCapacity(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  +  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  +  strLen);	  ensureCapacity(length    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    length;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
27	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  }  else  {  size  +=  length;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  }  else  {  size  +=  length;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  }  else  {  size  +=  length;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    length;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
28	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  length);	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    length;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
29	[BUG]  [BUGGY]  ensureCapacity(strLen  +  size  -  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  size  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  size  -  1);	  ensureCapacity(size    +    strLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
30	[BUG]  [BUGGY]  ensureCapacity(length  +  strLen  -  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  +  strLen  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  +  strLen  -  1);	  ensureCapacity(size    +    strLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  width);	  StrBuilder.this.appendFixedWidthPadRight(size);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
32	[BUG]  [BUGGY]  safeGet(size,  buffer,  strLen  +  width));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  buffer,  strLen  +  width));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size,  buffer,  strLen  +  width));	  safeGet(strLen,    buffer,    size    +    width));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
33	[BUG]  [BUGGY]  safeGet(size,  buffer,  size  +  strLen));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  buffer,  size  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size,  buffer,  size  +  strLen));	  safeGet(strLen,    buffer,    size    +    width));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
34	[BUG]  [BUGGY]  safeGet(strLen,  buffer,  size  +  strLen));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  buffer,  size  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen,  buffer,  size  +  strLen));	  safeGet(strLen,    buffer,    size    +    width));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
35	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
36	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  padLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  padLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  +  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
37	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
38	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  strLen  +  width);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
39	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  width);	  ensureCapacity(width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
40	[BUG]  [BUGGY]  safeGet(strLen,  width  -  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width  -  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen,  width  -  strLen))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
41	[BUG]  [BUGGY]  safeGet(size,  width))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size,  width))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
42	[BUG]  [BUGGY]  safeGet(strLen,  width  +  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width  +  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen,  width  +  strLen))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
43	[BUG]  [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen,  width))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
44	[BUG]  [BUGGY]  safePadding(size  +  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safePadding(size  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safePadding(size  +  width);	  safePadding(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  safePadding(size  +  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safePadding(size  +  strLen  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safePadding(size  +  strLen  +  1);	  safePadding(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  safePadding(size  +  padLen);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safePadding(size  +  padLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safePadding(size  +  padLen);	  safePadding(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  ensureCapacity(length  -  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  -  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  -  strLen);	  ensureCapacity(length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
48	[BUG]  [BUGGY]  EnsureCapacity(size  -  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  -  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  -  width);	  ensureCapacity(length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
49	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
50	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
52	[BUG]  [BUGGY]  ensureCapacity(size  *  padLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  padLen);	  ensureCapacity(size    /    padLen);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
53	[BUG]  [BUGGY]  ensureCapacity(size  /  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  strLen);	  ensureCapacity(size    /    padLen);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
54	[BUG]  [BUGGY]  ensureCapacity(size  /  padLen  +  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  padLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  padLen  +  1);	  ensureCapacity(size    /    padLen);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
55	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadRight(true);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.setFixedWidthPadRight(true);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.setFixedWidthPadRight(true);	  StrBuilder.this.setFixedWidthPadRight(false);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
56	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(true);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(true);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(true);	  StrBuilder.this.setFixedWidthPadRight(false);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
57	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(false);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(false);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(false);	  StrBuilder.this.setFixedWidthPadRight(false);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
58	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    padLen;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
59	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  else  {  size  +=  padLen;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  else  {  size  +=  padLen;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  else  {  size  +=  padLen;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    padLen;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
60	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    padLen;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
61	[BUG]  [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width)  {  ensureCapacity(size  +  padLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    padLen;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
62	[BUG]  [BUGGY]  ensureCapacity(size  -  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  -  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  -  strLen  +  1);	  ensureCapacity(size    -    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  -  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  -  width  +  1);	  ensureCapacity(size    -    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  ensureCapacity(size  -  width  +  2);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  -  width  +  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  -  width  +  2);	  ensureCapacity(size    -    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  ensureCapacity(size  /  2  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  2  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  2  +  width);	  ensureCapacity(size    /    2);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
66	[BUG]  [BUGGY]  ensureCapacity(size  /  2  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  2  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  2  +  1);	  ensureCapacity(size    /    2);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
67	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  padChar);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  padChar);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  padChar);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    padChar);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
68	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  -  padChar);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  -  padChar);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width  -  padChar);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    padChar);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
69	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    padChar);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
70	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  padChar);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  padChar);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  +  padChar);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    padChar);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
71	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  -  width,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  -  width,  size);	  ensureCapacity(strLen    -    width);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
72	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  -  width,  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  -  width,  strLen);	  ensureCapacity(strLen    -    width);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
73	[BUG]  [BUGGY]  safeGet(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  safeGet(size)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  safeGet(length)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(length)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  ensureCapacity(size  /  width  *  2);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  width  *  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  width  *  2);	  ensureCapacity(size    /    width    +    2);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
77	[BUG]  [BUGGY]  ensureCapacity(size  *  width  +  2);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  width  +  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  width  +  2);	  ensureCapacity(size    /    width    +    2);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
78	[BUG]  [BUGGY]  safeMultiply(size,  width)  {  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  width)  {	  safeMultiply(strLen,    width)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
79	[BUG]  [BUGGY]  safeMultiply(strLen,  width  +  strLen)  {  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  +  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  +  strLen)  {	  safeMultiply(strLen,    width)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
80	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {	  safeMultiply(strLen,    width)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
81	[BUG]  [BUGGY]  safeMultiply(strLen,  size)  {  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  size)  {	  safeMultiply(strLen,    width)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    strLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
83	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  length]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  length]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  length]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    strLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
84	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  width]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  width]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  width]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    strLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
85	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  padLen]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    strLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
86	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width,  size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    +    width);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
87	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  size);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    +    width);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
88	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    +    width);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
89	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
90	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
91	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  2);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  2);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
92	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1,  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1,  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
93	[BUG]  [BUGGY]  safeMultiply(strLen  +  width)  {  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width)  {	  safeMultiply(strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
94	[BUG]  [BUGGY]  safeMultiply(strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen);	  safeMultiply(strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
95	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  true;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  true;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  true;	  StrBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
96	[BUG]  [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen  +  width))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
97	[BUG]  [BUGGY]  safeGet(strLen  +  1))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  1))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen  +  1))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
98	[BUG]  [BUGGY]  safeAccess(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(size  +  strLen);	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
99	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  null;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  null;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  null;	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
100	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  strLen];  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  strLen];  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  strLen];	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
101	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =   "0 ";  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =   "0 ";  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  =   "0 ";	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
102	[BUG]  [BUGGY]  safeMultiply(size  +  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size  +  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size  +  strLen)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
103	[BUG]  [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
104	[BUG]  [BUGGY]  safeMultiply(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
105	[BUG]  [BUGGY]  ensureCapacity(strLen  +  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  strLen);	  ensureCapacity(strLen    +    size);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Object  obj  =  getFixedWidthPad();	  Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
107	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParentPointer();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Object  obj  =  getImmediateParentPointer();	  Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
108	[BUG]  [BUGGY]  Object  obj  =  getImmediateParent();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParent();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Object  obj  =  getImmediateParent();	  Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
109	[BUG]  [BUGGY]  safeSegments.add(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegments.add(strLen  +  width);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
110	[BUG]  [BUGGY]  safeSegments.add(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegments.add(strLen  +  1);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
111	[BUG]  [BUGGY]  safeSegments.add(strLen,  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegments.add(strLen,  width);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
112	[BUG]  [BUGGY]  ensureCapacity(size  *  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  strLen);	  ensureCapacity(strLen    *    width);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
113	[BUG]  [BUGGY]  ensureCapacity(strLen  *  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  *  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  *  width  +  1);	  ensureCapacity(strLen    *    width);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
114	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  buffer);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  buffer);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
116	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  buffer,  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  buffer,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  buffer,  width);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
117	[BUG]  [BUGGY]  safeMultilineStroke(strLen,  width)  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultilineStroke(strLen,  width)  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultilineStroke(strLen,  width)	  safeMultilineStroke(strLen)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
118	[BUG]  [BUGGY]  safeMultilineStroke(strLen  +  width)  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultilineStroke(strLen  +  width)  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultilineStroke(strLen  +  width)	  safeMultilineStroke(strLen)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
119	[BUG]  [BUGGY]  safeMultilineStroke(strLen,  true)  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultilineStroke(strLen,  true)  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultilineStroke(strLen,  true)	  safeMultilineStroke(strLen)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
120	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  2);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  2);	  ensureCapacity(size    +    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  ensureCapacity(strLen  +  size  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  size  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  size  +  1);	  ensureCapacity(size    +    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  3);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  3);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  3);	  ensureCapacity(size    +    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
123	[BUG]  [BUGGY]  ensureCapacity(strLen  -  padLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  -  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  -  padLen);	  ensureCapacity(size    -    padLen);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
124	[BUG]  [BUGGY]  ensureCapacity(size  -  padLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  -  padLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  -  padLen  +  1);	  ensureCapacity(size    -    padLen);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
125	[BUG]  [BUGGY]  ensureCapacity(length  -  padLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  -  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  -  padLen);	  ensureCapacity(size    -    padLen);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
126	[BUG]  [BUGGY]  ensureCapacity(size  /  4);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  4);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  4);	  ensureCapacity(size    *    4);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
127	[BUG]  [BUGGY]  ensureCapacity(size  +  4);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  4);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  4);	  ensureCapacity(size    *    4);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
128	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width  +  1);	  StrBuilder.this.appendFixedWidthPadRight(size,    width);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
129	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width);	  StrBuilder.this.appendFixedWidthPadRight(size,    width);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
130	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  size,  width);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  size,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  size,  width);	  StrBuilder.this.appendFixedWidthPadRight(size,    width);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
131	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  width);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  width);	  StrBuilder.this.appendFixedWidthPadRight(size,    width);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
132	[BUG]  [BUGGY]  safeMultiply(size,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  buffer,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  buffer,  strLen);	  safeMultiply(strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
133	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  size  +  padLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  buffer,  size  +  padLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  buffer,  size  +  padLen);	  safeMultiply(strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
134	[BUG]  [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
135	[BUG]  [BUGGY]  safeToken(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeToken(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeToken(strLen)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
136	[BUG]  [BUGGY]  safeAccess(size  +  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(size  +  strLen))  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
137	[BUG]  [BUGGY]  safeAccess(length  +  strLen))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(length  +  strLen))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(length  +  strLen))  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
138	[BUG]  [BUGGY]  safeAdd(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAdd(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
139	[BUG]  [BUGGY]  ensureCapacity(size  +  length  *  2  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  length  *  2  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  length  *  2  -  1);	  ensureCapacity(size    +    length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
140	[BUG]  [BUGGY]  safeGet(strLen  +  width)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen  +  width)  {  ensureCapacity(size  +  length);  }	  safeGet(strLen)    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
141	[BUG]  [BUGGY]  safeGet(size)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size)  {  ensureCapacity(size  +  length);  }	  safeGet(strLen)    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
142	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  2);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  width  *  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  width  *  2);	  ensureCapacity(size    +    width    *    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
143	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  *  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  *  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  *  1);	  ensureCapacity(size    +    width    *    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
144	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  4);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  width  *  4);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  width  *  4);	  ensureCapacity(size    +    width    *    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
145	[BUG]  [BUGGY]  ensureCapacity(strLen  +  strLen  -  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  strLen  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  strLen  -  1);	  ensureCapacity(strLen    +    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
146	[BUG]  [BUGGY]  ensureCapacity(strLen  +  length  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  length  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  length  -  1);	  ensureCapacity(strLen    +    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
147	[BUG]  [BUGGY]  safeGet(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen  +  width)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	[Delete]	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
149	[BUG]  [BUGGY]  Parchet.checkState(obj!=  null);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(obj!=  null);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Parchet.checkState(obj!=  null);	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
150	[BUG]  [BUGGY]  Parchet.checkNotNull(obj);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkNotNull(obj);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Parchet.checkNotNull(obj);	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
151	[BUG]  [BUGGY]  Parchet.checkState(obj  ==  null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(obj  ==  null);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Parchet.checkState(obj  ==  null);	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  safeMultiply(size,  width  -  strLen));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  width  -  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  width  -  strLen));	  safeMultiply(strLen,    width    -    strLen));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
153	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  padLen));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  padLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  padLen));	  safeMultiply(strLen,    width    -    strLen));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
154	[BUG]  [BUGGY]  safeMultiply(strLen,  width  +  strLen));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  +  strLen));	  safeMultiply(strLen,    width    -    strLen));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
155	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  /  2);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  /  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  /  2);	  ensureCapacity(size    +    strLen    /    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
156	[BUG]  [BUGGY]  ensureCapacity(strLen  +  size  /  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  size  /  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  size  /  1);	  ensureCapacity(size    +    strLen    /    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
157	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  /  3);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  /  3);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  /  3);	  ensureCapacity(size    +    strLen    /    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
158	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  size);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  size);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
159	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width  +  1);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
160	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  buffer.length);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  buffer.length);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
161	[BUG]  [BUGGY]  ensureCapacity(size  *  width  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  width  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  width  -  1);	  ensureCapacity(size    /    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
162	[BUG]  [BUGGY]  ensureCapacity(size  /  strLen  -  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  strLen  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  strLen  -  1);	  ensureCapacity(size    /    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
163	[BUG]  [BUGGY]  safeMultiply(strLen  +  width));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width));	  safeMultiply(strLen    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
164	[BUG]  [BUGGY]  safeMultiply(size  +  strLen));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size  +  strLen));	  safeMultiply(strLen    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
165	[BUG]  [BUGGY]  EnsureCapacity(size  /  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  /  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  /  width);	  ensureCapacity(length    /    width);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
166	[BUG]  [BUGGY]  ensureCapacity(strLen  -  size);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  -  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  -  size);	  ensureCapacity(size    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
167	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  2);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  2);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  +  2);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
168	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  1,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  +  1,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
169	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getWidth()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	String  str  =(obj  ==  null?  getWidth()  :  obj.toString());	  String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
170	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	String  str  =(obj  ==  null?  getFixedWidthPad()  :  obj.toString());	  String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
171	[BUG]  [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj!=  null?  getNullText()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	String  str  =(obj!=  null?  getNullText()  :  obj.toString());	  String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
172	[BUG]  [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen  +  width)  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
173	[BUG]  [BUGGY]  safe(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safe(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safe(strLen)  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
174	[BUG]  [BUGGY]  safeMultiply(size,  buffer,  strLen  +  strLen));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  buffer,  strLen  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  buffer,  strLen  +  strLen));	  safeMultiply(strLen,    buffer,    size    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
175	[BUG]  [BUGGY]  safeMultiply(size,  buffer,  strLen));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  buffer,  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  buffer,  strLen));	  safeMultiply(strLen,    buffer,    size    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
176	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width  -  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
177	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width  -  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
178	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  size  +  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  buffer,  size  +  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  buffer,  size  +  width)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
179	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
180	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  size)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  buffer,  size)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  buffer,  size)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
181	[BUG]  [BUGGY]  safeMultiply(size,  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  width)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
182	[BUG]  [BUGGY]  ensureCapacity(size  +  width  /  2);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  width  /  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  width  /  2);	  ensureCapacity(size    +    width    /    1);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
183	[BUG]  [BUGGY]  ensureCapacity(size  +  length  /  2);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  length  /  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  length  /  2);	  ensureCapacity(size    +    width    /    1);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
184	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  size  +=  strLen;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  size  +=  strLen;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  }  else  {  size  +=  strLen;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    strLen;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
185	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  strLen);	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    strLen;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
186	[BUG]  [BUGGY]  ensureCapacity(length  *  2);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  *  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  *  2);	  ensureCapacity(length    *    width);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
187	[BUG]  [BUGGY]  ensureCapacity(strLen  /  width  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  /  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  /  width  +  1);	  ensureCapacity(strLen    /    width);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
188	[BUG]  [BUGGY]  ensureCapacity(strLen  /  width,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  /  width,  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  /  width,  size);	  ensureCapacity(strLen    /    width);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
189	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  ||  padChar!=  null;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  ||  padChar!=  null;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  ||  padChar!=  null;	  StrBuilder.this.appendFixedWidthPadRight    ||    padChar    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
190	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  &&  padChar  ==  null;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  &&  padChar  ==  null;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  &&  padChar  ==  null;	  StrBuilder.this.appendFixedWidthPadRight    ||    padChar    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
191	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  ||  buffer  ==  null;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  ||  buffer  ==  null;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  ||  buffer  ==  null;	  StrBuilder.this.appendFixedWidthPadRight    ||    padChar    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
192	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  width  -  padLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  width  -  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  width  -  padLen);	  ensureCapacity(size    +    strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
193	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  width,  buffer);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  width,  buffer);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  width,  buffer);	  ensureCapacity(size    +    strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
194	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  width);	  StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
195	[BUG]  [BUGGY]  ensureCapacity(strLen  +  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  strLen  +  1);	  ensureCapacity(strLen    +    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
196	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  width  +  1);	  ensureCapacity(strLen    +    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
197	[BUG]  [BUGGY]  safeMultiply(size,  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  width)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
198	[BUG]  [BUGGY]  safeMultiply(length,  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(length,  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(length,  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
199	[BUG]  [BUGGY]  ensureCapacity(length  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  +  1);	  ensureCapacity(length    +    size);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
200	[BUG]  [BUGGY]  EnsureCapacity(size  +  length);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  +  length);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  +  length);	  ensureCapacity(length    +    size);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
201	[BUG]  [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  else  {  size  +=  width;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  else  {  size  +=  width;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  else  {  size  +=  width;  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    strLen;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
202	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    padLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
203	[BUG]  [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safely(strLen,  width)  {  ensureCapacity(size  +  strLen);  }  else  {  buffer[size  +  padLen]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    padLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
204	[BUG]  [BUGGY]  safeAccess(length)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(length)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(length)  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
205	[BUG]  [BUGGY]  safeAccess(size)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(size)  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
206	[BUG]  [BUGGY]  ensureCapacity(size  +  length  *  2  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  length  *  2  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  length  *  2  +  1);	  ensureCapacity(size    +    length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
207	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  length  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  length  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  length  +  1);	  ensureCapacity(size    +    length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
208	[BUG]  [BUGGY]  safeSegment(size  +  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(size  +  strLen)  {  ensureCapacity(size  +  width);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
209	[BUG]  [BUGGY]  safeSegment(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(size  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
210	[BUG]  [BUGGY]  safeSegment(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(length  +  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
211	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
212	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
213	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
214	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
215	[BUG]  [BUGGY]  safeToken(strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeToken(strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeToken(strLen);	  safeAccess(strLen);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
216	[BUG]  [BUGGY]  ensureCapacity(size  *  4  +  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  4  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  4  +  width);	  ensureCapacity(size    *    4);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
217	[BUG]  [BUGGY]  ensureCapacity(width  -  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  -  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  -  strLen);	  ensureCapacity(strLen    -    width);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
218	[BUG]  [BUGGY]  ensureCapacity(size  *  width  /  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  width  /  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  width  /  1);	  ensureCapacity(size    *    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
219	[BUG]  [BUGGY]  ensureCapacity(length  +  size  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  +  size  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  +  size  +  1);	  ensureCapacity(size    +    length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
220	[BUG]  [BUGGY]  safeSegments.add(strLen  -  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen  -  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegments.add(strLen  -  width);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
221	[BUG]  [BUGGY]  ensureCapacity(width  +  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  +  width);	  ensureCapacity(width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
222	[BUG]  [BUGGY]  ensureCapacity(width  +  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  +  strLen  +  1);	  ensureCapacity(width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
223	[BUG]  [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safely(strLen,  width)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    length;    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
224	[BUG]  [BUGGY]  ensureCapacity(width  -  padLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  -  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  -  padLen);	  ensureCapacity(size    -    padLen);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
225	[BUG]  [BUGGY]  ensureCapacity(length  /  2);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  /  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  /  2);	  ensureCapacity(length    /    width);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
226	[BUG]  [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safely(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    padLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
227	[BUG]  [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width)  {  ensureCapacity(size  +  padLen);  }  else  {  buffer[size  +  padLen]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    padLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
228	[BUG]  [BUGGY]  ensureCapacity(width  /  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  /  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  /  strLen);	  ensureCapacity(strLen    /    width);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
229	[BUG]  [BUGGY]  ensureCapacity(width  +  strLen  -  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  strLen  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  +  strLen  -  1);	  ensureCapacity(size    +    strLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
230	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  *  -  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  *  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  *  -  1);	  ensureCapacity(size    +    strLen    -    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
231	[BUG]  [BUGGY]  safeAccess(size  +  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(size  +  width))  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
232	[BUG]  [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen  +  width))  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
233	[BUG]  [BUGGY]  safeAccess(length  +  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(length  +  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(length  +  strLen))  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
234	[BUG]  [BUGGY]  ensureCapacity(length  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  +  width);	  ensureCapacity(length    +    size);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
235	[BUG]  [BUGGY]  safeGet(size,  buffer,  size  +  width));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  buffer,  size  +  width));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size,  buffer,  size  +  width));	  safeGet(strLen,    buffer,    size    +    width));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
236	[BUG]  [BUGGY]  safeGet(size,  buffer,  width  +  strLen));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  buffer,  width  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size,  buffer,  width  +  strLen));	  safeGet(strLen,    buffer,    size    +    width));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
237	[BUG]  [BUGGY]  safeMultiply(width,  buffer,  size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  buffer,  size  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width,  buffer,  size  +  strLen);	  safeMultiply(strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
238	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  size  +  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  buffer,  size  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  buffer,  size  +  width);	  safeMultiply(strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
239	[BUG]  [BUGGY]  safeGet(width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(width)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
240	[BUG]  [BUGGY]  safeGet(size)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
241	[BUG]  [BUGGY]  safeGet(length)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(length)  {  ensureCapacity(size  +  length);  }	  safeGet(strLen)    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
242	[BUG]  [BUGGY]  safeGet(width)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(width)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(width)  {  ensureCapacity(size  +  length);  }	  safeGet(strLen)    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
243	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
244	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  /  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  /  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  /  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    +    width);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
245	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width  -  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width  -  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    +    width);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
246	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
247	[BUG]  [BUGGY]  ensureCapacity(length  *  4);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  *  4);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  *  4);	  ensureCapacity(length    *    width);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
248	[BUG]  [BUGGY]  safeSegment(length  +  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(length  +  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(length  +  strLen)  {  ensureCapacity(size  +  width);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
249	[BUG]  [BUGGY]  safeSegment(length  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(length  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(length  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
250	[BUG]  [BUGGY]  safeSegments(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegments(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegments(size  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
251	[BUG]  [BUGGY]  safeGet(width))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeGet(width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(width))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
252	[BUG]  [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(size))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
253	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  size);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  size);	  StrBuilder.this.appendFixedWidthPadRight(size,    width);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
254	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(size  +  width);	  StrBuilder.this.appendFixedWidthPadRight(size,    width);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
255	[BUG]  [BUGGY]  safePadding(length  +  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safePadding(length  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safePadding(length  +  strLen);	  safePadding(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
256	[BUG]  [BUGGY]  safePadding(width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safePadding(width  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safePadding(width  +  strLen);	  safePadding(size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
257	[BUG]  [BUGGY]  ensureCapacity(length  *  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  *  strLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  *  strLen);	  ensureCapacity(strLen    *    width);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
258	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  +  1);	  StrBuilder.this.appendFixedWidthPadRight(width);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
259	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  +  width);	  StrBuilder.this.appendFixedWidthPadRight(width);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
260	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  width);	  StrBuilder.this.appendFixedWidthPadRight(width);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
261	[BUG]  [BUGGY]  ensureCapacity(size  -  width  *  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  -  width  *  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  -  width  *  1);	  ensureCapacity(size    -    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
262	[BUG]  [BUGGY]  ensureCapacity(width  -  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  -  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  -  width  +  1);	  ensureCapacity(size    -    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
263	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  ||  padLen  ==  0;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  ||  padLen  ==  0;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  ||  padLen  ==  0;	  StrBuilder.this.appendFixedWidthPadRight    ||    padChar    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
264	[BUG]  [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(length))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
265	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  buffer);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  buffer);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
266	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadRight()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getFixedWidthPadRight()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	String  str  =(obj  ==  null?  getFixedWidthPadRight()  :  obj.toString());	  String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
267	[BUG]  [BUGGY]  safely(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safely(strLen  +  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safely(strLen  +  width)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
268	[BUG]  [BUGGY]  safeGet(strLen)  {  ensureWidth(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen)  {  ensureWidth(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen)  {  ensureWidth(size  +  width);  }	  safeGet(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
269	[BUG]  [BUGGY]  Object  obj  =  getEmptyObject();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getEmptyObject();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Object  obj  =  getEmptyObject();	  Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
270	[BUG]  [BUGGY]  safeMultiply(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
271	[BUG]  [BUGGY]  safeMultiply(width  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width  +  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width  +  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
272	[BUG]  [BUGGY]  safeMultiply(length  +  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(length  +  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(length  +  strLen)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
273	[BUG]  [BUGGY]  safeMultiply(width)  {  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width)  {	  safeMultiply(strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
274	[BUG]  [BUGGY]  safeMultiply(width,  strLen)  {  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width,  strLen)  {	  safeMultiply(strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
275	[BUG]  [BUGGY]  safeMultiply(strLen,  width  +  1)  {  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  +  1)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  +  1)  {	  safeMultiply(strLen,    width)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
276	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  width)  {  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  width)  {	  safeMultiply(strLen,    width)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
277	[BUG]  [BUGGY]  safeMultiply(strLen  -  width)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  -  width)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  -  width)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
278	[BUG]  [BUGGY]  safely(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safely(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safely(strLen)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
279	[BUG]  [BUGGY]  safeMultiply(width,  buffer,  size  +  strLen));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  buffer,  size  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width,  buffer,  size  +  strLen));	  safeMultiply(strLen,    buffer,    size    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
280	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  size  +  width));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  buffer,  size  +  width));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  buffer,  size  +  width));	  safeMultiply(strLen,    buffer,    size    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
281	[BUG]  [BUGGY]  safeMultiply(size,  buffer,  size  +  strLen));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  buffer,  size  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  buffer,  size  +  strLen));	  safeMultiply(strLen,    buffer,    size    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
282	[BUG]  [BUGGY]  safeMultiply(width,  width  -  strLen));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  width  -  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width,  width  -  strLen));	  safeMultiply(strLen,    width    -    strLen));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
283	[BUG]  [BUGGY]  safeGet(strLen,  width  +  1))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width  +  1))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen,  width  +  1))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
284	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadLeft  = " ";	  StrBuilder.this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
285	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  -  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  -  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  -  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
286	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
287	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
288	[BUG]  [BUGGY]  ensureCapacity(length  +  size  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  +  size  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  +  size  -  1);	  ensureCapacity(size    +    length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
289	[BUG]  [BUGGY]  safeAccess(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(size  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
290	[BUG]  [BUGGY]  safeAccess(length  +  strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(length  +  strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(length  +  strLen)  {  ensureCapacity(size  +  width);  }	  safeAccess(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
291	[BUG]  [BUGGY]  safeToken(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeToken(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeToken(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
292	[BUG]  [BUGGY]  ensureCapacity(width  /  padLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  /  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  /  padLen);	  ensureCapacity(size    /    padLen);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
293	[BUG]  [BUGGY]  ensureCapacity(length  /  padLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  /  padLen);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  /  padLen);	  ensureCapacity(size    /    padLen);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
294	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(strLen)  {  ensureCapacity(size  +  strLen);  }	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
295	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(strLen)  {  ensureCapacity(size  +  width);  }	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
296	[BUG]  [BUGGY]  safeSegment(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(size  +  strLen);	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
297	[BUG]  [BUGGY]  safeMultiply(width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
298	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width  /  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen  +  width  /  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(strLen  +  width  /  1);	  ensureCapacity(strLen    +    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
299	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen  +  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  strLen  +  width);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
300	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
301	[BUG]  [BUGGY]  ensureCapacity(size  *  2  +  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  *  2  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  *  2  +  width);	  ensureCapacity(size    *    2);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
302	[BUG]  [BUGGY]  EnsureCapacity(size  +  strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  EnsureCapacity(size  +  strLen  +  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	EnsureCapacity(size  +  strLen  +  width);	  EnsureCapacity(size    +    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
303	[BUG]  [BUGGY]  safeMultiply(width,  strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width,  strLen)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
304	[BUG]  [BUGGY]  safeMultiply(length,  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(length,  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(length,  width)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
305	[BUG]  [BUGGY]  safeMultiply(width  +  strLen));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width  +  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width  +  strLen));	  safeMultiply(strLen    +    strLen));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
306	[BUG]  [BUGGY]  ensureCapacity(size  /  width  *  2  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  width  *  2  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  width  *  2  -  1);	  ensureCapacity(size    /    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
307	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  width  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  width  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  width  -  1);	  ensureCapacity(size    +    strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
308	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  width  -  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  +  width  -  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  +  width  -  width);	  ensureCapacity(size    +    strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
309	[BUG]  [BUGGY]  ensureCapacity(size  /  width  *  2  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  width  *  2  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  width  *  2  +  1);	  ensureCapacity(size    /    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
310	[BUG]  [BUGGY]  ensureCapacity(length  -  width  +  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(length  -  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(length  -  width  +  1);	  ensureCapacity(length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
311	[BUG]  [BUGGY]  ensureCapacity(width  -  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  -  width);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  -  width);	  ensureCapacity(length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
312	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  width);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
313	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  padChar);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  padChar);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  padChar);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
314	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width  -  1);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
315	[BUG]  [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  width);  }  else  {  buffer[size  +  strLen]  =  null;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safely(strLen,  width)  {  ensureCapacity(size  +  width);  }  else  {  buffer[size  +  strLen]  =  null;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safely(strLen,  width)  {  ensureCapacity(size  +  width);  }  else  {  buffer[size  +  strLen]  =  null;  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    strLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
316	[BUG]  [BUGGY]  safeMultilineStroke(strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultilineStroke(strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultilineStroke(strLen);	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
317	[BUG]  [BUGGY]  safeAccess(width)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(width)  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
318	[BUG]  [BUGGY]  ensureCapacity(width  +  strLen  /  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  strLen  /  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  +  strLen  /  1);	  ensureCapacity(size    +    strLen    /    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
319	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  *  1).reset();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  *  1).reset();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  *  1).reset();	  ensureCapacity(size    +    strLen    /    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
320	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  width;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  width;	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
321	[BUG]  [BUGGY]  Parchet.checkState(obj!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(obj!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Parchet.checkState(obj!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
322	[BUG]  [BUGGY]  safeGet(obj)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGet(obj)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(obj)  {  throw  new  IllegalArgumentException( " ");  }	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
323	[BUG]  [BUGGY]  Parchet.checkArgument(obj!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkArgument(obj!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Parchet.checkArgument(obj!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
324	[BUG]  [BUGGY]  ensureCapacity(width  +  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  size);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  +  size);	  ensureCapacity(length    +    size);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
325	[BUG]  [BUGGY]  MutableStroke.append(str.charAt(size  -  width));  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableStroke.append(str.charAt(size  -  width));  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStroke.append(str.charAt(size  -  width));	  ensureCapacity(length    -    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
326	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  length);  }	  safeAccess(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
327	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  height);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  height);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  height);	  StrBuilder.this.appendFixedWidthPadRight(size);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
328	[BUG]  [BUGGY]  safeMultiply(strLen)  {  ensureCapacity(size  +  length);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen)  {  ensureCapacity(size  +  length);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen)  {  ensureCapacity(size  +  length);  }	  safeMultiply(strLen)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
329	[BUG]  [BUGGY]  safeGet(strLen,  buffer,  size  +  padLen));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  buffer,  size  +  padLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeGet(strLen,  buffer,  size  +  padLen));	  safeGet(strLen,    buffer,    size    +    width));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
330	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen);	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    else    {    buffer[size    +    padLen]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
331	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  *  width  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  *  width  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  *  width  +  1);	  ensureCapacity(size    *    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
332	[BUG]  [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  else  {  size  +=  width;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  else  {  size  +=  width;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  else  {  size  +=  width;  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    strLen;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
333	[BUG]  [BUGGY]  safeMultiply(strLen  +  width  -  1)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen  +  width  -  1)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen  +  width  -  1)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    else    {    size    +=    strLen;    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
334	[BUG]  [BUGGY]  safeAccess(strLen  +  width,  buffer))  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width,  buffer))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen  +  width,  buffer))  {  ensureCapacity(size  +  strLen);  }	  safeAccess(strLen    +    width))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
335	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  padChar)||  padChar  ==  null;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  padChar)||  padChar  ==  null;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  padChar)||  padChar  ==  null;	  StrBuilder.this.appendFixedWidthPadRight    ||    padChar    ==    null;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
336	[BUG]  [BUGGY]  ensureCapacity(size  +  length  *  2);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  length  *  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  length  *  2);	  ensureCapacity(size    +    width    *    1);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
337	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getWrappedText()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getWrappedText()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	String  str  =(obj  ==  null?  getWrappedText()  :  obj.toString());	  String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
338	[BUG]  [BUGGY]  String  str  =(obj  ==  null?  getImmediateParentPointer()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(obj  ==  null?  getImmediateParentPointer()  :  obj.toString());  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	String  str  =(obj  ==  null?  getImmediateParentPointer()  :  obj.toString());	  String    str    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
339	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  2);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
340	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
341	[BUG]  [BUGGY]  ensureCapacity(size  /  2  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  2  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  2  -  1);	  ensureCapacity(size    /    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
342	[BUG]  [BUGGY]  ensureCapacity(size  /  length  -  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  length  -  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  length  -  1);	  ensureCapacity(size    /    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
343	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(size  +  padLen);  }	  safeSegment(strLen    +    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
344	[BUG]  [BUGGY]  safeMultiply(strLen,  width  +  1)  {  ensureCapacity(size  +  strLen);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  +  1)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  +  1)  {  ensureCapacity(size  +  strLen);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
345	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  false;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  false;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  false;	  StrBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
346	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  width];  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  width];  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  width];	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
347	[BUG]  [BUGGY]  ensureCapacity(width  /  2);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  /  2);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(width  /  2);	  ensureCapacity(size    /    2);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
348	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  *  width  /  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen  *  width  /  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  +  strLen  *  width  /  1);	  ensureCapacity(size    +    width    /    1);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
349	[BUG]  [BUGGY]  ensureCapacity(size  /  length  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  length  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  length  +  1);	  ensureCapacity(size    +    length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
350	[BUG]  [BUGGY]  Object  obj  =  getEmbeddedObject();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getEmbeddedObject();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Object  obj  =  getEmbeddedObject();	  Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
351	[BUG]  [BUGGY]  Object  obj  =  getEmptyValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getEmptyValue();  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Object  obj  =  getEmptyValue();	  Object    obj    =    getNullText();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
352	[BUG]  [BUGGY]  ensureCapacity(size  /  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  /  strLen  +  1);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	ensureCapacity(size  /  strLen  +  1);	  ensureCapacity(size    /    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
353	[BUG]  [BUGGY]  safeAccess(strLen))  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeAccess(strLen))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
354	[BUG]  [BUGGY]  safeMultiply(size,  buffer,  size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  buffer,  size  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(size,  buffer,  size  +  strLen);	  safeMultiply(strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
355	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padChar,  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padChar,  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padChar,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    padChar);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
356	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padChar  +  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padChar  +  1);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  padChar  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width    -    padChar);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
357	[BUG]  [BUGGY]  Parchet.checkArgument(obj!=  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkArgument(obj!=  null);  [BUGGY]      String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	Parchet.checkArgument(obj!=  null);	  if(obj    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
358	[BUG]  [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  strLen  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  strLen  +  1);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	if(width  >  0)  {  ensureCapacity(size  +  strLen  +  1);  }	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
359	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(length  +  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(length  +  strLen);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(length  +  strLen);	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
360	[BUG]  [BUGGY]  safeMultiply(strLen,  width  +  1)  {  ensureCapacity(size  +  width);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  +  1)  {  ensureCapacity(size  +  width);  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  +  1)  {  ensureCapacity(size  +  width);  }	  safeMultiply(strLen,    width)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
361	[BUG]  [BUGGY]  safeMultiply(strLen,  width  -  strLen  +  1));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width  -  strLen  +  1));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(strLen,  width  -  strLen  +  1));	  safeMultiply(strLen,    width    -    strLen));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
362	[BUG]  [BUGGY]  safeMultiply(width,  strLen  -  strLen));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  strLen  -  strLen));  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1228	1228	2	replace	safeMultiply(width,  strLen  -  strLen));	  safeMultiply(strLen,    width    -    strLen));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
