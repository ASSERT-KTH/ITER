bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
2	[BUG]  [BUGGY]  String  strLen  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  strLen  =  this.str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	String  strLen  =  this.str.length();	  String    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  Object  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  strLen  =  str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Object  strLen  =  str.length();	  String    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  String  strLen  =  getStrLen();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  strLen  =  getStrLen();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	String  strLen  =  getStrLen();	  String    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  char  strLen  =  this.str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  strLen  =  this.str.length()  +  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	char  strLen  =  this.str.length()  +  1;	  char    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  safeMultiply(str.getChars(1),  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.getChars(1),  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(1),  width,  buffer,  size);	  safeMultiply(str.getChars(0),    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
7	[BUG]  [BUGGY]  SafeMultiply(str.getChars(0),  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  SafeMultiply(str.getChars(0),  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	SafeMultiply(str.getChars(0),  width,  buffer,  size);	  safeMultiply(str.getChars(0),    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  bucket.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  bucket.getChars(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	bucket.getChars(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
9	[BUG]  [BUGGY]  bucket.setChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  bucket.setChars(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	bucket.setChars(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
10	[BUG]  [BUGGY]  edge  =  Math.max(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  edge  =  Math.max(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	edge  =  Math.max(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
11	[BUG]  [BUGGY]  bucket.setChar(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  bucket.setChar(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	bucket.setChar(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
12	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width);	  StrBuilder.this.appendFixedWidthPadRight(width,    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
13	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  width);	  StrBuilder.this.appendFixedWidthPadRight(width,    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
14	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width);	  StrBuilder.this.appendFixedWidthPadRight(width);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
15	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(false);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(false);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(false);	  StrBuilder.this.setFixedWidthPadRight(true);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  true;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  true;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  true;	  StrBuilder.this.appendFixedWidthPadRight    -=    false;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  1;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  1;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  1;	  StrBuilder.this.appendFixedWidthPadRight    -=    false;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
19	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  4;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  4;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  4;	  StrBuilder.this.appendFixedWidthPadRight    -=    false;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
20	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    -    width);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  *  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  *  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  *  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    -    width);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    -    width);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(true);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(true);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(true);	  StrBuilder.this.setFixedWidthPadRight(false);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  int  strLen  =  size.length()  -  strLen;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  size.length()  -  strLen;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  size.length()  -  strLen;	  int    strLen    =    str.length()    -    size;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  width  -  strLen;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  width  -  strLen;	  int    strLen    =    str.length()    -    size;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  padChar,  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  padChar,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  padChar,  width);	  StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  this.str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  this.str.length();	  Int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
29	[BUG]  [BUGGY]  Integer  strLen  =  getStrLen();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  getStrLen();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  getStrLen();	  Int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
30	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen,  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen,  width);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  strLen,  width);	  StrBuilder.this.appendFixedWidthPadRight(strLen,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen,  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  strLen,  width);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  strLen,  width);	  StrBuilder.this.appendFixedWidthPadRight(strLen,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
32	[BUG]  [BUGGY]  this.appendFixedWidthPadLeft  =  true;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeft  =  true;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadLeft  =  true;	  this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  this.appendFixedWidthPadRight  = " ";  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadRight  = " ";  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadRight  = " ";	  this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  Character  strLen  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  this.str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  this.str.length();	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  Character  strLen  =  this.str.charAt(0);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  this.str.charAt(0);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  this.str.charAt(0);	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  Character  strLen  =  obj.length();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  obj.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  obj.length();	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  Character  strLen  =  getCharsLength();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  getCharsLength();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  getCharsLength();	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  false;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  false;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  false;	  StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
39	[BUG]  [BUGGY]  this.appendFixedWidthPadLeft  =  false;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeft  =  false;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadLeft  =  false;	  StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
40	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(false);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(false);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.setFixedWidthPadLeft(false);	  StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
41	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
42	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
43	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1,  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1,  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
44	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  2);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  2);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  +  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
45	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0),  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0),  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0),  width);	  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
46	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0),  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0),  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0),  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
47	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(str.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(str.charAt(0)));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(String.valueOf(str.charAt(0)));	  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
48	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(str,  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidth(str,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidth(str,  width);	  StrBuilder.this.appendFixedWidth(str);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
49	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(str.length());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidth(str.length());  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidth(str.length());	  StrBuilder.this.appendFixedWidth(str);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
50	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(str.charAt(0));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidth(str.charAt(0));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidth(str.charAt(0));	  StrBuilder.this.appendFixedWidth(str);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
51	[BUG]  [BUGGY]  if(strLen  ==  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  ==  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	if(strLen  ==  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }	  StrBuilder.this.appendFixedWidthPadRight(strLen);    str.getChars(0,    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
52	[BUG]  [BUGGY]  if(strLen  >  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	if(strLen  >  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }	  StrBuilder.this.appendFixedWidthPadRight(strLen);    str.getChars(0,    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
53	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width);  str.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width);  str.getChars(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width);  str.getChars(0,  strLen,  buffer,  size);	  StrBuilder.this.appendFixedWidthPadRight(strLen);    str.getChars(0,    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
54	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  null;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  null;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  null;	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
55	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  strLen];  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  strLen];  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  new  char[size  +  strLen];	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
56	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =   "0 ";  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =   "0 ";  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  =   "0 ";	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
57	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
58	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen,  buffer);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen,  buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
59	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
60	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  width  +  1;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length()  +  width  +  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  +  width  +  1;	  int    strLen    =    str.length()    -    width    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
61	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  size  +  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length()  -  size  +  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  -  size  +  1;	  int    strLen    =    str.length()    -    width    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
62	[BUG]  [BUGGY]  int  strLen  =  str.length()  *  width  +  1;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length()  *  width  +  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  *  width  +  1;	  int    strLen    =    str.length()    -    width    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
63	[BUG]  [BUGGY]  safeMultiply(strLen,  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(strLen,  width,  buffer,  size);	  safeMultiply(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  safeMultiply(size,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(size,  buffer,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(size,  buffer,  strLen);	  safeMultiply(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  appendFixedWidthPadRight(strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadRight(strLen,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	appendFixedWidthPadRight(strLen,  buffer,  size);	  safeMultiply(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(strLen,  buffer,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(strLen,  buffer,  width);	  safeMultiply(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
67	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  buffer);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
68	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
69	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
70	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  2);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
71	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  2);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  +  2);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
72	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.length());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.length());  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.length());	  StrBuilder.this.appendFixedWidthPadRight(size);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
73	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.length()  -  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.length()  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.length()  -  width);	  StrBuilder.this.appendFixedWidthPadRight(size);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
74	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen  +  1);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  buffer.length);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  buffer.length);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  size);	  StrBuilder.this.appendFixedWidthPadRight(size,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  buffer,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  buffer,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(size,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
79	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  padLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  padLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    padLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
80	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  padLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  padLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    padLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
81	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  padLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  padLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    padLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
82	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  padChar);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  padChar);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  padChar);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width,  buffer);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width,  buffer);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width,  buffer);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  strBuilder.this.appendFixedWidthPadRight  =  true;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  strBuilder.this.appendFixedWidthPadRight  =  true;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	strBuilder.this.appendFixedWidthPadRight  =  true;	  strBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
86	[BUG]  [BUGGY]  appendFixedWidthPadRight  =  true;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  appendFixedWidthPadRight  =  true;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	appendFixedWidthPadRight  =  true;	  strBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
87	[BUG]  [BUGGY]  this.appendFixedWidthPadLeight  =  false;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeight  =  false;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadLeight  =  false;	  this.appendFixedWidthPadRight    =    true;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
88	[BUG]  [BUGGY]  Integer  strLen  =  size();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  size();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  size();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  Integer  strLen  =  0;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  0;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  0;	  Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
90	[BUG]  [BUGGY]  Integer  strLen  =  width  -  str.length();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  width  -  str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  width  -  str.length();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  width),  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  width),  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  width),  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  strLen));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  strLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  strLen));	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
93	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  -  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  -  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
94	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  padLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  padLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  padLen);	  StrBuilder.this.appendFixedWidthPadRight(width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
95	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  -  width);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  -  width);	  StrBuilder.this.appendFixedWidthPadRight(width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
96	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  width,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
97	[BUG]  [BUGGY]  safeSegments.add(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(strLen  +  1);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
98	[BUG]  [BUGGY]  safeSegments.add(strLen,  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(strLen,  width);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
99	[BUG]  [BUGGY]  safeSegments.add(strLen  -  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(strLen  -  width);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  safeSegments.add(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(strLen  +  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(strLen  +  width);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
101	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen,    width);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
102	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width  -  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen,    width);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
103	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)),  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)),  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)),  width);	  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
104	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  width));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  width));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0),  width));	  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
105	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)),  padChar);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)),  padChar);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)),  padChar);	  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
106	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  width,  buffer,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
107	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  buffer,  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  buffer,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  buffer,  width);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
108	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size,  buffer,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(size,  buffer,  strLen);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
109	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(length,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(length,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(length,  buffer,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
110	[BUG]  [BUGGY]  MutableStrBuilder.this.appendFixedWidthPadRight(strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStrBuilder.this.appendFixedWidthPadRight(strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStrBuilder.this.appendFixedWidthPadRight(strLen);	  if(strLen    >    width)    {    StrBuilder.this.appendFixedWidthPadRight(strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
111	[BUG]  [BUGGY]  nisip  =  StrBuilder.this.appendFixedWidthPadRight(strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  StrBuilder.this.appendFixedWidthPadRight(strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	nisip  =  StrBuilder.this.appendFixedWidthPadRight(strLen);	  if(strLen    >    width)    {    StrBuilder.this.appendFixedWidthPadRight(strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
112	[BUG]  [BUGGY]  MutableStroke.this.appendFixedWidthPadRight(strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableStroke.this.appendFixedWidthPadRight(strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStroke.this.appendFixedWidthPadRight(strLen);	  if(strLen    >    width)    {    StrBuilder.this.appendFixedWidthPadRight(strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
113	[BUG]  [BUGGY]  AnnotationHandler.this.appendFixedWidthPadRight(strLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  AnnotationHandler.this.appendFixedWidthPadRight(strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	AnnotationHandler.this.appendFixedWidthPadRight(strLen);	  if(strLen    >    width)    {    StrBuilder.this.appendFixedWidthPadRight(strLen);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
114	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  size;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length()  +  size;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  +  size;	  int    strLen    =    str.length()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
115	[BUG]  [BUGGY]  int  strLen  =  str.length()  /  width;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length()  /  width;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  /  width;	  int    strLen    =    str.length()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
116	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    size);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
117	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
118	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
119	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  2);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  2);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  2);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
120	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
121	[BUG]  [BUGGY]  int  strLen  =  size  -  str.length();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  size  -  str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  size  -  str.length();	  int    strLen    =    width    -    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  int  strLen  =  width  -  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  width  -  str.length()  +  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  width  -  str.length()  +  1;	  int    strLen    =    width    -    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen.length();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  width  -  strLen.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  width  -  strLen.length();	  int    strLen    =    width    -    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
124	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(1)));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(1)));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(1)));	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
125	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPaint(str);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPaint(str);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPaint(str);	  StrBuilder.this.appendFixedWidthPaint();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
126	[BUG]  [BUGGY]  if(str!=  null)  {  StrBuilder.this.appendFixedWidthPaint();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(str!=  null)  {  StrBuilder.this.appendFixedWidthPaint();  }  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	if(str!=  null)  {  StrBuilder.this.appendFixedWidthPaint();  }	  StrBuilder.this.appendFixedWidthPaint();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
127	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPaint(obj);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPaint(obj);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPaint(obj);	  StrBuilder.this.appendFixedWidthPaint();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
128	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  strLen  +  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size  +  strLen  +  width);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
129	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  strLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
130	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
131	[BUG]  [BUGGY]  safeMultiply(str.getChars(0,  strLen,  width,  buffer,  size));  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.getChars(0,  strLen,  width,  buffer,  size));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0,  strLen,  width,  buffer,  size));	  safeMultiply(str.getChars(0,    strLen,    buffer,    size));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
132	[BUG]  [BUGGY]  safeMultiply(str.getChars(0),  width,  buffer,  size));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.getChars(0),  width,  buffer,  size));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0),  width,  buffer,  size));	  safeMultiply(str.getChars(0,    strLen,    buffer,    size));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
133	[BUG]  [BUGGY]  safeMultiply(str.getChars(0,  width,  buffer,  size));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.getChars(0,  width,  buffer,  size));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0,  width,  buffer,  size));	  safeMultiply(str.getChars(0,    strLen,    buffer,    size));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
134	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  width  +  2;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length()  -  width  +  2;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  -  width  +  2;	  int    strLen    =    str.length()    -    width    +    1;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
135	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  str.length()  -  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  str.length()  -  1;	  Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  str.length()  +  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  str.length()  +  1;	  Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);	  StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
138	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidth(width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidth(width);	  StrBuilder.this.appendFixedWidth(str);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
139	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(width,  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidth(width,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidth(width,  width);	  StrBuilder.this.appendFixedWidth(str);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
140	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  buffer,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  buffer,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
141	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(size,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
142	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)  +  width));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)  +  width));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)  +  width));	  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
143	[BUG]  [BUGGY]  if(strLen  >=  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >=  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	if(strLen  >=  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  }	  StrBuilder.this.appendFixedWidthPadRight(strLen);    str.getChars(0,    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
144	[BUG]  [BUGGY]  safeMultiply(str.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.getChars(0,  strLen,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0,  strLen,  buffer,  size);	  safeMultiply(str.getChars(0),    strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
145	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  -  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  -  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width  -  1);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length(),    width);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
146	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    padLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
147	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPaint(this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPaint(this);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPaint(this);	  StrBuilder.this.appendFixedWidthPaint();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
148	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  width  +  1);	  StrBuilder.this.appendFixedWidthPadRight(width,    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
149	[BUG]  [BUGGY]  this.appendFixedWidthPadLeight  =  true;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadLeight  =  true;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadLeight  =  true;	  this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
150	[BUG]  [BUGGY]  strBuilder.this.setFixedWidthPadRight(true);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  strBuilder.this.setFixedWidthPadRight(true);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	strBuilder.this.setFixedWidthPadRight(true);	  strBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
151	[BUG]  [BUGGY]  strBuilder.this.appendFixedWidthPadRight  = " ";  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  strBuilder.this.appendFixedWidthPadRight  = " ";  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	strBuilder.this.appendFixedWidthPadRight  = " ";	  strBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
152	[BUG]  [BUGGY]  Character  strLen  =  this.str.charAt(strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  this.str.charAt(strLen);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  this.str.charAt(strLen);	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
153	[BUG]  [BUGGY]  Character  strLen  =  this.charBuffer.length();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  this.charBuffer.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  this.charBuffer.length();	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
154	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  -  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  -  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  -  1);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
155	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(size  -  1),  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(size  -  1),  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(size  -  1),  width);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
156	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  +  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
157	[BUG]  [BUGGY]  String  strLen  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  strLen  =  str.length()  -  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	String  strLen  =  str.length()  -  1;	  String    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
158	[BUG]  [BUGGY]  Integer  strLen  =  str.getChars(0,  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Integer  strLen  =  str.getChars(0,  width);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  str.getChars(0,  width);	  Int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
159	[BUG]  [BUGGY]  char  strLen  =(this.str!=  null)?  this.str.length()  :  0;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  strLen  =(this.str!=  null)?  this.str.length()  :  0;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	char  strLen  =(this.str!=  null)?  this.str.length()  :  0;	  char    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
160	[BUG]  [BUGGY]  safeMultiply(str.getChars(0,  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.getChars(0,  width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0,  width,  buffer,  size);	  safeMultiply(str.getChars(0),    width,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
161	[BUG]  [BUGGY]  safely(str.getChars(0,  width,  buffer,  size));  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safely(str.getChars(0,  width,  buffer,  size));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safely(str.getChars(0,  width,  buffer,  size));	  safeMultiply(str.getChars(0,    strLen,    buffer,    size));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
162	[BUG]  [BUGGY]  safeMultiply(width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(width,  buffer,  size);	  safeMultiply(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
163	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen  +  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
164	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen  -  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen  -  width);	  StrBuilder.this.appendFixedWidthPadRight(buffer,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
165	[BUG]  [BUGGY]  this.setFixedWidthPadRight(false);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  this.setFixedWidthPadRight(false);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.setFixedWidthPadRight(false);	  this.appendFixedWidthPadRight    =    true;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
166	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen,  width);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
167	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  width;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  width;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  width;	  StrBuilder.this.appendFixedWidthPadRight    -=    false;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
168	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  null;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  null;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  null;	  StrBuilder.this.appendFixedWidthPadRight    -=    false;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
169	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  +  1);	  StrBuilder.this.appendFixedWidthPadRight(width);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
170	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  width);	  StrBuilder.this.appendFixedWidthPadRight(width);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
171	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  /  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  /  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  /  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
172	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width  -  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
173	[BUG]  [BUGGY]  MutableStatistics.checkState(strLen  ==  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStatistics.checkState(strLen  ==  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStatistics.checkState(strLen  ==  width)  {  str.getChars(0,  strLen,  buffer,  size);  }	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
174	[BUG]  [BUGGY]  safeSegmentLimit  <  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSegmentLimit  <  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegmentLimit  <  width)  {  str.getChars(0,  strLen,  buffer,  size);  }	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
175	[BUG]  [BUGGY]  MutableStatistics.checkState(strLen  ==  width)&&  str.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableStatistics.checkState(strLen  ==  width)&&  str.getChars(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStatistics.checkState(strLen  ==  width)&&  str.getChars(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
176	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  |=  width;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft  |=  width;	  StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
177	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(width,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(width,  buffer,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
178	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  buffer,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
179	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  width);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size  +  width);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
180	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
181	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  strLen);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
182	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width  -  width);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width  -  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  width  -  width);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
183	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
184	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
185	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width  -  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(strLen    +    width);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
186	[BUG]  [BUGGY]  Character  strLen  =  charAt(str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  charAt(str.length()  -  1);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  charAt(str.length()  -  1);	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
187	[BUG]  [BUGGY]  Character  strLen  =  charAt(str.length());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Character  strLen  =  charAt(str.length());  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  charAt(str.length());	  Character    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
188	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.substring(0,  strLen));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.substring(0,  strLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str.substring(0,  strLen));	  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
189	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
190	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPaint(String.valueOf(str.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPaint(String.valueOf(str.charAt(0)));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPaint(String.valueOf(str.charAt(0)));	  StrBuilder.this.appendFixedWidthPaint();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
191	[BUG]  [BUGGY]  safeMultiply(str.length(),  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(str.length(),  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.length(),  buffer,  size);	  safeMultiply(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
192	[BUG]  [BUGGY]  while(strLen  >  width)  {  str.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(strLen  >  width)  {  str.getChars(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	while(strLen  >  width)  {  str.getChars(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
193	[BUG]  [BUGGY]  while(strLen  <  =  width)  {  str.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(strLen  <  =  width)  {  str.getChars(0,  strLen,  buffer,  size);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	while(strLen  <  =  width)  {  str.getChars(0,  strLen,  buffer,  size);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
194	[BUG]  [BUGGY]  while(strLen  >  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(strLen  >  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	while(strLen  >  width)  {  str.getChars(0,  strLen,  buffer,  size);  }	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
195	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);	  if(strLen    ==    width)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
196	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  width,  size);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  width,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  width,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(strLen,    buffer,    size);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
197	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  -  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
198	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(1),  width);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(1),  width);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(1),  width);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
199	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft  = " ";	  StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
200	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str);	  StrBuilder.this.appendFixedWidthPadRight(buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
201	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen,  buffer,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
202	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.substring(0,  strLen));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.substring(0,  strLen));  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.substring(0,  strLen));	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(1));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
203	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    padLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
204	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  padLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  padLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  padLen);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    padLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
205	[BUG]  [BUGGY]  MutableStrBuilder.this.setFixedWidthPadRight(false);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStrBuilder.this.setFixedWidthPadRight(false);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStrBuilder.this.setFixedWidthPadRight(false);	  StrBuilder.this.setFixedWidthPadRight(true);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
206	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  width;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  =  width;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  =  width;	  StrBuilder.this.appendFixedWidthPadRight    =   "   ";    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
207	[BUG]  [BUGGY]  safeSegments.add(str.length());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(str.length());  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(str.length());	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
208	[BUG]  [BUGGY]  safeSegments.add(str);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSegments.add(str);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(str);	  safeSegments.add(strLen);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
209	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width,  size);	  MutableStringBuffer    str    =    new    MutableStringBuffer(str.length()    -    width);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
210	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  padChar);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  padChar);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  padChar);	  StrBuilder.this.appendFixedWidthPadRight(width,    width);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
211	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  +  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  +  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width  +  strLen);	  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),    width);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
212	[BUG]  [BUGGY]  strBuilder.this.appendFixedWidthPadRight  -=  false;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  strBuilder.this.appendFixedWidthPadRight  -=  false;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	strBuilder.this.appendFixedWidthPadRight  -=  false;	  strBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
213	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen,  buffer,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  strLen,  buffer,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    buffer,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
214	[BUG]  [BUGGY]  this.appendFixedWidthPadRight  -=  false;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  this.appendFixedWidthPadRight  -=  false;  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadRight  -=  false;	  this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
215	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  padLen,  strLen);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  padLen,  strLen);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  padLen,  strLen);	  StrBuilder.this.appendFixedWidthPadRight(width    -    strLen);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
216	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  -  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  -  1);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  -  1);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
217	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  3);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  3);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  3);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
218	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  size);  [BUGGY]      int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width  -  1,  size);	  StrBuilder.this.appendFixedWidthPadRight(str,    width,    size);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
219	[BUG]  [BUGGY]  int  strLen  =(this.str!=  null)?  this.str.length()  :  this.str.length();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =(this.str!=  null)?  this.str.length()  :  this.str.length();  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =(this.str!=  null)?  this.str.length()  :  this.str.length();	  int    strLen    =    this.str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
220	[BUG]  [BUGGY]  int  strLen  =(this.str!=  null?  this.str.length()  :  width)+  1;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =(this.str!=  null?  this.str.length()  :  width)+  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =(this.str!=  null?  this.str.length()  :  width)+  1;	  int    strLen    =    this.str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
221	[BUG]  [BUGGY]  int  strLen  =(this.str!=  null?  this.str.length()  :  width)-  1;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =(this.str!=  null?  this.str.length()  :  width)-  1;  [BUGGY]      if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =(this.str!=  null?  this.str.length()  :  width)-  1;	  int    strLen    =    this.str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
