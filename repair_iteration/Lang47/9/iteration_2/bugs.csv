bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  strLen  =  width  -  str.length();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  strLen  =  width  -  str.length();  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  width  -  str.length();	  int    strLen    =    str.length()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  size;  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  strLen  =  str.length()  -  size;  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  -  size;	  int    strLen    =    str.length()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  width;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  strLen  =  str.length()  +  width;  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  +  width;	  int    strLen    =    str.length()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size,  width,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  width,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  1);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen  +  1);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Integer  strLen  =  str.length();  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Integer  strLen  =  str.length();	  int    strLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  strLen);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer,  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  String  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  strLen  =  str.length();  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	String  strLen  =  str.length();	  char    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  char  strLen  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  char  strLen  =  this.str.length();  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	char  strLen  =  this.str.length();	  char    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  Character  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Character  strLen  =  str.length();  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Character  strLen  =  str.length();	  char    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  this.appendFixedWidthPadRight  =  false;  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  this.appendFixedWidthPadRight  =  false;  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadRight  =  false;	      StrBuilder.this.appendFixedWidthPadRight    =    true;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadRight(false);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.setFixedWidthPadRight(false);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.setFixedWidthPadRight(false);	      StrBuilder.this.appendFixedWidthPadRight    =    true;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  int  strLen  =  this.str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  strLen  =  this.str.length()  -  1;  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  this.str.length()  -  1;	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  int  strLen  =  this.str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  strLen  =  this.str.length()  +  1;  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  this.str.length()  +  1;	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  width);	      StrBuilder.this.appendFixedWidthPadRight(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(0),  strLen);	      StrBuilder.this.appendFixedWidthPadRight(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(String.valueOf(str.charAt(0)));	      StrBuilder.this.appendFixedWidthPadRight(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(size);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(size);	      StrBuilder.this.appendFixedWidthPadRight();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPaint();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPaint();  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPaint();	      StrBuilder.this.appendFixedWidthPadRight();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  safeMultiply(str.getChars(0),  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(str.getChars(0),  strLen,  buffer,  size);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0),  strLen,  buffer,  size);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  safeMultiply(str.getChars(0),  width,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(str.getChars(0),  width,  buffer,  size);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0),  width,  buffer,  size);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  safeMultiply(strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(strLen,  buffer,  size);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(strLen,  buffer,  size);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  safeSegments.add(strLen);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeSegments.add(strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeSegments.add(strLen);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width);	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width);	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen  +  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen  +  width);	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  true;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  true;  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  true;	      StrBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadRight(true);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.setFixedWidthPadRight(true);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.setFixedWidthPadRight(true);	      StrBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  this.appendFixedWidthPadRight  =  true;  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.appendFixedWidthPadRight  =  true;  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	this.appendFixedWidthPadRight  =  true;	      StrBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  padLen);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  size);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  size);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  size);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(1));  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str.charAt(1));  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str.charAt(1));	      StrBuilder.this.appendFixedWidthPadRight(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  safeMultiply(str.getChars(0,  strLen,  buffer,  size));  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(str.getChars(0,  strLen,  buffer,  size));  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	safeMultiply(str.getChars(0,  strLen,  buffer,  size));	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  Int  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Int  strLen  =  str.length();  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	Int  strLen  =  str.length();	  int    strLen    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  strBuilder.this.appendFixedWidthPadRight  =  false;  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  strBuilder.this.appendFixedWidthPadRight  =  false;  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	strBuilder.this.appendFixedWidthPadRight  =  false;	      StrBuilder.this.appendFixedWidthPadRight    =    true;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  = " ";  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  = " ";  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  = " ";	      StrBuilder.this.appendFixedWidthPadRight    =    true;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  if(strLen  ==  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  ==  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	if(strLen  ==  width)  {  str.getChars(0,  strLen,  buffer,  size);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(buffer);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(buffer);	      StrBuilder.this.appendFixedWidthPadRight(str);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  width);	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width,  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width,  strLen);	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  strLen);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(width  -  strLen);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(width  -  strLen);	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  width  +  1;  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  strLen  =  str.length()  -  width  +  1;  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	int  strLen  =  str.length()  -  width  +  1;	  int    strLen    =    str.length()    -    width;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  false;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight  -=  false;  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight  -=  false;	      StrBuilder.this.appendFixedWidthPadRight    =    false;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidth(str);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidth(str);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidth(str);	      StrBuilder.this.appendFixedWidthPadRight();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length());	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length(),  width);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(str.length()  -  width);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  buffer,  size);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen,  buffer,  size);	      if(str!=    null)    {    str.getChars(0,    strLen,    buffer,    size);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen,  buffer);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen,  buffer);  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen,  buffer);	      StrBuilder.this.appendFixedWidthPadRight(str,    width,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  if(strLen  >  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  }  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	if(strLen  >  width)  {  StrBuilder.this.appendFixedWidthPadRight(strLen);  }	      StrBuilder.this.appendFixedWidthPadRight(strLen);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);  [BUGGY]    if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadRight(strLen);  str.getChars(0,  strLen,  buffer,  size);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));  [BUGGY]    int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  width,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1230	1230	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str.charAt(0));	      StrBuilder.this.appendFixedWidthPadRight(str.charAt(0));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
