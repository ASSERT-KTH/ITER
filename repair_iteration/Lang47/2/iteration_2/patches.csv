bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(size  >  0  ||  buffer!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  buffer!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  buffer!=  null)  {	  if(size    >    0    &&    buffer!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
2	[BUG]  [BUGGY]  if(width  >  0  &&  buffer!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  buffer!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  buffer!=  null)  {	  if(size    >    0    &&    buffer!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
3	[BUG]  [BUGGY]  if(length  >  0  &&  buffer!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  &&  buffer!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  &&  buffer!=  null)  {	  if(size    >    0    &&    buffer!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
4	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
5	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  width);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
6	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(width  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
7	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(size  +  strLen);	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
8	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(size,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(size,  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(size,  width,  strLen);	  Builder.this.appendFixedWidthPadLeft(strLen,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
9	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(size,  strLen,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(size,  strLen,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(size,  strLen,  width);	  Builder.this.appendFixedWidthPadLeft(strLen,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
10	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(strLen,  width,  buffer,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(strLen,  width,  buffer,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(strLen,  width,  buffer,  size);	  Builder.this.appendFixedWidthPadLeft(strLen,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
11	[BUG]  [BUGGY]  safeAccess(strLen))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen))  {  ensureCapacity(size  +  width);  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
12	[BUG]  [BUGGY]  Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
13	[BUG]  [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen  +  width))  {  ensureCapacity(size  +  width);  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
14	[BUG]  [BUGGY]  safeAccess(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(size  +  width);	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
15	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width,  strLen);	  if(str    ==    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	96	None	replace
16	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width  +  strLen);	  if(str    ==    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	96	None	replace
17	[BUG]  [BUGGY]  ensureCapacity(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(size  +  width);	  safeGetChars(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
18	[BUG]  [BUGGY]  safeGetChars(size  +  width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  buffer);	  safeGetChars(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
19	[BUG]  [BUGGY]  safeGetChars(size  +  width,  buffer.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width,  buffer.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  buffer.length);	  safeGetChars(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
20	[BUG]  [BUGGY]  Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
21	[BUG]  [BUGGY]  safeAccess(strLen))  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen))  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen))  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
22	[BUG]  [BUGGY]  Annotations.checkState(strLen  >  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(strLen  >  0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(strLen  >  0);	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
23	[BUG]  [BUGGY]  Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  length;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  length;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  length;  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
24	[BUG]  [BUGGY]  if(size  <  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  size  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  size  >  width)  {	  if(width    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
25	[BUG]  [BUGGY]  if(size  <  0  ||  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  width  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  width  >  size)  {	  if(width    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
26	[BUG]  [BUGGY]  if(size  >  0  &&  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  width  <  strLen)  {	  if(width    >    0    &&    width    <    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
27	[BUG]  [BUGGY]  if(size  >  0  ||  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  <  strLen)  {	  if(width    >    0    &&    width    <    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
28	[BUG]  [BUGGY]  if(length  >  0  &&  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  &&  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  &&  width  <  strLen)  {	  if(width    >    0    &&    width    <    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
29	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  <  strLen)  {	  if(width    >    0    &&    width    <    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
30	[BUG]  [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSize(strLen  +  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
31	[BUG]  [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSize(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
32	[BUG]  [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(length  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(length  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSize(strLen  +  width)  {  ensureCapacity(length  +  strLen);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
33	[BUG]  [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  length;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeSize(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  length;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSize(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  length;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
34	[BUG]  [BUGGY]  safeGetChars(size  +  strLen);  width  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  strLen);  width  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  strLen);  width  +=  strLen;	  safeGetChars(width    +    strLen);    width    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
35	[BUG]  [BUGGY]  safeGetChars(size  +  width);  width  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width);  width  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width);  width  +=  strLen;	  safeGetChars(width    +    strLen);    width    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
36	[BUG]  [BUGGY]  safeGetChars(size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  strLen);	  safeGetChars(width    +    strLen);    width    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
37	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size];  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size];	  StrBuilder.this.appendFixedWidthPadLeft    =   "   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
38	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width,  size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width,  size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width,  size  +  width);	  MutableStringBuffer.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
39	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width  +  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width  +  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width  +  size);	  MutableStringBuffer.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
40	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width,  padChar);	  MutableStringBuffer.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
41	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width,  width);	  MutableStringBuffer.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
42	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad().toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPad().toString();	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
43	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad().toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad().toCharArray();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPad().toCharArray();	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
44	[BUG]  [BUGGY]  Object  obj  =  getFixedWidth();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidth();	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
45	[BUG]  [BUGGY]  int  width  =  this.str.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  width  =  this.str.length()  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  this.str.length()  -  1;	  int    width    =    this.str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
46	[BUG]  [BUGGY]  int  width  =  this.str.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  width  =  this.str.length()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  this.str.length()  +  1;	  int    width    =    this.str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
47	[BUG]  [BUGGY]  int  width  =  this.str.length()  -  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  width  =  this.str.length()  -  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  this.str.length()  -  2;	  int    width    =    this.str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
48	[BUG]  [BUGGY]  if(size  <  0  ||  width  >  obj.getWidth())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  width  >  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  width  >  obj.getWidth())  {	  if(width    <    0    ||    size    >    obj.getWidth())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
49	[BUG]  [BUGGY]  if(size  <  0  ||  size  >  obj.getWidth())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  size  >  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  size  >  obj.getWidth())  {	  if(width    <    0    ||    size    >    obj.getWidth())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
50	[BUG]  [BUGGY]  if(size  <  0  ||  size  >  obj.getHeight())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  size  >  obj.getHeight())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  size  >  obj.getHeight())  {	  if(width    <    0    ||    size    >    obj.getWidth())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
51	[BUG]  [BUGGY]  if(size  <  0  ||  width  >  obj.getHeight())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  width  >  obj.getHeight())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  width  >  obj.getHeight())  {	  if(width    <    0    ||    size    >    obj.getWidth())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
52	[BUG]  [BUGGY]  if(size  <  =  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  =  0  ||  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  ||  width  >  strLen)  {	  if(width    <    =    0    ||    size    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	95	None	replace
53	[BUG]  [BUGGY]  if(size  <  =  0  ||  size  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  =  0  ||  size  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  ||  size  >  strLen)  {	  if(width    <    =    0    ||    size    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	95	None	replace
54	[BUG]  [BUGGY]  if(width  <  0  ||  size  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  0  ||  size  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  ||  size  >  strLen)  {	  if(width    <    =    0    ||    size    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	95	None	replace
55	[BUG]  [BUGGY]  if(length  <  =  0  ||  size  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(length  <  =  0  ||  size  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  <  =  0  ||  size  >  strLen)  {	  if(width    <    =    0    ||    size    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	95	None	replace
56	[BUG]  [BUGGY]  Integer  width  =  getWidth()  /  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  getWidth()  /  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getWidth()  /  1;	  Integer    width    =    getWidth()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
57	[BUG]  [BUGGY]  if(size  >  0  &&  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  size  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  size  >  width)  {	  if(width    >    0    &&    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
58	[BUG]  [BUGGY]  if(size  >  0  &&  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  width  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  width  >  size)  {	  if(width    >    0    &&    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
59	[BUG]  [BUGGY]  if(size  >  0  &&  size  <  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  size  <  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  size  <  width)  {	  if(width    >    0    &&    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
60	[BUG]  [BUGGY]  safeGet(buffer,  width,  size  +  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  width,  size  +  width));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  size  +  width));	  safeGet(buffer,    size    +    width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
61	[BUG]  [BUGGY]  safeGet(buffer,  size  +  width,  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  size  +  width,  strLen));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  size  +  width,  strLen));	  safeGet(buffer,    size    +    width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
62	[BUG]  [BUGGY]  safeGet(buffer,  size  +  width,  padChar));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  size  +  width,  padChar));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  size  +  width,  padChar));	  safeGet(buffer,    size    +    width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
63	[BUG]  [BUGGY]  safeGet(buffer,  size  +  width,  buffer.length));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  size  +  width,  buffer.length));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  size  +  width,  buffer.length));	  safeGet(buffer,    size    +    width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
64	[BUG]  [BUGGY]  annotations.FixedWidthPadLeft  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  annotations.FixedWidthPadLeft  =  true;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	annotations.FixedWidthPadLeft  =  true;	  Annotations.FixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
65	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  = " ";  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Annotations.FixedWidthPadLeft  = " ";  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  = " ";	  Annotations.FixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
66	[BUG]  [BUGGY]  if(size  >  0  &&  strLen  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  strLen  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  strLen  <  =  width)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
67	[BUG]  [BUGGY]  if(strLen  >  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
68	[BUG]  [BUGGY]  if(width  >  0  &&  strLen  <  =  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  strLen  <  =  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  strLen  <  =  size)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
69	[BUG]  [BUGGY]  if(strLen  >  0  &&  size  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0  &&  size  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0  &&  size  <  =  width)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
70	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  +  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  +  1];  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  +  1];	  StrBuilder.this.appendFixedWidthPadLeft    =    new    char[size    +    width];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
71	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  padLen];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  padLen];  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  padLen];	  StrBuilder.this.appendFixedWidthPadLeft    =    new    char[size    +    width];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
72	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  -  1];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  -  1];  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  -  1];	  StrBuilder.this.appendFixedWidthPadLeft    =    new    char[size    +    width];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
73	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(buffer.length  >  0  ||  width  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(buffer.length  >  0  ||  width  >  size)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
74	[BUG]  [BUGGY]  if(buffer!=  null  ||  width  >  0  ||  buffer.length  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(buffer!=  null  ||  width  >  0  ||  buffer.length  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(buffer!=  null  ||  width  >  0  ||  buffer.length  >  size)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
75	[BUG]  [BUGGY]  if(length  >  0  ||  width  >  buffer.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  width  >  buffer.length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  width  >  buffer.length)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
76	[BUG]  [BUGGY]  if(size  >  0  ||  width  <  buffer.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  <  buffer.length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  <  buffer.length)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
77	[BUG]  [BUGGY]  safeAccess(size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(size  +  strLen);	  if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	79	None	replace
78	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  size  +  width);	  Builder.this.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
79	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width,  padChar);	  Builder.this.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
80	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width  +  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width  +  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width  +  size);	  Builder.this.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
81	[BUG]  [BUGGY]  if(size  >  0  ||  width  <  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  <  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  <  size)  {	  if(size    >    0    ||    width    >    size)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
82	[BUG]  [BUGGY]  if(size  >  0  ||  width  <  =  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  <  =  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  <  =  size)  {	  if(size    >    0    ||    width    >    size)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
83	[BUG]  [BUGGY]  if(length  >  0  ||  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  width  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  width  >  size)  {	  if(size    >    0    ||    width    >    size)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
84	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  buffer.length  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  >  size)  {	  if(size    >    0    ||    width    >    size)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
85	[BUG]  [BUGGY]  if(size  >  0  ||  buffer.length  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  buffer.length  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  buffer.length  >  width)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
86	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.length  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  buffer.length  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  buffer.length  >  width)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
87	[BUG]  [BUGGY]  if(length  >  0  ||  buffer.length  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  buffer.length  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  buffer.length  >  size)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
88	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  <  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  buffer.length  <  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  <  size)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
89	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  str);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  str);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
90	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
91	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  str);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  str);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
92	[BUG]  [BUGGY]  if(length  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(length  >=  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >=  0)  {	  if(size    >=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	23	None	replace
93	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen,  size);	  Builder.this.appendFixedWidthPadLeft(buffer,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
94	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  size);	  Builder.this.appendFixedWidthPadLeft(buffer,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
95	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen  +  1);	  Builder.this.appendFixedWidthPadLeft(buffer,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
96	[BUG]  [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
97	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
98	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
99	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
100	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  size  +  strLen);	  Builder.this.appendFixedWidthPadLeft(buffer,    size    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
101	[BUG]  [BUGGY]  if(size  <  0  ||  size  >  length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  size  >  length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  size  >  length)  {	  if(length    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	43	None	replace
102	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
103	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  width);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
104	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen,  width);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
105	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPadLeft(size);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
106	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPadLeft(0);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
107	[BUG]  [BUGGY]  annotations.FixedWidthPadLeft  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  annotations.FixedWidthPadLeft  =  false;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	annotations.FixedWidthPadLeft  =  false;	  Annotations.FixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
108	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeType(UNKNOWN_TYPE);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeType(UNKNOWN_TYPE);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeType(UNKNOWN_TYPE);	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	93	None	replace
109	[BUG]  [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen  +  width))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
110	[BUG]  [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen))  {  ensureCapacity(size  +  width,  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
111	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
112	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  size);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
113	[BUG]  [BUGGY]  if(size  <  =  0  ||  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  =  0  ||  width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  ||  width  >  0)  {	  if(size    <    =    0    ||    width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
114	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  size  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  size  <  =  0)  {	  if(size    <    =    0    ||    width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
115	[BUG]  [BUGGY]  if(length  <  =  0  ||  width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(length  <  =  0  ||  width  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  <  =  0  ||  width  <  =  0)  {	  if(size    <    =    0    ||    width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
116	[BUG]  [BUGGY]  if(size  <  0  ||  width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  width  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  width  <  =  0)  {	  if(size    <    =    0    ||    width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
117	[BUG]  [BUGGY]  if(length  >  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  &&  width  <  =  strLen)  {	  if(size    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
118	[BUG]  [BUGGY]  if(size  >  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  <  =  strLen)  {	  if(size    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
119	[BUG]  [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
120	[BUG]  [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
121	[BUG]  [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
122	[BUG]  [BUGGY]  ensureCapacity(strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(strLen);	  safeAccess(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
123	[BUG]  [BUGGY]  safeAccess(strLen  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen  +  width);	  safeAccess(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
124	[BUG]  [BUGGY]  safeAdd(strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAdd(strLen);	  safeAccess(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
125	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size);	  StrBuilder.this.appendFixedWidthPadLeft(width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
126	[BUG]  [BUGGY]  Integer  width  =  str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  str.length();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  str.length();	  int    width    =    str.length()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	35	None	replace
127	[BUG]  [BUGGY]  Object  obj  =  getImmediateWidthPadLeft();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateWidthPadLeft();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getImmediateWidthPadLeft();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
128	[BUG]  [BUGGY]  String  obj  =  getImmediateParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  obj  =  getImmediateParentPointer();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	String  obj  =  getImmediateParentPointer();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
129	[BUG]  [BUGGY]  if(width  <  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  ||  width  <  =  strLen)  {	  if(width    >    0    ||    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
130	[BUG]  [BUGGY]  safeGet(size)>  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size)>  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size)>  0)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)>    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
131	[BUG]  [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen)>  0)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen)>    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
132	[BUG]  [BUGGY]  safeGet(length)>  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length)>  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length)>  0)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)>    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
133	[BUG]  [BUGGY]  safeGet(width)>  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(width)>  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(width)>  0)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen)>    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
134	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  this;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Annotations.FixedWidthPadLeft  =  this;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  this;	  Annotations.FixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
135	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Annotations.FixedWidthPadLeft  =  getNullText();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  getNullText();	  Annotations.FixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
136	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  new  HashMap  <  String,Object>();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Annotations.FixedWidthPadLeft  =  new  HashMap  <  String,Object>();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  new  HashMap  <  String,Object>();	  Annotations.FixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
137	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  new  HashSet  <  String>();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Annotations.FixedWidthPadLeft  =  new  HashSet  <  String>();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  new  HashSet  <  String>();	  Annotations.FixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
138	[BUG]  [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.setFixedWidthPadLeft(true);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.setFixedWidthPadLeft(true);	  StrBuilder.this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
139	[BUG]  [BUGGY]  Object  obj  =  getSource().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getSource().toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getSource().toString();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
140	[BUG]  [BUGGY]  Object  obj  =  getSource().getValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getSource().getValue();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getSource().getValue();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
141	[BUG]  [BUGGY]  Object  obj  =  this.getSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  this.getSource();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  this.getSource();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
142	[BUG]  [BUGGY]  safeGetChar(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGetChar(size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChar(size  +  width);	  safeGetChars(width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
143	[BUG]  [BUGGY]  char  width  =  str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  char  width  =  str.length();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	char  width  =  str.length();	  int    width    =    str.length()    +    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	36	None	replace
144	[BUG]  [BUGGY]  int  width  =  getWidth();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  width  =  getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  getWidth();	  Integer    width    =    getWidth()    -    1;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
145	[BUG]  [BUGGY]  if(length  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(length  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  <  =  0)  {	  if(size    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	42	None	replace
146	[BUG]  [BUGGY]  if(length  >  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  size  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  size  >  width)  {	  if(size    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
147	[BUG]  [BUGGY]  if(size  >  0  ||  size  <  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  size  <  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  size  <  width)  {	  if(size    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	44	None	replace
148	[BUG]  [BUGGY]  if(size  <  =  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  =  0  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  &&  width  <  =  strLen)  {	  if(width    <    =    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
149	[BUG]  [BUGGY]  if(width  <  =  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  width  <  =  strLen)  {	  if(width    <    =    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
150	[BUG]  [BUGGY]  if(size  <  =  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  =  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  ||  width  <  =  strLen)  {	  if(width    <    =    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
151	[BUG]  [BUGGY]  if(strLen  <  =  0  &&  width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  0  &&  width  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  0  &&  width  <  =  0)  {	  if(width    <    =    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
152	[BUG]  [BUGGY]  safeSegment(size  +  width,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width,  buffer);	  safeSegment(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
153	[BUG]  [BUGGY]  safeSegment(size  +  width,  buffer.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width,  buffer.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width,  buffer.length);	  safeSegment(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
154	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  buffer,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  buffer,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  buffer,  size);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
155	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  buffer,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  buffer,  strLen);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
156	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  strLen,  buffer);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
157	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
158	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
159	[BUG]  [BUGGY]  safeGetChars(size,  width  +  strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size,  width  +  strLen,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size,  width  +  strLen,  buffer);	  safeGetChars(size,    width    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
160	[BUG]  [BUGGY]  safeGetChars(size,  width  +  padLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size,  width  +  padLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size,  width  +  padLen);	  safeGetChars(size,    width    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
161	[BUG]  [BUGGY]  safeGet(size,  width)>  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  width)>  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size,  width)>  0)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width)>    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
162	[BUG]  [BUGGY]  safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  length);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  length);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  length);  }	  safeGet(strLen,    width)>    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
163	[BUG]  [BUGGY]  safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen,    width)>    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
164	[BUG]  [BUGGY]  if(width!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(width!=  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width!=  0)  {	  if(size!=    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	22	None	replace
165	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  >  length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  >  length)  {	  if(width    >    0    ||    size    >    length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
166	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
167	[BUG]  [BUGGY]  if(size  >  0  ||  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  size  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
168	[BUG]  [BUGGY]  if(length  >  0  ||  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  size  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
169	[BUG]  [BUGGY]  if(width  >  0  ||  size  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  size  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  size  <  =  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
170	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  1;	  StrBuilder.this.appendFixedWidthPadLeft    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
171	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  4;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  4;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  4;	  StrBuilder.this.appendFixedWidthPadLeft    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
172	[BUG]  [BUGGY]  safeAdd(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAdd(size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAdd(size  +  width);	  safeAccess(width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
173	[BUG]  [BUGGY]  if(size  <  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  width  <  =  strLen)  {	  if(width    <    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
174	[BUG]  [BUGGY]  if(size  <  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  &&  width  <  =  strLen)  {	  if(width    <    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
175	[BUG]  [BUGGY]  if(length  <  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(length  <  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  <  0  ||  width  <  =  strLen)  {	  if(width    <    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
176	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(size  +  width,  strLen);	  safeGetChars(size    +    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
177	[BUG]  [BUGGY]  safeGetChars(size  +  width,  buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width,  buffer,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  buffer,  strLen);	  safeGetChars(size    +    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
178	[BUG]  [BUGGY]  safeGetChars(size  +  width,  strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width,  strLen,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  strLen,  buffer);	  safeGetChars(size    +    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
179	[BUG]  [BUGGY]  safeIndex(strLen  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(strLen  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeIndex(strLen  +  width);	  safeIndex(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
180	[BUG]  [BUGGY]  safeIndex(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeIndex(size);	  safeIndex(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
181	[BUG]  [BUGGY]  safeIndex(strLen,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(strLen,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeIndex(strLen,  width);	  safeIndex(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
182	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width);	  Builder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
183	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width);	  Builder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
184	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  strLen);	  Builder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
185	[BUG]  [BUGGY]  Integer  width  =  getWidth()  *  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  getWidth()  *  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getWidth()  *  2;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
186	[BUG]  [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen  +  width))  {  ensureCapacity(size  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	82	None	replace
187	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(buffer);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	64	None	replace
188	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &&  padChar  ==  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &&  padChar  ==  null;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  &&  padChar  ==  null;	  StrBuilder.this.appendFixedWidthPadLeft    ||    padChar    ==    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
189	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  padChar!=  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  padChar!=  null;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  padChar!=  null;	  StrBuilder.this.appendFixedWidthPadLeft    ||    padChar    ==    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
190	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  size  +  padLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  size  +  padLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  size  +  padLen);	  StrBuilder.this.appendFixedWidthPadLeft    ||    padChar    ==    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
191	[BUG]  [BUGGY]  Object  obj  =  getBaseValue().toString();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getBaseValue().toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getBaseValue().toString();	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
192	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getGenericObjectProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getGenericObjectProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getGenericObjectProvider();	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
193	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeTypeProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeTypeProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeTypeProvider();	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
194	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeObjectProvider(null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeObjectProvider(null);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeObjectProvider(null);	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
195	[BUG]  [BUGGY]  safeGetChars(size,  width  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size,  width  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size,  width  +  1);	  safeGetChars(size,    width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
196	[BUG]  [BUGGY]  safeGetChars(size,  width  +  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size,  width  +  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size,  width  +  padChar);	  safeGetChars(size,    width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	54	None	replace
197	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getAnnotationProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getAnnotationProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getAnnotationProvider();	  AnnotationProvider    provider    =    getRawAnnotationProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
198	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getRawAnnotationProvider(null);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getRawAnnotationProvider(null);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getRawAnnotationProvider(null);	  AnnotationProvider    provider    =    getRawAnnotationProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
199	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getRawAnnotationProvider(source);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getRawAnnotationProvider(source);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getRawAnnotationProvider(source);	  AnnotationProvider    provider    =    getRawAnnotationProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
200	[BUG]  [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  length);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen  +  width))  {  ensureCapacity(size  +  length);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen  +  width))  {  ensureCapacity(size  +  length);  }	  safeGet(strLen))    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
201	[BUG]  [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  length);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  length);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length))  {  ensureCapacity(size  +  length);  }	  safeGet(strLen))    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
202	[BUG]  [BUGGY]  if(size  >  0  ||  width  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  ||  width  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  <  =  width)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
203	[BUG]  [BUGGY]  if(width  >  0  ||  size  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  size  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  size  <  =  width)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
204	[BUG]  [BUGGY]  if(width  >  0  &&  width  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  width  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  <  =  width)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
205	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  <  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  <  size)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
206	[BUG]  [BUGGY]  Annotations.checkState(width  >  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(width  >  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(width  >  0)  {  ensureCapacity(size  +  width);  }	  if(size    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
207	[BUG]  [BUGGY]  Annotations.checkState(width  <  0  ||  width  >  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(width  <  0  ||  width  >  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(width  <  0  ||  width  >  0)  {  ensureCapacity(size  +  width);  }	  if(size    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
208	[BUG]  [BUGGY]  Annotations.checkState(width  >  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(width  >  0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkState(width  >  0);	  if(size    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
209	[BUG]  [BUGGY]  safeGet(buffer,  width,  size));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  width,  size));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  size));	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
210	[BUG]  [BUGGY]  safeGet(buffer,  width,  strLen,  size));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  width,  strLen,  size));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  strLen,  size));	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
211	[BUG]  [BUGGY]  safeGet(buffer,  0,  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  0,  strLen));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  0,  strLen));	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
212	[BUG]  [BUGGY]  safeGet(buffer,  width,  strLen  +  1));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  width,  strLen  +  1));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  strLen  +  1));	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
213	[BUG]  [BUGGY]  if(length  >  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  width  >  strLen)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
214	[BUG]  [BUGGY]  if(width  >  0  ||  size  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  size  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  size  >  strLen)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
215	[BUG]  [BUGGY]  safeSize(size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeSize(size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSize(size  +  strLen);	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
216	[BUG]  [BUGGY]  Integer  width  =  getHeight()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  getHeight()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getHeight()  +  1;	  Integer    width    =    getHeight();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
217	[BUG]  [BUGGY]  Integer  width  =  getHeight()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  getHeight()  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getHeight()  -  1;	  Integer    width    =    getHeight();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
218	[BUG]  [BUGGY]  Annotations.checkNotNull(strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkNotNull(strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.checkNotNull(strLen);	  if(size    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	89	None	replace
219	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeType(UNKNOWN_TYPE));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeType(UNKNOWN_TYPE));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeType(UNKNOWN_TYPE));	  if(size    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	89	None	replace
220	[BUG]  [BUGGY]  if(size  >=  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >=  0  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >=  0  &&  width  <  =  strLen)  {	  if(width    >=    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
221	[BUG]  [BUGGY]  if(width  >=  0  &&  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >=  0  &&  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >=  0  &&  width  <  strLen)  {	  if(width    >=    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
222	[BUG]  [BUGGY]  if(length  >  0  ||  size  >  buffer.length())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  ||  size  >  buffer.length())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  ||  size  >  buffer.length())  {	  if(length    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
223	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &&  width  >  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  &&  width  >  0;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  &&  width  >  0;	  StrBuilder.this.appendFixedWidthPadLeft    ||    width    >    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
224	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  size  >  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  size  >  0;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  size  >  0;	  StrBuilder.this.appendFixedWidthPadLeft    ||    width    >    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
225	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  width  >  0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  width  >  0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  width  >  0);	  StrBuilder.this.appendFixedWidthPadLeft    ||    width    >    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
226	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size  +  width);	  StrBuilder.this.appendFixedWidthPadLeft    ||    width    >    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
227	[BUG]  [BUGGY]  if(size  <  0  ||  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  0  ||  width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0  ||  width  >  0)  {	  if(width    >    0    ||    width    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	102	None	replace
228	[BUG]  [BUGGY]  safeGet(size,  width))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size,  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size,  width))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
229	[BUG]  [BUGGY]  safeGet(length,  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length,  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length,  strLen))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
230	[BUG]  [BUGGY]  safeGet(strLen,  width,  buffer))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width,  buffer))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width,  buffer))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
231	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  size);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
232	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  buffer.length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  buffer.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  buffer.length);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
233	[BUG]  [BUGGY]  if(length  <  =  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(length  <  =  0  ||  size  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  <  =  0  ||  size  >  width)  {	  if(size    <    =    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
234	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  size  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  size  >  width)  {	  if(size    <    =    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
235	[BUG]  [BUGGY]  Int  width  =  str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Int  width  =  str.length();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Int  width  =  str.length();	  int    width    =    str.length()    -    4;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
236	[BUG]  [BUGGY]  safeSegment(size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  strLen);	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
237	[BUG]  [BUGGY]  safeSegments(size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegments(size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegments(size  +  strLen);	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
238	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(length);	  StrBuilder.this.appendFixedWidthPadLeft(width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	65	None	replace
239	[BUG]  [BUGGY]  safeAccess(width  +  width,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(width  +  width,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(width  +  width,  size);	  safeAccess(width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
240	[BUG]  [BUGGY]  if(buffer  >  0  ||  width  >  buffer.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(buffer  >  0  ||  width  >  buffer.length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(buffer  >  0  ||  width  >  buffer.length)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
241	[BUG]  [BUGGY]  if(buffer  ==  null  ||  width  >  0  ||  buffer.length  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(buffer  ==  null  ||  width  >  0  ||  buffer.length  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(buffer  ==  null  ||  width  >  0  ||  buffer.length  >  size)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
242	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(width  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen)  {  ensureCapacity(width  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen)  {  ensureCapacity(width  +  width);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
243	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
244	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  length;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  length;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  length;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
245	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  width;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  width;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  width;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
246	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);	  Builder.this.appendFixedWidthPadLeft(buffer,    size    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
247	[BUG]  [BUGGY]  safeGet(strLen,  width  -  width))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width  -  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width  -  width))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
248	[BUG]  [BUGGY]  safeGet(length,  width))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length,  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length,  width))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
249	[BUG]  [BUGGY]  safeSegment(size  +  width);  width  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width);  width  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width);  width  +=  strLen;	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
250	[BUG]  [BUGGY]  safeSegment(size  +  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width,  strLen);	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
251	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(width,  strLen,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(width,  strLen,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(width,  strLen,  width);	  Builder.this.appendFixedWidthPadLeft(strLen,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
252	[BUG]  [BUGGY]  ensureCapacity(size  +  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  width));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(size  +  width));	  safeGet(buffer,    size    +    width));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	60	None	replace
253	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer);	  Builder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
254	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(size);	  Builder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
255	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeNullProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeNullProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeNullProvider();	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
256	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeInstanceObjectProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeInstanceObjectProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeInstanceObjectProvider();	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
257	[BUG]  [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
258	[BUG]  [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	50	None	replace
259	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen  -  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen  -  width);	  Builder.this.appendFixedWidthPadLeft(buffer,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
260	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width  -  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width  -  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width  -  width,  strLen);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
261	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  padChar);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
262	[BUG]  [BUGGY]  if(width  >  0  &&  size  >  length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  size  >  length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  size  >  length)  {	  if(width    >    0    ||    size    >    length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
263	[BUG]  [BUGGY]  if(width  >  0  ||  length  >  buffer.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  length  >  buffer.length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  length  >  buffer.length)  {	  if(width    >    0    ||    size    >    length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
264	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  >  length)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  >  length)  {	  if(width    >    0    ||    size    >    length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
265	[BUG]  [BUGGY]  if(width  >  0  &&  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  >  0)  {	  if(width    >    0    ||    width    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	102	None	replace
266	[BUG]  [BUGGY]  if(width  <  =  0  ||  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  width  >  0)  {	  if(width    >    0    ||    width    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	102	None	replace
267	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  <  =  0)  {	  if(width    >    0    ||    width    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	102	None	replace
268	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  *  2];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  *  2];  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width  *  2];	  StrBuilder.this.appendFixedWidthPadLeft    =    new    char[size    +    width];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
269	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width)||  padChar  ==  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width)||  padChar  ==  null;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width)||  padChar  ==  null;	  StrBuilder.this.appendFixedWidthPadLeft    ||    padChar    ==    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
270	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  width  <  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  width  <  =  0;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  width  <  =  0;	  StrBuilder.this.appendFixedWidthPadLeft    ||    width    >    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	77	None	replace
271	[BUG]  [BUGGY]  if(width  >  0  &&  width  <  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  width  <  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  <  size)  {	  if(width    >    0    &&    width    <    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
272	[BUG]  [BUGGY]  if(width  ==  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  ==  0  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  ==  0  &&  width  <  =  strLen)  {	  if(width    >=    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
273	[BUG]  [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width))  {  ensureCapacity(size  +  width,  strLen);  }	  if(str!=    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	99	None	replace
274	[BUG]  [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  length);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size))  {  ensureCapacity(size  +  length);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size))  {  ensureCapacity(size  +  length);  }	  safeGet(strLen))    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
275	[BUG]  [BUGGY]  Object  obj  =  getSource().toCharArray();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getSource().toCharArray();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getSource().toCharArray();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
276	[BUG]  [BUGGY]  Object  obj  =  getText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getText();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getText();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
277	[BUG]  [BUGGY]  if(width  <  =  0  ||  buffer  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  buffer  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  buffer  ==  null)  {	  if(size    <    =    0    ||    width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
278	[BUG]  [BUGGY]  if(width  <  =  0  ||  buffer!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  buffer!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  buffer!=  null)  {	  if(size    <    =    0    ||    width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	48	None	replace
279	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  -1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  -1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  -1;	  StrBuilder.this.appendFixedWidthPadLeft    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
280	[BUG]  [BUGGY]  safeGet(width))  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGet(width))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(width))  {  ensureCapacity(size  +  strLen);  }	  safeGet(strLen))    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
281	[BUG]  [BUGGY]  if(width  <  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  0  ||  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  ||  width  >  strLen)  {	  if(width    <    =    0    ||    size    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	95	None	replace
282	[BUG]  [BUGGY]  if(width  <  =  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  width  >  strLen)  {	  if(width    <    =    0    ||    size    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	95	None	replace
283	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width  -  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer.appendFixedWidthPadLeft(buffer,  width  -  width);	  MutableStringBuffer.appendFixedWidthPadLeft(buffer,    size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
284	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getFixedAnnotationProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getFixedAnnotationProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getFixedAnnotationProvider();	  AnnotationProvider    provider    =    getRawAnnotationProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
285	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getRawTextAnnotationProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getRawTextAnnotationProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getRawTextAnnotationProvider();	  AnnotationProvider    provider    =    getRawAnnotationProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	16	None	replace
286	[BUG]  [BUGGY]  if(width  >  0  &&  buffer  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  buffer  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  buffer  <  =  strLen)  {	  if(size    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	26	None	replace
287	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadLeft(true);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPadLeft(true);	  Object    obj    =    getFixedWidthPadLeft();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
288	[BUG]  [BUGGY]  safeGetChars(size  +  width,  bufferLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width,  bufferLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  bufferLen);	  safeGetChars(size    +    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	68	None	replace
289	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  StringBuffer();	  StrBuilder.this.appendFixedWidthPadLeft    =   "   ";    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	31	None	replace
290	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
291	[BUG]  [BUGGY]  safeGet(length,  width)>  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(length,  width)>  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(length,  width)>  0)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width)>    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
292	[BUG]  [BUGGY]  safeGet(strLen,  width)>  1)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width)>  1)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width)>  1)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width)>    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	71	None	replace
293	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParentPointer(0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getImmediateParentPointer(0);	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
294	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer(-1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParentPointer(-1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getImmediateParentPointer(-1);	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
295	[BUG]  [BUGGY]  safeTree();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeTree();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeTree();	  if(size    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
296	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  getWidth()  +  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getWidth()  +  2;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
297	[BUG]  [BUGGY]  safeAccess(buffer,  width,  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(buffer,  width,  strLen));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(buffer,  width,  strLen));	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
298	[BUG]  [BUGGY]  safeGet(buffer,  width,  strLen  -  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  width,  strLen  -  width));  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  strLen  -  width));	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
299	[BUG]  [BUGGY]  safeIndex(width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeIndex(width);	  safeIndex(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
300	[BUG]  [BUGGY]  safeIndex(length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeIndex(length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeIndex(length);	  safeIndex(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
301	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
302	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
303	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(width  +  width);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
304	[BUG]  [BUGGY]  ensureCapacity(width  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(width  +  width);	  safeAccess(width    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
305	[BUG]  [BUGGY]  safeAccess(width  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(width  +  length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(width  +  length);	  safeAccess(width    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
306	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(strLen,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(strLen,  buffer);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
307	[BUG]  [BUGGY]  if(width  <  =  0  &&  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  &&  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  &&  width  <  strLen)  {	  if(width    <    =    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
308	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPad(size);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
309	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(true);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPad(true);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
310	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPad(0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPad(0);	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
311	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  >  strLen)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
312	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  buffer.length  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  >  strLen)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
313	[BUG]  [BUGGY]  if(width  >  0  &&  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  >  strLen)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
314	[BUG]  [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen  +  width)  {  ensureCapacity(size  +  strLen);  }	  if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	79	None	replace
315	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  =  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  <  =  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  <  =  size)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
316	[BUG]  [BUGGY]  if(width  <  =  0  ||  width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  width  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  width  <  =  0)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
317	[BUG]  [BUGGY]  if(width  >=  0  ||  width  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >=  0  ||  width  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >=  0  ||  width  <  =  width)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
318	[BUG]  [BUGGY]  safeGet(size)>  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(size)>  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(size)>  0)  {  ensureCapacity(size  +  width);  }	  safeGet(strLen)>    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	76	None	replace
319	[BUG]  [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen  +  width)  {  ensureCapacity(width  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
320	[BUG]  [BUGGY]  safeSegment(strLen)  {  ensureCapacity(width  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(strLen)  {  ensureCapacity(width  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(strLen)  {  ensureCapacity(width  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
321	[BUG]  [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeAccess(strLen)  {  ensureCapacity(width  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen)  {  ensureCapacity(width  +  width);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
322	[BUG]  [BUGGY]  Object  obj  =  getNumberValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getNumberValue();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getNumberValue();	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
323	[BUG]  [BUGGY]  Object  obj  =  getEmptyObject();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getEmptyObject();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getEmptyObject();	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
324	[BUG]  [BUGGY]  safeSegment(size  +  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width  -  1);	  safeSegment(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
325	[BUG]  [BUGGY]  safeSegments(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeSegments(size  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegments(size  +  width);	  safeSegment(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
326	[BUG]  [BUGGY]  if(width  >  0  &&  size  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  size  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  size  <  =  width)  {	  if(width    >    0    &&    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
327	[BUG]  [BUGGY]  if(size  >  0  &&  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  width  >  0)  {	  if(width    >    0    &&    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
328	[BUG]  [BUGGY]  if(width  <  0  ||  width  >  obj.getWidth())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  0  ||  width  >  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  ||  width  >  obj.getWidth())  {	  if(width    <    0    ||    size    >    obj.getWidth())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
329	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  >  obj.getWidth())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  size  >  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  size  >  obj.getWidth())  {	  if(width    <    0    ||    size    >    obj.getWidth())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	100	None	replace
330	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
331	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width  +  1);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
332	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
333	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(length,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(length,  str);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(length,  str);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
334	[BUG]  [BUGGY]  if(width  >  0  &&  strLen  <  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  strLen  <  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  strLen  <  width)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
335	[BUG]  [BUGGY]  if(width  >  0  ||  strLen  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  strLen  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  strLen  <  =  width)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
336	[BUG]  [BUGGY]  safeGetChars(width  +  width);  width  +=  padLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(width  +  width);  width  +=  padLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(width  +  width);  width  +=  padLen;	  safeGetChars(width    +    strLen);    width    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
337	[BUG]  [BUGGY]  safeGetChars(width  -  strLen);  width  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(width  -  strLen);  width  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(width  -  strLen);  width  +=  strLen;	  safeGetChars(width    +    strLen);    width    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
338	[BUG]  [BUGGY]  if(length  >  0  &&  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  &&  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  &&  size  >  0)  {	  if(length    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
339	[BUG]  [BUGGY]  if(length  >  0  &&  size  <  =  str.length())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(length  >  0  &&  size  <  =  str.length())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0  &&  size  <  =  str.length())  {	  if(length    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	24	None	replace
340	[BUG]  [BUGGY]  if(width  >  0  &&  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  width  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  >  size)  {	  if(size    >    0    ||    width    >    size)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	45	None	replace
341	[BUG]  [BUGGY]  if(width  >  0  &&  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  size  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
342	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  buffer.length  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
343	[BUG]  [BUGGY]  if(width  >=  0  ||  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >=  0  ||  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >=  0  ||  size  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
344	[BUG]  [BUGGY]  safeGetChars(width  +  width,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(width  +  width,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(width  +  width,  size);	  safeGetChars(width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	63	None	replace
345	[BUG]  [BUGGY]  if(width  >  0  &&  buffer.length  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  buffer.length  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  buffer.length  >  width)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
346	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  <  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  buffer.length  <  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  <  width)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
347	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  buffer.length  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  <  =  width)  {	  if(width    >    0    ||    buffer.length    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	74	None	replace
348	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  width);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
349	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  padChar);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
350	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen);	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
351	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(strLen  +  width);	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	92	None	replace
352	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(strLen,  width,  strLen  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(strLen,  width,  strLen  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(strLen,  width,  strLen  +  1);	  Builder.this.appendFixedWidthPadLeft(strLen,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
353	[BUG]  [BUGGY]  char  width  =  this.str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  width  =  this.str.length();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	char  width  =  this.str.length();	  int    width    =    this.str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
354	[BUG]  [BUGGY]  if(width  >  0  ||  strLen  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  strLen  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  strLen  >  size)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
355	[BUG]  [BUGGY]  if(strLen  >  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0  ||  width  >  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0  ||  width  >  strLen)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
356	[BUG]  [BUGGY]  if(width  >  0  ||  strLen  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  strLen  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  strLen  >  0)  {	  if(size    >    0    ||    width    >    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	47	None	replace
357	[BUG]  [BUGGY]  if(width  <  =  width  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  width  &&  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  width  &&  width  <  =  strLen)  {	  if(width    <    =    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	85	None	replace
358	[BUG]  [BUGGY]  if(size  >  0)  {  safeAccess(width  +  width);  }  else  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0)  {  safeAccess(width  +  width);  }  else  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0)  {  safeAccess(width  +  width);  }  else  {  ensureCapacity(size  +  width);  }	  safeAccess(width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
359	[BUG]  [BUGGY]  if(size  >  0)  {  safeAccess(width  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0)  {  safeAccess(width  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0)  {  safeAccess(width  +  width);  }	  safeAccess(width    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	55	None	replace
360	[BUG]  [BUGGY]  safeGetChars(size  +  width,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(size  +  width,  true);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  true);	  safeGetChars(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	53	None	replace
361	[BUG]  [BUGGY]  Annotation.FixedWidthPadLeft  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Annotation.FixedWidthPadLeft  =  false;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotation.FixedWidthPadLeft  =  false;	  Annotations.FixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	33	None	replace
362	[BUG]  [BUGGY]  ensureCapacity(size  +  length);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size  +  length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(size  +  length);	  safeGet(strLen))    {    ensureCapacity(size    +    length);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	52	None	replace
363	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	  if(size    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	89	None	replace
364	[BUG]  [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  padLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  padLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  padLen;  }	  if(size    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	89	None	replace
365	[BUG]  [BUGGY]  if(size  <  =  width  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(size  <  =  width  ||  size  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  width  ||  size  >  width)  {	  if(size    <    =    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	49	None	replace
366	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  padChar];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  padChar];  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  padChar];	  StrBuilder.this.appendFixedWidthPadLeft    =    new    char[size    +    width];    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	80	None	replace
367	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  +  padChar)||  padChar  ==  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  +  padChar)||  padChar  ==  null;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  +  padChar)||  padChar  ==  null;	  StrBuilder.this.appendFixedWidthPadLeft    ||    padChar    ==    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	72	None	replace
368	[BUG]  [BUGGY]  if(strLen  ==  0)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  ==  0)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  ==  0)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str!=    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	99	None	replace
369	[BUG]  [BUGGY]  if(strLen!=  width)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(strLen!=  width)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen!=  width)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str!=    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	99	None	replace
370	[BUG]  [BUGGY]  if(strLen!=  0)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen!=  0)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen!=  0)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str!=    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	99	None	replace
371	[BUG]  [BUGGY]  if(strLen  >=  width)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >=  width)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >=  width)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str!=    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	99	None	replace
372	[BUG]  [BUGGY]  if(strLen  >  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  width)  {  ensureCapacity(size  +  strLen);  }	  if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	79	None	replace
373	[BUG]  [BUGGY]  int  strLen  =  str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  strLen  =  str.length();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  strLen  =  str.length();	  if(strLen    ==    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	79	None	replace
374	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(width,  buffer,  size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(width,  buffer,  size  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(width,  buffer,  size  +  strLen);	  Builder.this.appendFixedWidthPadLeft(buffer,    size    +    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
375	[BUG]  [BUGGY]  if(strLen  <  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  width)  {  ensureCapacity(size  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
376	[BUG]  [BUGGY]  ensureCapacity(width  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(width  +  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(width  +  strLen);	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	94	None	replace
377	[BUG]  [BUGGY]  if(width  >  0  &&  buffer  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  &&  buffer  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  buffer  ==  null)  {	  if(size    >    0    &&    buffer!=    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	25	None	replace
378	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size,  width  -  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size,  width  -  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(size,  width  -  strLen);	  if(strLen    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	81	None	replace
379	[BUG]  [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableStringBuffer  str  =  new  MutableStringBuffer(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer  str  =  new  MutableStringBuffer(size);	  if(strLen    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	81	None	replace
380	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  -=  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Annotations.FixedWidthPadLeft  -=  null;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  -=  null;	  Annotations.FixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	34	None	replace
381	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(size,  buffer,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(size,  buffer,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
382	[BUG]  [BUGGY]  if(width  <  =  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0)  {  ensureCapacity(size  +  strLen);  }	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	93	None	replace
383	[BUG]  [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0)  {  ensureCapacity(size  +  width);  }	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	93	None	replace
384	[BUG]  [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0)  {  ensureCapacity(size  +  width,  strLen);  }	  if(width    >    0)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	93	None	replace
385	[BUG]  [BUGGY]  safeSegment(size  +  width,  true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  safeSegment(size  +  width,  true);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width,  true);	  safeSegment(size    +    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	58	None	replace
386	[BUG]  [BUGGY]  int  width  =  strLen  -  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  width  =  strLen  -  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  strLen  -  width;	  if(strLen!=    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	78	None	replace
387	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  =  0  ||  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  size  >  0)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
388	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  10)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  width  >  10)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  >  10)  {	  if(width    >    0    ||    size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	98	None	replace
389	[BUG]  [BUGGY]  ensureCapacity(size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  ensureCapacity(size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	ensureCapacity(size);	  safeAccess(strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
390	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  0)  {  ensureCapacity(size  +  strLen);  }	  if(strLen    <    =    width)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	82	None	replace
391	[BUG]  [BUGGY]  Integer  width  =  getHeight()  /  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Integer  width  =  getHeight()  /  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getHeight()  /  2;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
392	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeTypeOfObjectProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeTypeOfObjectProvider();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeTypeOfObjectProvider();	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
393	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeInstance();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  AnnotationProvider  provider  =  getNativeInstance();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeInstance();	  AnnotationProvider    provider    =    getNativeObjectProvider();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
394	[BUG]  [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str    ==    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	96	None	replace
395	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  0)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str    ==    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	96	None	replace
396	[BUG]  [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  width)  {  ensureCapacity(size  +  width,  strLen);  }	  if(str    ==    null)    {    ensureCapacity(size    +    width,    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	96	None	replace
397	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width,  width);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
398	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width  -  1);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
399	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  padChar);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width,  padChar);	  StrBuilder.this.appendFixedWidthPadLeft(str,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
400	[BUG]  [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
401	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  0)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
402	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  <  =  0)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  0)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    <    =    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	90	None	replace
403	[BUG]  [BUGGY]  safeGet(buffer,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(buffer,  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  strLen);	  safeGet(buffer,    width,    strLen));    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	59	None	replace
404	[BUG]  [BUGGY]  if(width  <  0  ||  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  <  0  ||  width  <  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  ||  width  <  strLen)  {	  if(width    >    0    &&    width    <    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	27	None	replace
405	[BUG]  [BUGGY]  if(strLen  >  0  &&  strLen  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0  &&  strLen  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0  &&  strLen  <  =  width)  {	  if(width    >    0    &&    strLen    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	86	None	replace
406	[BUG]  [BUGGY]  if(strLen  ==  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  ==  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  ==  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
407	[BUG]  [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width,  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width,  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0)  {  ensureCapacity(size  +  width,  strLen);  width  +=  strLen;  }	  if(strLen    >    0)    {    ensureCapacity(size    +    width);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	88	None	replace
408	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  width;	  StrBuilder.this.appendFixedWidthPadLeft    =    0;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	39	None	replace
409	[BUG]  [BUGGY]  if(width  >  0  ||  padChar  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  padChar  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  padChar  <  =  width)  {	  if(width    >    0    ||    width    <    =    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	101	None	replace
410	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(true);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(true);	  StrBuilder.this.appendFixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	30	None	replace
411	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
412	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  strLen);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  strLen);	  StrBuilder.this.appendFixedWidthPadLeft(width,    str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	97	None	replace
413	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen,  size);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  strLen,  size);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
414	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  strLen  +  1);	  Builder.this.appendFixedWidthPadLeft(str,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
415	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width  -  1);	  StrBuilder.this.appendFixedWidthPadLeft(buffer,    width);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
416	[BUG]  [BUGGY]  Object  obj  =  findSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  findSource();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  findSource();	  Object    obj    =    getSource();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	56	None	replace
417	[BUG]  [BUGGY]  Object  obj  =  getEmptyValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getEmptyValue();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getEmptyValue();	  Object    obj    =    getBaseValue();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
418	[BUG]  [BUGGY]  Object  obj  =  createImmediateParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  createImmediateParentPointer();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  createImmediateParentPointer();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
419	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer().getObject();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getImmediateParentPointer().getObject();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getImmediateParentPointer().getObject();	  Object    obj    =    getImmediateParentPointer();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
420	[BUG]  [BUGGY]  if(width  >=  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >=  0  ||  width  <  =  strLen)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >=  0  ||  width  <  =  strLen)  {	  if(width    >=    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
421	[BUG]  [BUGGY]  safeGetChars(width  +  padLen);  width  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGetChars(width  +  padLen);  width  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(width  +  padLen);  width  +=  strLen;	  safeGetChars(width    +    strLen);    width    +=    strLen;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	66	None	replace
422	[BUG]  [BUGGY]  Annotation.FixedWidthPadLeft  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Annotation.FixedWidthPadLeft  =  true;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotation.FixedWidthPadLeft  =  true;	  Annotations.FixedWidthPadLeft    =    false;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	32	None	replace
423	[BUG]  [BUGGY]  if(width  >  0  ||  padChar  <  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  padChar  <  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  padChar  <  0)  {	  if(width    >    0    ||    width    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	102	None	replace
424	[BUG]  [BUGGY]  safeGet(strLen,  width  -  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width  -  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width  -  strLen))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
425	[BUG]  [BUGGY]  safeGet(strLen,  width  -  1,  strLen))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeGet(strLen,  width  -  1,  strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width  -  1,  strLen))  {  ensureCapacity(size  +  width);  }	  safeGet(strLen,    width))    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	70	None	replace
426	[BUG]  [BUGGY]  if(size  >  0  &&  width  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(size  >  0  &&  width  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  width  <  =  width)  {	  if(width    >    0    &&    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	73	None	replace
427	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen,  buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen,  buffer);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen,  buffer);	  Builder.this.appendFixedWidthPadLeft(buffer,    width,    strLen);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
428	[BUG]  [BUGGY]  if(strLen  >  width)  {  ensureCapacity(strLen  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  width)  {  ensureCapacity(strLen  +  width);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  width)  {  ensureCapacity(strLen  +  width);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
429	[BUG]  [BUGGY]  if(strLen  >  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
430	[BUG]  [BUGGY]  if(strLen  >=  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(strLen  >=  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >=  width)  {  ensureCapacity(size  +  strLen);  width  +=  strLen;  }	  if(strLen    >=    width)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	91	None	replace
431	[BUG]  [BUGGY]  if(width  >  0  ||  length  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(width  >  0  ||  length  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  length  >  size)  {	  if(width    >    0    ||    size    >    length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	75	None	replace
432	[BUG]  [BUGGY]  if(buffer  <  0  ||  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(buffer  <  0  ||  width  >  size)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(buffer  <  0  ||  width  >  size)  {	  if(size    >    0    ||    width    >    buffer.length)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	46	None	replace
433	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadImpl();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Object  obj  =  getFixedWidthPadImpl();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPadImpl();	  Object    obj    =    getFixedWidthPad();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	57	None	replace
