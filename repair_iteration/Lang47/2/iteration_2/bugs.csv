bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
2	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(str,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(str,  width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
3	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  strLen);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
4	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer,  str);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer,  str);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
5	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPadLeft();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getFixedWidthPadLeft();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPadLeft();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
6	[BUG]  [BUGGY]  Object  obj  =  getImmediateParentPointer();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getImmediateParentPointer();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getImmediateParentPointer();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
7	[BUG]  [BUGGY]  Object  obj  =  getBaseValue();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getBaseValue();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getBaseValue();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
8	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  size  +  strLen);	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
9	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  width,  strLen);	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
10	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(strLen,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Builder.this.appendFixedWidthPadLeft(strLen,  width,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(strLen,  width,  strLen);	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
11	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Builder.this.appendFixedWidthPadLeft(str,  width,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str,  width,  strLen);	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
12	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(buffer,  size  +  width);	      if(str!=    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
13	[BUG]  [BUGGY]  Builder.this.appendFixedWidthPadLeft(str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Builder.this.appendFixedWidthPadLeft(str);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Builder.this.appendFixedWidthPadLeft(str);	      if(str!=    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
14	[BUG]  [BUGGY]  safeIndex(strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeIndex(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeIndex(strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
15	[BUG]  [BUGGY]  safeAccess(strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
16	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getRawAnnotationProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  AnnotationProvider  provider  =  getRawAnnotationProvider();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getRawAnnotationProvider();	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
17	[BUG]  [BUGGY]  AnnotationProvider  provider  =  getNativeObjectProvider();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  AnnotationProvider  provider  =  getNativeObjectProvider();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	AnnotationProvider  provider  =  getNativeObjectProvider();	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
18	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Integer  width  =  getWidth()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getWidth()  +  1;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
19	[BUG]  [BUGGY]  Integer  width  =  getWidth()  /  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Integer  width  =  getWidth()  /  2;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getWidth()  /  2;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
20	[BUG]  [BUGGY]  Integer  width  =  getWidth()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Integer  width  =  getWidth()  -  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getWidth()  -  1;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
21	[BUG]  [BUGGY]  Integer  width  =  getHeight();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  Integer  width  =  getHeight();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Integer  width  =  getHeight();	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
22	[BUG]  [BUGGY]  if(size!=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(size!=  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size!=  0)  {	  if(width    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
23	[BUG]  [BUGGY]  if(size  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  >=  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >=  0)  {	  if(width    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
24	[BUG]  [BUGGY]  if(length  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(length  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  >  0)  {	  if(size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
25	[BUG]  [BUGGY]  if(size  >  0  &&  buffer!=  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  &&  buffer!=  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  buffer!=  null)  {	  if(size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
26	[BUG]  [BUGGY]  if(size  >  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
27	[BUG]  [BUGGY]  if(width  >  0  &&  width  <  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  width  <  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  <  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
28	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
29	[BUG]  [BUGGY]  if(width  <  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
30	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  false;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  false;	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
31	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  = " ";  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  = " ";	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
32	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  false;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Annotations.FixedWidthPadLeft  =  false;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  false;	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
33	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Annotations.FixedWidthPadLeft  =  true;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  true;	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
34	[BUG]  [BUGGY]  Annotations.FixedWidthPadLeft  =  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Annotations.FixedWidthPadLeft  =  null;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Annotations.FixedWidthPadLeft  =  null;	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
35	[BUG]  [BUGGY]  int  width  =  str.length()  -  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  -  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  str.length()  -  1;	      int    width    =    str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
36	[BUG]  [BUGGY]  int  width  =  str.length()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  str.length()  +  1;	      int    width    =    str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
37	[BUG]  [BUGGY]  int  width  =  this.str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  this.str.length();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  this.str.length();	      int    width    =    str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
38	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  this;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  this;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  this;	      StrBuilder.this.appendFixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
39	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  0;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  0;	      StrBuilder.this.appendFixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
40	[BUG]  [BUGGY]  if(length  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(length  ==  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  ==  0)  {	  if(size    ==    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
41	[BUG]  [BUGGY]  if(width  <  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0)  {	  if(size    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
42	[BUG]  [BUGGY]  if(size  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(size  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0)  {	  if(size    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
43	[BUG]  [BUGGY]  if(length  <  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(length  <  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(length  <  0)  {	  if(size    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
44	[BUG]  [BUGGY]  if(size  >  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  size  >  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  size  >  width)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
45	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  size)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  width  >  size)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  >  size)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
46	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  buffer.length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  width  >  buffer.length)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  >  buffer.length)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
47	[BUG]  [BUGGY]  if(size  >  0  ||  width  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0  ||  width  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0  ||  width  >  strLen)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
48	[BUG]  [BUGGY]  if(size  <  =  0  ||  width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(size  <  =  0  ||  width  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  ||  width  <  =  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
49	[BUG]  [BUGGY]  if(size  <  =  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(size  <  =  0  ||  size  >  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  =  0  ||  size  >  width)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
50	[BUG]  [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen))  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
51	[BUG]  [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen))  {  ensureCapacity(size  +  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
52	[BUG]  [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  length);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen))  {  ensureCapacity(size  +  length);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen))  {  ensureCapacity(size  +  length);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
53	[BUG]  [BUGGY]  safeGetChars(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeGetChars(size  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
54	[BUG]  [BUGGY]  safeGetChars(size,  width  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeGetChars(size,  width  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size,  width  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
55	[BUG]  [BUGGY]  safeAccess(width  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(width  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(width  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
56	[BUG]  [BUGGY]  Object  obj  =  getSource();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getSource();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getSource();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
57	[BUG]  [BUGGY]  Object  obj  =  getFixedWidthPad();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Object  obj  =  getFixedWidthPad();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	Object  obj  =  getFixedWidthPad();	      Object    obj    =    getNullText();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	11	None	replace
58	[BUG]  [BUGGY]  safeSegment(size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  safeSegment(size  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeSegment(size  +  width);	      if(str!=    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
59	[BUG]  [BUGGY]  safeGet(buffer,  width,  strLen));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeGet(buffer,  width,  strLen));  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  width,  strLen));	      if(str!=    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
60	[BUG]  [BUGGY]  safeGet(buffer,  size  +  width));  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeGet(buffer,  size  +  width));  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(buffer,  size  +  width));	      if(str!=    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
61	[BUG]  [BUGGY]  int  width  =  str.length()  -  4;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  -  4;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  str.length()  -  4;	      int    width    =    str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
62	[BUG]  [BUGGY]  safeAccess(width  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeAccess(width  +  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeAccess(width  +  strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
63	[BUG]  [BUGGY]  safeGetChars(width  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeGetChars(width  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(width  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
64	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(buffer);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(buffer);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
65	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
66	[BUG]  [BUGGY]  safeGetChars(width  +  strLen);  width  +=  strLen;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeGetChars(width  +  strLen);  width  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(width  +  strLen);  width  +=  strLen;	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
67	[BUG]  [BUGGY]  safeGetChars(size,  width  +  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeGetChars(size,  width  +  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size,  width  +  strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
68	[BUG]  [BUGGY]  safeGetChars(size  +  width,  strLen);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeGetChars(size  +  width,  strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGetChars(size  +  width,  strLen);	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
69	[BUG]  [BUGGY]  if(width  >=  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  >=  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >=  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
70	[BUG]  [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen,  width))  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width))  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
71	[BUG]  [BUGGY]  safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen,  width)>  0)  {  ensureCapacity(size  +  width);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
72	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  padChar  ==  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  padChar  ==  null;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  padChar  ==  null;	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
73	[BUG]  [BUGGY]  if(width  >  0  &&  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  size  >  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  size  >  width)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
74	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  buffer.length  >  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  buffer.length  >  width)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
75	[BUG]  [BUGGY]  if(width  >  0  ||  size  >  length)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  size  >  length)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  size  >  length)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
76	[BUG]  [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeGet(strLen)>  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	safeGet(strLen)>  0)  {  ensureCapacity(size  +  strLen);  }	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
77	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  width  >  0;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  ||  width  >  0;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  ||  width  >  0;	      StrBuilder.this.appendFixedWidthPadLeft    =    true;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	10	None	replace
78	[BUG]  [BUGGY]  if(strLen!=  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen!=  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen!=  width)  {  ensureCapacity(size  +  strLen);  }	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
79	[BUG]  [BUGGY]  if(strLen  ==  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  ==  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  ==  width)  {  ensureCapacity(size  +  strLen);  }	      if(str!=    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
80	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width];  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width];  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft  =  new  char[size  +  width];	      StrBuilder.this.appendFixedWidthPadLeft    =    null;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
81	[BUG]  [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0)  {  ensureCapacity(size  +  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
82	[BUG]  [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  width)  {  ensureCapacity(size  +  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	replace
83	[BUG]  [BUGGY]  if(size  >  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0)  {  ensureCapacity(size  +  width);  }	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
84	[BUG]  [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	MutableStringBuffer.appendFixedWidthPadLeft(buffer,  size  +  width);	      if(width    >    0)    {    ensureCapacity(width    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
85	[BUG]  [BUGGY]  if(width  <  =  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  =  0  &&  width  <  =  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  &&  width  <  =  strLen)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
86	[BUG]  [BUGGY]  if(width  >  0  &&  strLen  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  &&  strLen  <  =  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  strLen  <  =  width)  {	  if(width    >    0    &&    width    <    =    strLen)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
87	[BUG]  [BUGGY]  int  width  =  str.length()  -  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  width  =  str.length()  -  2;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	int  width  =  str.length()  -  2;	      int    width    =    str.length();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	19	None	replace
88	[BUG]  [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
89	[BUG]  [BUGGY]  if(size  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(size  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0)  {  ensureCapacity(size  +  width);  width  +=  strLen;  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
90	[BUG]  [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
91	[BUG]  [BUGGY]  if(strLen  >=  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >=  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >=  width)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    width    +=    strLen;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	20	None	replace
92	[BUG]  [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  >  0)  {  ensureCapacity(size  +  width);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  >  0)  {  ensureCapacity(size  +  width);  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
93	[BUG]  [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0)  {  ensureCapacity(size  +  strLen);  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
94	[BUG]  [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(width  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(strLen  <  =  width)  {  ensureCapacity(width  +  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(strLen  <  =  width)  {  ensureCapacity(width  +  strLen);  }	      if(width    >    0)    {    ensureCapacity(width    +    strLen);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	21	None	replace
95	[BUG]  [BUGGY]  if(width  <  =  0  ||  size  >  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  =  0  ||  size  >  strLen)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0  ||  size  >  strLen)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
96	[BUG]  [BUGGY]  if(str  ==  null)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(str  ==  null)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(str  ==  null)  {  ensureCapacity(size  +  width,  strLen);  }	      if(str    ==    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	replace
97	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  StrBuilder.this.appendFixedWidthPadLeft(width,  str);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	StrBuilder.this.appendFixedWidthPadLeft(width,  str);	      StrBuilder.this.appendFixedWidthPadLeft(str);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	9	None	replace
98	[BUG]  [BUGGY]  if(width  >  0  ||  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  size  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  size  >  0)  {	  if(size    >    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	6	None	replace
99	[BUG]  [BUGGY]  if(str!=  null)  {  ensureCapacity(size  +  width,  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(str!=  null)  {  ensureCapacity(size  +  width,  strLen);  }  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(str!=  null)  {  ensureCapacity(size  +  width,  strLen);  }	      if(str!=    null)    {    ensureCapacity(size    +    width);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
100	[BUG]  [BUGGY]  if(width  <  0  ||  size  >  obj.getWidth())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(width  <  0  ||  size  >  obj.getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  0  ||  size  >  obj.getWidth())  {	  if(size    <    0)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	8	None	replace
101	[BUG]  [BUGGY]  if(width  >  0  ||  width  <  =  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  <  =  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  <  =  width)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
102	[BUG]  [BUGGY]  if(width  >  0  ||  width  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(width  >  0  ||  width  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  width  >  0)  {	  if(width    >    0    ||    size    >    width)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	17	None	replace
