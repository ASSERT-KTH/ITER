bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(str!=  null)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    if(str!=  null)  {  ensureCapacity(size  +  width);  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(str!=  null)  {  ensureCapacity(size  +  width);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
2	[BUG]  [BUGGY]    if(str  ==  null)  {  ensureCapacity(size  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    if(str  ==  null)  {  ensureCapacity(size  +  width);  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(str  ==  null)  {  ensureCapacity(size  +  width);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
3	[BUG]  [BUGGY]    if(str!=  null)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    if(str!=  null)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(str!=  null)  {  ensureCapacity(size  +  strLen);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
4	[BUG]  [BUGGY]    if(str  ==  null)  {  ensureCapacity(size  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    if(str  ==  null)  {  ensureCapacity(size  +  strLen);  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(str  ==  null)  {  ensureCapacity(size  +  strLen);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
5	[BUG]  [BUGGY]    Integer  width  =  getWidth();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    Integer  width  =  getWidth();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    Integer  width  =  getWidth();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
6	[BUG]  [BUGGY]  if(size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(size  >  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  >  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
7	[BUG]  [BUGGY]  if(size  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(size  ==  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  ==  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
8	[BUG]  [BUGGY]  if(size  <  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  if(size  <  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(size  <  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
9	[BUG]  [BUGGY]    StrBuilder.this.appendFixedWidthPadLeft(str);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    StrBuilder.this.appendFixedWidthPadLeft(str);  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    StrBuilder.this.appendFixedWidthPadLeft(str);		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
10	[BUG]  [BUGGY]    StrBuilder.this.appendFixedWidthPadLeft  =  true;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    StrBuilder.this.appendFixedWidthPadLeft  =  true;  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    StrBuilder.this.appendFixedWidthPadLeft  =  true;		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
11	[BUG]  [BUGGY]    Object  obj  =  getNullText();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Object  obj  =  getNullText();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    Object  obj  =  getNullText();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
12	[BUG]  [BUGGY]    StrBuilder.this.appendFixedWidthPadLeft  =  null;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    StrBuilder.this.appendFixedWidthPadLeft  =  null;  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    StrBuilder.this.appendFixedWidthPadLeft  =  null;		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
13	[BUG]  [BUGGY]    if(width  >  0)  {  ensureCapacity(width  +  width);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    if(width  >  0)  {  ensureCapacity(width  +  width);  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(width  >  0)  {  ensureCapacity(width  +  width);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
14	[BUG]  [BUGGY]  if(width  ==  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(width  ==  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  ==  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
15	[BUG]  [BUGGY]  if(width  <  =  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(width  <  =  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  <  =  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
16	[BUG]  [BUGGY]  if(width  >=  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  if(width  >=  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >=  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
17	[BUG]  [BUGGY]  if(width  >  0  ||  size  >  width)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  if(width  >  0  ||  size  >  width)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  ||  size  >  width)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
18	[BUG]  [BUGGY]  if(width  >  0  &&  width  <  =  strLen)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(width  >  0  &&  width  <  =  strLen)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	if(width  >  0  &&  width  <  =  strLen)  {	if  (width  >  0)  {  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	3	None	replace
19	[BUG]  [BUGGY]    int  width  =  str.length();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int  width  =  str.length();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    int  width  =  str.length();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
20	[BUG]  [BUGGY]    if(width  >  0)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    if(width  >  0)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(width  >  0)  {  ensureCapacity(width  +  strLen);  width  +=  strLen;  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
21	[BUG]  [BUGGY]    if(width  >  0)  {  ensureCapacity(width  +  strLen);  }  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    if(width  >  0)  {  ensureCapacity(width  +  strLen);  }  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(strLen  -  width,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadLeft  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  	projects/Lang47/src/java/org/apache/commons/lang/text/StrBuilder.java	0.7071067811865475	1183	1183	2	replace	    if(width  >  0)  {  ensureCapacity(width  +  strLen);  }		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	4	None	add
