bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return allowMissingColumnNames; [FE] IllegalArgumentException [CONTEXT] public boolean getAllowMissingColumnNames() { [BUGGY] return allowMissingColumnNames; [BUGGY] } [CLASS] CSVFormat [METHOD] getAllowMissingColumnNames [RETURN_TYPE] boolean  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF other String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	505	505	1	replace	
2	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public boolean getAllowMissingColumnNames() { [BUGGY] [BUGGY] return allowMissingColumnNames; } [CLASS] CSVFormat [METHOD] getAllowMissingColumnNames [RETURN_TYPE] boolean  [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF other String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.5	505	505	1	add	
3	[BUG] [BUGGY] final Set<String> dupCheck = new HashSet<String>(); [FE] IllegalArgumentException [CONTEXT] if (header == null) { this.header = null; } else { [BUGGY] final Set<String> dupCheck = new HashSet<String>(); [BUGGY] for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } this.header = header.clone(); } [CLASS] CSVFormat [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	362	362	1	replace	
4	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (header == null) { this.header = null; } else { [BUGGY] [BUGGY] final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } this.header = header.clone(); } [CLASS] CSVFormat [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	362	362	1	add	
5	[BUG] [BUGGY] for (final String hdr : header) { [FE] IllegalArgumentException [CONTEXT] if (header == null) { this.header = null; } else { final Set<String> dupCheck = new HashSet<String>(); [BUGGY] for (final String hdr : header) { [BUGGY] if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } this.header = header.clone(); } [CLASS] CSVFormat [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	363	363	1	replace	
6	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (header == null) { this.header = null; } else { final Set<String> dupCheck = new HashSet<String>(); [BUGGY] [BUGGY] for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } this.header = header.clone(); } [CLASS] CSVFormat [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	363	363	1	add	
7	[BUG] [BUGGY] this.header = header.clone(); [FE] IllegalArgumentException [CONTEXT] if (header == null) { this.header = null; } else { final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } [BUGGY] this.header = header.clone(); [BUGGY] } [CLASS] CSVFormat [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	
8	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] if (header == null) { this.header = null; } else { final Set<String> dupCheck = new HashSet<String>(); for (final String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException("The header contains a duplicate entry: '" + hdr + "' in " + Arrays.toString(header)); } } [BUGGY] [BUGGY] this.header = header.clone(); } [CLASS] CSVFormat [METHOD] <init> [RETURN_TYPE] String[],boolean,boolean)  final char delimiter Character quoteChar QuoteMode quoteMode Character commentStart Character escape final boolean ignoreSurroundingSpaces final boolean ignoreEmptyLines String recordSeparator String nullString String[] header final boolean skipHeaderRecord final boolean allowMissingColumnNames [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Set dupCheck Character commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char delimiter CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	add	
9	[BUG] [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord,  allowMissingColumnNames); [FE] IllegalArgumentException [CONTEXT] public CSVFormat withHeader(final String... header) { [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,    ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord,        allowMissingColumnNames); [BUGGY] ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord, allowMissingColumnNames); } [CLASS] CSVFormat [METHOD] withHeader [RETURN_TYPE] CSVFormat  header [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF other String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	849	851	1	replace	
10	[BUG] [BUGGY] [FE] IllegalArgumentException [CONTEXT] public CSVFormat withHeader(final String... header) { [BUGGY] [BUGGY] return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,    ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord,        allowMissingColumnNames); ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, header, skipHeaderRecord, allowMissingColumnNames); } [CLASS] CSVFormat [METHOD] withHeader [RETURN_TYPE] CSVFormat  header [VARIABLES] boolean allowMissingColumnNames ignoreEmptyLines ignoreSurroundingSpaces skipHeaderRecord Character c commentMarker commentStart escape escapeCharacter quoteChar quoteCharacter QuoteMode quoteMode char c commentMarker delimiter escape CSVFormat DEFAULT EXCEL MYSQL RFC4180 TDF other String hdr nullString recordSeparator String[] header long serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	849	851	1	add	
