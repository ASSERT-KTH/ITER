bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + ",'  in "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  if(!dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + ",'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	if(!dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + ",'  in "  +  Arrays.toString(header));  }	  if(!dupCheck.contains(header))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  this.header  =  hdr.substring(0,  hdr.length()  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.substring(0,  hdr.length()  -  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.substring(0,  hdr.length()  -  1);	  this.header    =    hdr.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  this.header  =  hdr.substring(0,  hdr.length()  -  2);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.substring(0,  hdr.length()  -  2);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.substring(0,  hdr.length()  -  2);	  this.header    =    hdr.trim();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  safe(dupCheck)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safe(dupCheck)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safe(dupCheck)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
5	[BUG]  [BUGGY]  final  String[]  header  =  dupCheck.toArray(new  String[dupCheck.size()  ]);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  final  String[]  header  =  dupCheck.toArray(new  String[dupCheck.size()  ]);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	final  String[]  header  =  dupCheck.toArray(new  String[dupCheck.size()  ]);	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  final  String[]  header  =  new  String[dupCheck.size()  ];  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  final  String[]  header  =  new  String[dupCheck.size()  ];  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	final  String[]  header  =  new  String[dupCheck.size()  ];	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  this.header  =  dupCheck.toCharArray(),  header);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  dupCheck.toCharArray(),  header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  dupCheck.toCharArray(),  header);	  this.header    =    header.toCharArray(),    dupCheck);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  dupCheck,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  dupCheck,  escapeCharacter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  dupCheck,  escapeCharacter);	  this.header    =    header.toCharArray(),    dupCheck);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  this.header  =  delimiter.toCharArray(),  header);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  delimiter.toCharArray(),  header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  delimiter.toCharArray(),  header);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
10	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  dupCheck);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  dupCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  delimiter,  dupCheck);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  despCheck);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  despCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  delimiter,  despCheck);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
12	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  quoteCharacter);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  quoteCharacter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  delimiter,  quoteCharacter);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  this.header  =  delimiter.trim(),  header);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  delimiter.trim(),  header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  delimiter.trim(),  header);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
14	[BUG]  [BUGGY]  this.header  =  hdr.trim(),  delimiter);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.trim(),  delimiter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.trim(),  delimiter);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
15	[BUG]  [BUGGY]  this.header  =  header.trim(),  delimiter,  quoteCharacter);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim(),  delimiter,  quoteCharacter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim(),  delimiter,  quoteCharacter);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  this.header  =  header.trim(),  delimiter,  dupCheck);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim(),  delimiter,  dupCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim(),  delimiter,  dupCheck);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  safe(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safe(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safe(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(hdr))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    hdr    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
18	[BUG]  [BUGGY]  safe(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + ",'  in "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safe(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + ",'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safe(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + ",'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(hdr))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    hdr    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
19	[BUG]  [BUGGY]  safeAdd(dupCheck,  header)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safeAdd(dupCheck,  header)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safeAdd(dupCheck,  header)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
20	[BUG]  [BUGGY]  safeAdd(dupCheck)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safeAdd(dupCheck)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safeAdd(dupCheck)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
21	[BUG]  [BUGGY]  this.header  =  header.toString()  +  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toString()  +  1;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toString()  +  1;	  this.header    =    header.toCharArray()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  this.header  =  header.toCharArray()  /  1;  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray()  /  1;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray()  /  1;	  this.header    =    header.toCharArray()    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  allowMissingColumnNames)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  allowMissingColumnNames)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	allowMissingColumnNames)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
24	[BUG]  [BUGGY]  allowMissingColumnNames  ||  dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  allowMissingColumnNames  ||  dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	allowMissingColumnNames  ||  dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
25	[BUG]  [BUGGY]  allowMissingColumnNames  ||  dupCheck  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  allowMissingColumnNames  ||  dupCheck  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	allowMissingColumnNames  ||  dupCheck  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  allowMissingColumnNames  &&  dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  allowMissingColumnNames  &&  dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	allowMissingColumnNames  &&  dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  this.header  =  header.charAt(0,  header.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.charAt(0,  header.length()  -  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.charAt(0,  header.length()  -  1);	  this.header    =    header.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
28	[BUG]  [BUGGY]  this.header  =  hdr.charAt(0);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.charAt(0);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.charAt(0);	  this.header    =    header.charAt(0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
29	[BUG]  [BUGGY]  Context.checkState(dupCheck.length()  ==  0)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  Context.checkState(dupCheck.length()  ==  0)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	Context.checkState(dupCheck.length()  ==  0)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  safeAdd(dupCheck.length()  -  1)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safeAdd(dupCheck.length()  -  1)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safeAdd(dupCheck.length()  -  1)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
31	[BUG]  [BUGGY]  this.header  =  header.charAt(header.length());  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.charAt(header.length());  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.charAt(header.length());	  this.header    =    header.charAt(header.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  this.header  =  header.charAt(hdr.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.charAt(hdr.length()  -  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.charAt(hdr.length()  -  1);	  this.header    =    header.charAt(header.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
33	[BUG]  [BUGGY]  this.header  =  header.charAt(header.length()  +  1);  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.charAt(header.length()  +  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.charAt(header.length()  +  1);	  this.header    =    header.charAt(header.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
34	[BUG]  [BUGGY]  safe(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safe(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safe(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(delimiter))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
35	[BUG]  [BUGGY]  safe(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safe(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safe(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  arrays.toString(header));  }	  if(dupCheck.contains(delimiter))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
36	[BUG]  [BUGGY]  this.header  =  despCheck.toCharArray(header);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  despCheck.toCharArray(header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  despCheck.toCharArray(header);	  this.header    =    header.toCharArray(dupCheck);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  this.header  =  dupCheck.toCharArray(header);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  dupCheck.toCharArray(header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  dupCheck.toCharArray(header);	  this.header    =    header.toCharArray(dupCheck);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
38	[BUG]  [BUGGY]  this.header  =  delimiter.toCharArray(dupCheck);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  delimiter.toCharArray(dupCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  delimiter.toCharArray(dupCheck);	  this.header    =    header.toCharArray(dupCheck);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  this.header  =  hdr.length();  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.length();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.length();	  this.header    =    header.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  this.header  =  header.substring(0,  header.length()  -  3);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.substring(0,  header.length()  -  3);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.substring(0,  header.length()  -  3);	  this.header    =    header.substring(0,    header.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  this.header  =  header.substring(0,  header.length()  -  4);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.substring(0,  header.length()  -  4);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.substring(0,  header.length()  -  4);	  this.header    =    header.substring(0,    header.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  this.header  =  header.substring(0,  header.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.substring(0,  header.length()  -  1)+  1;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.substring(0,  header.length()  -  1)+  1;	  this.header    =    header.substring(0,    header.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  this.header  =  header.substring(0,  header.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.substring(0,  header.length()  +  1)+  1;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.substring(0,  header.length()  +  1)+  1;	  this.header    =    header.substring(0,    header.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  this.header  =  header.substring(0,  header.length()  -  2)+  1;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.substring(0,  header.length()  -  2)+  1;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.substring(0,  header.length()  -  2)+  1;	  this.header    =    header.substring(0,    header.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
45	[BUG]  [BUGGY]  safeAdd(dupCheck.length()  -  1)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(delimiter));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safeAdd(dupCheck.length()  -  1)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(delimiter));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safeAdd(dupCheck.length()  -  1)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(delimiter));  }	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(delimiter));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
46	[BUG]  [BUGGY]  Context.checkState(dupCheck.length()  ==  0)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(delimiter));  }  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  Context.checkState(dupCheck.length()  ==  0)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(delimiter));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	Context.checkState(dupCheck.length()  ==  0)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(delimiter));  }	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(delimiter));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  this.header  =  header.trim().substring(0,  header.length()  -  1);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim().substring(0,  header.length()  -  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim().substring(0,  header.length()  -  1);	  this.header    =    header.trim()    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  this.header  =  hdr.trim()  :  null;  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.trim()  :  null;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.trim()  :  null;	  this.header    =    header.trim()    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  this.header  =  header.trim().toLowerCase()  :  null;  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim().toLowerCase()  :  null;  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim().toLowerCase()  :  null;	  this.header    =    header.trim()    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  this.header  =  Arrays.toCharArray(header);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  Arrays.toCharArray(header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  Arrays.toCharArray(header);	  this.header    =    nullString.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  if(dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  if(dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	if(dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(delimiter))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  DupCheck.contains(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  DupCheck.contains(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	DupCheck.contains(delimiter))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(delimiter))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  this.header  =  header.trim().length();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim().length();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim().length();	  this.header    =    header.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  this.header  =  hdr.substring(0,  header.length()  -  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  hdr.substring(0,  header.length()  -  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  hdr.substring(0,  header.length()  -  1);	  this.header    =    hdr.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  final  char[]  header  =  new  char[dupCheck.size()  ];  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  final  char[]  header  =  new  char[dupCheck.size()  ];  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	final  char[]  header  =  new  char[dupCheck.size()  ];	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>();  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>();	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
57	[BUG]  [BUGGY]  MutableSet  <  String>  deser  =  new  MutableSet  <  String>(dupCheck);  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  MutableSet  <  String>  deser  =  new  MutableSet  <  String>(dupCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	MutableSet  <  String>  deser  =  new  MutableSet  <  String>(dupCheck);	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  MutableSet  <  String>  despCheck  =  new  MutableSet  <  String>();  [CE]  illegal  start  of  type  [FE]                                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  MutableSet  <  String>  despCheck  =  new  MutableSet  <  String>();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	MutableSet  <  String>  despCheck  =  new  MutableSet  <  String>();	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  delimiter  +  1);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  delimiter  +  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  delimiter  +  1);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
60	[BUG]  [BUGGY]  this.header  =  delimiter.toCharArray(header);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  delimiter.toCharArray(header);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  delimiter.toCharArray(header);	  this.header    =    header.toCharArray(dupCheck);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  this.header  =  Arrays.toCharArray();  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  Arrays.toCharArray();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  Arrays.toCharArray();	  this.header    =    nullString.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
62	[BUG]  [BUGGY]  this.header  =  delimiter.toCharArray();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  delimiter.toCharArray();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  delimiter.toCharArray();	  this.header    =    nullString.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
63	[BUG]  [BUGGY]  this.header  =  header.trim(),  delimiter,  despCheck);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim(),  delimiter,  despCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim(),  delimiter,  despCheck);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
64	[BUG]  [BUGGY]  this.header  =  header.trim(),  len);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim(),  len);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim(),  len);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  safely(dupCheck.contains(hdr))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safely(dupCheck.contains(hdr))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safely(dupCheck.contains(hdr))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(hdr))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    hdr    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
66	[BUG]  [BUGGY]  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(hdr))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    hdr    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  if(dupCheck  ==  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  if(dupCheck  ==  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	if(dupCheck  ==  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  if(header!=  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  if(header!=  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	if(header!=  null)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
69	[BUG]  [BUGGY]  if(header!=  null)  {  if(!dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  if(header!=  null)  {  if(!dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	if(header!=  null)  {  if(!dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(!dupCheck.contains(header))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
70	[BUG]  [BUGGY]  this.header  =  header.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim().toLowerCase();  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim().toLowerCase();	  this.header    =    header.trim()    :    null;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
71	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  despCheck);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  despCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  despCheck);	  this.header    =    header.toCharArray(),    dupCheck);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  DeserializationPlugin.log(dupCheck,  header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  DeserializationPlugin.log(dupCheck,  header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	DeserializationPlugin.log(dupCheck,  header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + "'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(hdr))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    hdr    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  DeserializationPlugin.log(dupCheck,  header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + ",'  in "  +  Arrays.toString(header));  }  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  DeserializationPlugin.log(dupCheck,  header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + ",'  in "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	DeserializationPlugin.log(dupCheck,  header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  hdr  + ",'  in "  +  Arrays.toString(header));  }	  if(dupCheck.contains(hdr))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    hdr    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  safeMultilineCharacter(dupCheck)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safeMultilineCharacter(dupCheck)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safeMultilineCharacter(dupCheck)  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
75	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  dupCheck  +  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  dupCheck  +  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  dupCheck  +  1);	  this.header    =    header.toCharArray(),    dupCheck);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  [Delete]  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	[Delete]	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  >>  [Delete]  else  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  >>  [Delete]  else  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	>>  [Delete]  else  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  >>  [Delete]  else  if(dupCheck  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  >>  [Delete]  else  if(dupCheck  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	>>  [Delete]  else  if(dupCheck  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  >>  [Delete]  else  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  >>  [Delete]  else  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	>>  [Delete]  else  if(dupCheck!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  if(dupCheck!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
80	[BUG]  [BUGGY]  warnings.add( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  [CE]  <identifier>  expected  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  warnings.add( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	warnings.add( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in "  +  Arrays.toString(header));	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
81	[BUG]  [BUGGY]  this.header  =  header.trim(),  delimiter,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim(),  delimiter,  escapeCharacter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim(),  delimiter,  escapeCharacter);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
82	[BUG]  [BUGGY]  this.header  =  header.trim(),  delimiter,  lepCheck);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.trim(),  delimiter,  lepCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.trim(),  delimiter,  lepCheck);	  this.header    =    header.trim(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
83	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  escapeCharacter);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  escapeCharacter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  delimiter,  escapeCharacter);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
84	[BUG]  [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  lepCheck);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(),  delimiter,  lepCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(),  delimiter,  lepCheck);	  this.header    =    header.toCharArray(),    delimiter);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
85	[BUG]  [BUGGY]  this.header  =  header.toCharArray(delimiter);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.toCharArray(delimiter);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.toCharArray(delimiter);	  this.header    =    header.toCharArray(dupCheck);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
86	[BUG]  [BUGGY]  safely(dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safely(dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safely(dupCheck.contains(header))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck.contains(delimiter))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
87	[BUG]  [BUGGY]  safely(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  safely(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	safely(dupCheck))  {  throw  new  IllegalArgumentException( "The  header  contains  a  duplicate  entry:  ' "  +  header  + "'  in   "  +  Arrays.toString(header));  }	  if(dupCheck.contains(delimiter))    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(header));    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
88	[BUG]  [BUGGY]  this.header  =  header.charAt(header.length()  *  1);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  this.header  =  header.charAt(header.length()  *  1);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	this.header  =  header.charAt(header.length()  *  1);	  this.header    =    header.charAt(header.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [CE]  ';'  expected  [FE]                        IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(delimiter));    }    	non-compiled	[CE]  ';'  expected	3	None	replace
90	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentException( "Error(  [CE]  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentException( "Error(  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentException( "Error(	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(delimiter));    }    	non-compiled	[CE]  	3	None	replace
91	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentError( "Delimit  [CE]  [FE]                            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentError( "Delimit  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentError( "Delimit	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(delimiter));    }    	non-compiled	[CE]  	3	None	replace
92	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentError( "Dup  [CE]  [FE]                              IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentError( "Dup  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc(new  IllegalArgumentError( "Dup	  if(dupCheck.length()    ==    0)    {    throw    new    IllegalArgumentException(   "The    header    contains    a    duplicate    entry:    '   "    +    header    +   "'    in   "    +    Arrays.toString(delimiter));    }    	non-compiled	[CE]  	3	None	replace
93	[BUG]  [BUGGY]  MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>(dupCheck.size());  [CE]  illegal  start  of  type  [FE]                          IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>(dupCheck.size());  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>(dupCheck.size());	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
94	[BUG]  [BUGGY]  MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>(dupCheck);  [CE]  illegal  start  of  type  [FE]                            IllegalArgumentException      [CONTEXT]      if  (header  ==  null)  {  this.header  =  null;  }  else  {  final  Set<String>  dupCheck  =  new  HashSet<String>();  for  (final  String  hdr  :  header)  {  if  (!dupCheck.add(hdr))  {  throw  new  IllegalArgumentException(     "The  header  contains  a  duplicate  entry:  '     "  +  hdr  +       "'  in       "  +  Arrays.toString(header));  }  }      [BUGGY]  MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>(dupCheck);  [BUGGY]      }  [CLASS]  CSVFormat  [METHOD]  <init>  [RETURN_TYPE]  String[],boolean,boolean)  final  char  delimiter  Character  quoteChar  QuoteMode  quoteMode  Character  commentStart  Character  escape  final  boolean  ignoreSurroundingSpaces  final  boolean  ignoreEmptyLines  String  recordSeparator  String  nullString  String[]  header  final  boolean  skipHeaderRecord  final  boolean  allowMissingColumnNames  [VARIABLES]  boolean  allowMissingColumnNames  ignoreEmptyLines  ignoreSurroundingSpaces  skipHeaderRecord  Set  dupCheck  Character  commentMarker  commentStart  escape  escapeCharacter  quoteChar  quoteCharacter  QuoteMode  quoteMode  char  delimiter  CSVFormat  DEFAULT  EXCEL  MYSQL  RFC4180  TDF  String  hdr  nullString  recordSeparator  String[]  header  long  serialVersionUID  	projects/Csv12/src/main/java/org/apache/commons/csv/CSVFormat.java	0.2581988897471611	369	369	1	replace	MutableSet  <  String>  dupCheck  =  new  MutableSet  <  String>(dupCheck);	  if(dupCheck    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
