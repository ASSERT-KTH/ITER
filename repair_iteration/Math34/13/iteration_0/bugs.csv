bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] if (chromosomes == null) { [FE] AssertionError [CONTEXT] public ListPopulation(final List<Chromosome> chromosomes, final int populationLimit) { [BUGGY] if (chromosomes == null) { [BUGGY] throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public ListPopulation(final List<Chromosome> chromosomes, final int populationLimit) { [BUGGY] [BUGGY] if (chromosomes == null) { throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	
