bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    PopulationLimit.FALSE)    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	24	None	replace
2	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  =  PopulationLimit.FALSE)  {  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  =  PopulationLimit.FALSE)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  =  PopulationLimit.FALSE)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    PopulationLimit.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
3	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    PopulationLimit.FALSE)    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	24	None	replace
4	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	21	10	replace
5	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	21	10	replace
6	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit  +  1);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit  +  1);	  this.chromosomes    =    chromosomes.get(populationLimit,    numberLimit);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
7	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit,  false);	  this.chromosomes    =    chromosomes.get(populationLimit,    numberLimit);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
8	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(numberLimit,  populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(numberLimit,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(numberLimit,  populationLimit);	  this.chromosomes    =    chromosomes.get(populationLimit,    numberLimit);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
9	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  ==  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes  ==  null  ||  chromosomes.size()  ==  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	10	2	replace
10	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  ==  populationLimit)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  ==  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  ==  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	10	2	replace
11	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
12	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
13	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.asList(this.chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Arrays.asList(this.chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.asList(this.chromosomes,  populationLimit);	  this.chromosomes    =    Arrays.asList(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
14	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(Arrays.asList(chromosomes));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(Arrays.asList(chromosomes));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(Arrays.asList(chromosomes));	  this.chromosomes    =    Arrays.asList(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
15	[BUG]  [BUGGY]  this.chromosomes  =  Lists.asList(this.chromosomes);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.asList(this.chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.asList(this.chromosomes);	  this.chromosomes    =    Arrays.asList(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
16	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(Arrays.asList(this.chromosomes));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(Arrays.asList(this.chromosomes));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(Arrays.asList(this.chromosomes));	  this.chromosomes    =    Arrays.asList(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
17	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    populationLimit    <    0)    {    if(chromosomes  ==  null  ||  populationLimit  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
18	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  populationLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  populationLimit  <  =  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    populationLimit    <    0)    {    if(chromosomes  ==  null  ||  populationLimit  <  =  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
19	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes!=  null  ||  populationLimit  <  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes!=  null  ||  populationLimit  <  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    populationLimit    <    0)    {    if(chromosomes!=  null  ||  populationLimit  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
20	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  PopulationLimit  <  0)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  PopulationLimit  <  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    populationLimit    <    0)    {    if(chromosomes  ==  null  ||  PopulationLimit  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
21	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE,  chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE,  chromosomes.size());	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
22	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newLinkedList(chromosomes);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.newLinkedList(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newLinkedList(chromosomes);	  this.chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
23	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [CE]  ';'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    If(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
24	[BUG]  [BUGGY]  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [CE]  ';'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    If(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
25	[BUG]  [BUGGY]  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [CE]  ';'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    If(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    	non-compiled	[CE]  ';'  expected	52	None	replace
26	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  =  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  <  =  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null  ||  chromosomes.size()  <  =  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes!=    null    ||    chromosomes.size()    <    populationLimit)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.size()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.size()  -  1;  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.size()  -  1;	  this.populationLimit    =    chromosomes.size();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
28	[BUG]  [BUGGY]  this.populationLimit  =  populationLimit;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  populationLimit;  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  populationLimit;	  this.populationLimit    =    chromosomes.size();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
29	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.size()  +  1;  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.size()  +  1;	  this.populationLimit    =    chromosomes.size();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
30	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.size()  -  populationLimit;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.size()  -  populationLimit;  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.size()  -  populationLimit;	  this.populationLimit    =    chromosomes.size();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
31	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit,  false);	  this(new    ArrayList    <    Chromosome>(chromosomes),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
32	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes.size()),  populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes.size()),  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes.size()),  populationLimit);	  this(new    ArrayList    <    Chromosome>(chromosomes),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  0,  populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  0,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  0,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    0);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
34	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    0);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
35	[BUG]  [BUGGY]  this.chromosomes  =  Collections.EMPTYList();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.EMPTYList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.EMPTYList();	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Collections.EMPTYList();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
36	[BUG]  [BUGGY]  this.chromosomes  =  Lists.EMPTYList();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.EMPTYList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.EMPTYList();	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Collections.EMPTYList();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
37	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  }	  if(chromosomes!=    null)    {    super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
40	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  }	  if(chromosomes!=    null)    {    super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
41	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationsLimit)  {  [CE]  cannot  find  symbol  populationsLimit  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationsLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  populationsLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    populationsLimit)    {    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	23	None	replace
42	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit);    	non-compiled	[CE]  ')'  expected	29	None	replace
43	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit);    	non-compiled	[CE]  ')'  expected	29	None	replace
44	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  true);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  true);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit);    	non-compiled	[CE]  ')'  expected	29	None	replace
45	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes,  populationLimit);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
46	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  true);	  this.chromosomes    =    chromosomes.get(populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
47	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false,  populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  false,  populationLimit);	  this.chromosomes    =    chromosomes.get(populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
48	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  false,  true);	  this.chromosomes    =    chromosomes.get(populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
49	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  null);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  null);	  this.chromosomes    =    chromosomes.get(populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
50	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
51	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  chromosomes.size());	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  chromosomes);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  chromosomes);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newArrayList(chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.newArrayList(chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newArrayList(chromosomes,  populationLimit);	  this.chromosomes    =    Lists.newArrayList(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
56	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newArrayList(chromosomes.size());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.newArrayList(chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newArrayList(chromosomes.size());	  this.chromosomes    =    Lists.newArrayList(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
57	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit  +  1);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.get(populationLimit  +  1);	  this.populationLimit    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
58	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit,  populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit,  populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.get(populationLimit,  populationLimit);	  this.populationLimit    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
59	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit,  false);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.get(populationLimit,  false);	  this.populationLimit    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
60	[BUG]  [BUGGY]  chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();	          this.chromosomes    =    Collections.emptyList();    This.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
61	[BUG]  [BUGGY]  chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();	          this.chromosomes    =    Collections.emptyList();    This.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
62	[BUG]  [BUGGY]  this.populationLimit  =  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  1;  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  1;	  this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
63	[BUG]  [BUGGY]  this.populationLimit  =  number;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  number;  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  number;	  this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
64	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0,  chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0,  chromosomes.size());	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
65	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
66	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.populationLimit  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.populationLimit  =  0;  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.populationLimit  =  0;  }	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
67	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size(),    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
68	[BUG]  [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size(),    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
69	[BUG]  [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size(),    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
70	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);	  this.chromosomes    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
71	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit),  false);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit),  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit),  false);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit),    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
72	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit),  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit),  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit),  true);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit),    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
73	[BUG]  [BUGGY]  this(new  List  <  Chromosome>(chromosomes,  populationLimit),  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  List  <  Chromosome>(chromosomes,  populationLimit),  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  List  <  Chromosome>(chromosomes,  populationLimit),  false);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit),    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
74	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.asList(chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Arrays.asList(chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.asList(chromosomes,  populationLimit);	  this.chromosomes    =    Arrays.asList(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
75	[BUG]  [BUGGY]  this.chromosomes  =  Lists.asList(chromosomes);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.asList(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.asList(chromosomes);	  this.chromosomes    =    Arrays.asList(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
76	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size(),  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size(),  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  populationLimit,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size(),  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size(),  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
79	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size()  -  populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size()  -  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size()  -  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
80	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size()  -  1);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size()  -  1);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
81	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
82	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
83	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());	  this.chromosomes    =    new    LinkedList    <    Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
84	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
85	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit,  false);	  this.chromosomes    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
86	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit,  true);	  this.chromosomes    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
87	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size()  -  populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size()  -  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size()  -  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  this.populationLimit  =  0;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  this.populationLimit  =  0;  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  this.populationLimit  =  0;  }	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size());    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
89	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  PopulationLimit)  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  PopulationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  >  PopulationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    >    PopulationLimit)    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	50	None	replace
90	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit)  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    >    PopulationLimit)    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	50	None	replace
91	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  >  PopulationLimit)  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  >  PopulationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null  ||  chromosomes.size()  >  PopulationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    >    PopulationLimit)    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	50	None	replace
92	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  false));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  false));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  false));	  this(new    ArrayList    <    Chromosome>(chromosomes,    populationLimit));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
93	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  true));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  true));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  true));	  this(new    ArrayList    <    Chromosome>(chromosomes,    populationLimit));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
94	[BUG]  [BUGGY]  this(new  List  <  Chromosome>(chromosomes,  populationLimit,  false));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  List  <  Chromosome>(chromosomes,  populationLimit,  false));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  List  <  Chromosome>(chromosomes,  populationLimit,  false));	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit,    false));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
95	[BUG]  [BUGGY]  this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit,  false));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit,  false));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit,  false));	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit,    false));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
96	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  0);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  0);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
97	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    0);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
98	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.newArrayList(chromosomes);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Arrays.newArrayList(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.newArrayList(chromosomes);	  this.chromosomes    =    Arrays.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
100	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
101	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >>  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >>  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >>  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
102	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()  >=  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()  >=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes!=  null  ||  chromosomes.size()  >=  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
103	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit.UNKNOWN)  {  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit.UNKNOWN)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit.UNKNOWN)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
104	[BUG]  [BUGGY]  this.chromosomes  =  ArrayLists.newArrayList(chromosomes);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  ArrayLists.newArrayList(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  ArrayLists.newArrayList(chromosomes);	  this.chromosomes    =    ArrayLists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
105	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
106	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
107	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()!=  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()!=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    if(chromosomes!=  null  ||  chromosomes.size()!=  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
108	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit.UNKNOWN)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit.UNKNOWN)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit.UNKNOWN)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
109	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
110	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);	  this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
111	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
112	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false,  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
113	[BUG]  [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
114	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
115	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
116	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  +  1);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  +  1);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
117	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populations.size()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populations.size()  <  =  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populations.size()  <  =  0)  {	  if(chromosomes    ==    null    ||    populateLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
118	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.populationLimit  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.populationLimit  =  0;  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes.size()  <  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.populationLimit  =  0;  }	  if(chromosomes.size()    >    populationLimit)    {    super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.populationLimit    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	                this.chromosomes        =        Collections.emptyList();        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	53	1	add
120	[BUG]  [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	                this.chromosomes        =        Collections.emptyList();        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	53	1	add
121	[BUG]  [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();  this.chromosomes  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	                this.chromosomes        =        Collections.emptyList();        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.EMPTYList();  this.chromosomes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
122	[BUG]  [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	                this.chromosomes        =        Collections.emptyList();        this.chromosomes    =    Collections.emptyList();    chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	53	None	add
123	[BUG]  [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]          this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	                this.chromosomes        =        Collections.emptyList();        this.chromosomes    =    Collections.emptyList();    This.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	53	None	add
124	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(chromosomes,  populationLimit,  false);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(chromosomes,  populationLimit,  false);	  super(chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
125	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(chromosomes,  populationLimit,  true);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(chromosomes,  populationLimit,  true);	  super(chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
126	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(chromosomes,  populationLimit,  null);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(chromosomes,  populationLimit,  null);	  super(chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
127	[BUG]  [BUGGY]  super(chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(chromosomes.size(),  populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(chromosomes.size(),  populationLimit);	  super(chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
128	[BUG]  [BUGGY]  this.chromosomes  =  Collections.EMPTY_LIST;  chromosomes  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.EMPTY_LIST;  chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.EMPTY_LIST;  chromosomes  =  Collections.emptyList();	          this.chromosomes    =    Collections.emptyList();    chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
129	[BUG]  [BUGGY]  chromosomes  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Collections.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Collections.emptyList();	          this.chromosomes    =    Collections.emptyList();    chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
130	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit,  true);	  this(new    LinkedList    <    Chromosome>(chromosomes),    populationLimit,    true);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
131	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  =  PopulationLimit)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  =  PopulationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  =  PopulationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    PopulationLimit)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
132	[BUG]  [BUGGY]  this.chromosomes  =  LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE;  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE;	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
133	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  LinkedList  <  Chromosome>();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  LinkedList  <  Chromosome>();	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
134	[BUG]  [BUGGY]  this.chromosomes  =  Collections.newArrayList(chromosomes);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.newArrayList(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.newArrayList(chromosomes);	  this.chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
135	[BUG]  [BUGGY]  this.chromosomes  =  Collections.newLinkedList();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.newLinkedList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.newLinkedList();	  this.chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
136	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
137	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  true,  chromosomes);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  true,  chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  true,  chromosomes);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
138	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  chromosomes,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
139	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  true,  populationLimit);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  true,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  true,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
140	[BUG]  [BUGGY]  chromosomes  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Lists.newLinkedList();  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.newLinkedList();	  chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
141	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(chromosomes);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Lists.newArrayList(chromosomes);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.newArrayList(chromosomes);	  chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
142	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.newArrayList(populationLimit);	  chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
143	[BUG]  [BUGGY]  this(chromosomes,  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(chromosomes,  populationLimit,  true);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(chromosomes,  populationLimit,  true);	  this(chromosomes,    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
144	[BUG]  [BUGGY]  this(chromosomes,  populationLimit,  false,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(chromosomes,  populationLimit,  false,  0);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(chromosomes,  populationLimit,  false,  0);	  this(chromosomes,    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
145	[BUG]  [BUGGY]  this(chromosomes,  populationLimit,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(chromosomes,  populationLimit,  null);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(chromosomes,  populationLimit,  null);	  this(chromosomes,    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
146	[BUG]  [BUGGY]  this.chromosomes  =  Lists.emptyList();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.emptyList();	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Lists.emptyList();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
147	[BUG]  [BUGGY]  chromosomes  =  Lists.emptyList();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Lists.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.emptyList();	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Lists.emptyList();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
148	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes!=    null    ||    chromosomes.size()    >    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	10	replace
149	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes!=    null    ||    chromosomes.size()    >    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	10	replace
150	[BUG]  [BUGGY]  this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit,  true));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit,  true));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit,  true));	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit,    true));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
151	[BUG]  [BUGGY]  this(new  List  <  Chromosome>(chromosomes,  populationLimit,  true));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  List  <  Chromosome>(chromosomes,  populationLimit,  true));  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  List  <  Chromosome>(chromosomes,  populationLimit,  true));	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit,    true));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
152	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  =  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  =  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  =  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    If(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
153	[BUG]  [BUGGY]  this.chromosomes  =  Collections.  <  Chromosome>emptyList();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.  <  Chromosome>emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.  <  Chromosome>emptyList();	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
154	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit  +  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit  +  2);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit  +  2);	  this.chromosomes    =    chromosomes.get(populationLimit    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
155	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  1)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes  ==  null  ||  populationLimit  <  1)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    1)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	31	3	replace
156	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  1)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  1)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populationLimit  <  1)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    1)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	31	3	replace
157	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  1  ||  chromosomes.size()  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  1  ||  chromosomes.size()  <  =  1)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populationLimit  <  =  1  ||  chromosomes.size()  <  =  1)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
158	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size()  -  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size()  -  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size()  -  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
159	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size()  -  1);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size()  -  1);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
160	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
161	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes,  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes,  false);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
162	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  populations);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  populations);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  populations);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
163	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  >=  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes  ==  null  ||  populationLimit  >=  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    0)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	74	8	replace
164	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  >=  0)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  >=  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populationLimit  >=  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    0)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	74	8	replace
165	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  numberLimit  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  numberLimit  <  =  1)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  numberLimit  <  =  1)  {	  if(chromosomes    ==    null    ||    numberLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
166	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  numberLimit  <  0)  {  [CE]  cannot  find  symbol  numberLimit  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  numberLimit  <  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  numberLimit  <  0)  {	  if(chromosomes    ==    null    ||    numberLimit    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol  numberLimit	32	None	replace
167	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,    0);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
168	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  null);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  null);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
169	[BUG]  [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    false);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
170	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit.FALSE)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit.FALSE)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit.FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
171	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  chromosomes;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  chromosomes;  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  chromosomes;  }	  if(chromosomes!=    null)    {    super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
172	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  chromosomes;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  chromosomes;  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  chromosomes;  }	  if(chromosomes!=    null)    {    super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
173	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.emptyList();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.emptyList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.emptyList();	          this.chromosomes    =    Collections.emptyList();    This.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
174	[BUG]  [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
175	[BUG]  [BUGGY]  this.chromosomes  =  Collections.asList(chromosomes);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.asList(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.asList(chromosomes);	  this.chromosomes    =    Arrays.asList(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
176	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  populimit  <  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  if(chromosomes  ==  null  ||  populimit  <  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    populationLimit    <    0)    {    if(chromosomes  ==  null  ||  populimit  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
177	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [CE]  ';'  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    If(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
178	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit.FALSE)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit.FALSE)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit.FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
179	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit);  this.populationLimit  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit);  this.populationLimit  =  0;  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit);  this.populationLimit  =  0;	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
180	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newArrayList(populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.newArrayList(populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newArrayList(populationLimit);	  this.chromosomes    =    Lists.newArrayList(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
181	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size(),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
182	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  1);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  1);	  this.chromosomes    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
183	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  0);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  0);	  this.chromosomes    =    chromosomes.get(populationLimit,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
184	[BUG]  [BUGGY]  chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Collections.EMPTYList();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
185	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit  +  1);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit  +  1);	  this.chromosomes    =    chromosomes.get(populationLimit,    numberLimit);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
186	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  numberLimit!=  0)  {  [CE]  cannot  find  symbol  numberLimit  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  numberLimit!=  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  numberLimit!=  0)  {	  if(chromosomes    ==    null    ||    numberLimit    <    =    0)    {    	non-compiled	[CE]  cannot  find  symbol  numberLimit	32	None	replace
187	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit  *  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit  *  1);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit  *  1);	  this.chromosomes    =    chromosomes.get(populationLimit    +    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
188	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit  -  1);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.get(populationLimit  -  1);	  this.populationLimit    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
189	[BUG]  [BUGGY]  this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit),  false);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit),  false);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  java.util.ArrayList  <  Chromosome>(chromosomes,  populationLimit),  false);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit),    false);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
190	[BUG]  [BUGGY]  this(chromosomes,  populationLimit,  false,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(chromosomes,  populationLimit,  false,  chromosomes.size());  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(chromosomes,  populationLimit,  false,  chromosomes.size());	  this(chromosomes,    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
191	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size(),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size(),  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size(),  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size(),    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
192	[BUG]  [BUGGY]  this.chromosomes  =  Collections.asList(this.chromosomes);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Collections.asList(this.chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.asList(this.chromosomes);	  this.chromosomes    =    Arrays.asList(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
193	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false,  0);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  false,  0);	  this.chromosomes    =    chromosomes.get(populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
194	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Ch  [CE]  >  expected  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Ch  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Ch	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  >  expected	60	None	replace
195	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()!=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()!=  PopulationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
196	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.asList(new  LinkedList  <  Chromosome>());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Arrays.asList(new  LinkedList  <  Chromosome>());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.asList(new  LinkedList  <  Chromosome>());	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Lists.emptyList();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
197	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >=    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >=  PopulationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
198	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  PopulationLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  PopulationLimit  <  =  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  PopulationLimit  <  =  0)  {	  if(chromosomes    ==    null    ||    populateLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
199	[BUG]  [BUGGY]  super(chromosomes,  populationLimit,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(chromosomes,  populationLimit,  0);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(chromosomes,  populationLimit,  0);	  super(chromosomes,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
200	[BUG]  [BUGGY]  this(chromosomes,  populationLimit,  false,  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(chromosomes,  populationLimit,  false,  null);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(chromosomes,  populationLimit,  false,  null);	  this(chromosomes,    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
201	[BUG]  [BUGGY]  this.populationLimit  =  0,  chromosomes.size());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.populationLimit  =  0,  chromosomes.size());  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  0,  chromosomes.size());	  this.populationLimit    =    0;    	non-compiled	[CE]  ';'  expected	44	None	replace
202	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  populationLimit);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  populationLimit);	  this.chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
203	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  }	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
204	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.chromosomes    =    Collections.emptyList();    this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
205	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false),  chromosomes);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false),  chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false),  chromosomes);	  this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit,    false));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
206	[BUG]  [BUGGY]  this.chromosomes  =  ArrayLists.newArrayListWithCapacity(chromosomes);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  ArrayLists.newArrayListWithCapacity(chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  ArrayLists.newArrayListWithCapacity(chromosomes);	  this.chromosomes    =    ArrayLists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
207	[BUG]  [BUGGY]  Super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  Super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	Super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  true);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.size(),    populationLimit,    false);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
208	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.asList(this.chromosomes,  populationsLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Arrays.asList(this.chromosomes,  populationsLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.asList(this.chromosomes,  populationsLimit);	  this.chromosomes    =    Arrays.asList(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
209	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(4);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(4);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(4);	  this.chromosomes    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
210	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit);	  chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
211	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(this.populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  chromosomes  =  Lists.newArrayList(this.populationLimit);  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.newArrayList(this.populationLimit);	  chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
212	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.UNKNOWN)  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.UNKNOWN)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.UNKNOWN)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes    ==    null    ||    chromosomes.size()    <    PopulationLimit.FALSE)    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	24	None	replace
213	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newLinkedList(this.populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Lists.newLinkedList(this.populationLimit);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newLinkedList(this.populationLimit);	  this.chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
214	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.newLinkedList();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this.chromosomes  =  Arrays.newLinkedList();  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.newLinkedList();	  this.chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
215	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  0);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  0);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
216	[BUG]  [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);  [BUGGY]      if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);	  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
217	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  totalLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {      [BUGGY]  if(chromosomes  ==  null  ||  totalLimit  <  =  0)  {  [BUGGY]      throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  totalLimit  <  =  0)  {	  if(chromosomes    ==    null    ||    numberLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
