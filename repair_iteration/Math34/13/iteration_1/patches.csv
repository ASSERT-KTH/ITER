bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size());  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes.size());	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,  chromosomes);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  populationLimit);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN,    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  populationLimit);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  populationLimit);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size());  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes.size());	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  chromosomes);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    =    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	11	5	replace
8	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()  >=  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    =    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	11	5	replace
9	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    =    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	11	9	replace
10	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  chromosomes.size()!=  populationLimit)  {	  if(chromosomes    ==    null    ||    chromosomes.size()    <    =    populationLimit)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	11	9	replace
11	[BUG]  [BUGGY]  this.chromosomes  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Collections.newArrayList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.newArrayList();	      this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.newArrayList();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Arrays.newArrayList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.newArrayList();	      this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newArrayList(chromosomes);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Lists.newArrayList(chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newArrayList(chromosomes);	      this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  chromosomes;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  chromosomes;  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  chromosomes;	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  chromosomes;  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes;	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
16	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
17	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  0);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  0);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  0);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
22	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes!=  null  ||  chromosomes.size()  <  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
23	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationsLimit)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationsLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  <  populationsLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
24	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit.FALSE)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
25	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>();	      this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  this.chromosomes  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Collections.EMPTY_LIST;  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Collections.EMPTY_LIST;	      this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.asList(this.chromosomes);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Arrays.asList(this.chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.asList(this.chromosomes);	      this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes),  populationLimit);	      this(new    LinkedList    <    Chromosome>(chromosomes),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit);	      this(new    LinkedList    <    Chromosome>(chromosomes),    populationLimit);    	non-compiled	[CE]  ')'  expected	4	None	replace
30	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes),  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes),  populationLimit,  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes),  populationLimit,  false);	      this(new    LinkedList    <    Chromosome>(chromosomes),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  1)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populationLimit  <  =  1)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  numberLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  numberLimit  <  =  0)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  numberLimit  <  =  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  populationLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes!=  null  ||  populationLimit  <  =  0)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null  ||  populationLimit  <  =  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  false);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
37	[BUG]  [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit));  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  ArrayList  <  Chromosome>(chromosomes,  populationLimit));	      this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false));  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  false));	      this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  true));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  true));  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit,  true));	      this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  populationLimit);	      this.chromosomes    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  false);	      this.chromosomes    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit  +  1);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit  +  1);	      this.chromosomes    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.populationLimit  =  0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.populationLimit  =  0;  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.populationLimit  =  0;	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
44	[BUG]  [BUGGY]  this.populationLimit  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.populationLimit  =  0;  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  0;	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  this.populationLimit  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  this.populationLimit  =  0;  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  this.populationLimit  =  0;	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
46	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>();  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
48	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes,  populationLimit);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
50	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >  PopulationLimit)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  >  PopulationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  >  PopulationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
51	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes!=  null  ||  chromosomes.size()  >  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
52	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    If(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	7	1	add
54	[BUG]  [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.emptyList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	7	1	add
55	[BUG]  [BUGGY]      this.chromosomes  =  Collections.emptyList();  chromosomes  =  Collections.emptyList();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]      this.chromosomes  =  Collections.emptyList();  chromosomes  =  Collections.emptyList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	        this.chromosomes    =    Collections.emptyList();    chromosomes  =  Collections.emptyList();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	7	None	add
56	[BUG]  [BUGGY]      this.chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]      this.chromosomes  =  Collections.emptyList();  This.chromosomes  =  Collections.emptyList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	        this.chromosomes    =    Collections.emptyList();    This.chromosomes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
57	[BUG]  [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Lists.emptyList();  [CE]  cannot  find  symbol  Lists  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Lists.emptyList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Lists.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	7	None	add
58	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Lists.newLinkedList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Lists.newLinkedList();	      this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  this.chromosomes  =  new  ArrayList  <  Chromosome>();	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
61	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_SIZE);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
62	[BUG]  [BUGGY]  this.chromosomes  =  Arrays.asList(chromosomes);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  Arrays.asList(chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  Arrays.asList(chromosomes);	      this.chromosomes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  <  PopulationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
64	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [CE]  ';'  expected  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    <    populationLimit)    {    If(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
65	[BUG]  [BUGGY]  this(chromosomes,  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(chromosomes,  populationLimit,  false);  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(chromosomes,  populationLimit,  false);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  chromosomes  =  Lists.newArrayList();  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	chromosomes  =  Lists.newArrayList();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  super(chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(chromosomes,  populationLimit);  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(chromosomes,  populationLimit);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
68	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  chromosomes);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  chromosomes);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false,  chromosomes);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes),  populationLimit,  true);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes),  populationLimit,  true);	      this(new    LinkedList    <    Chromosome>(chromosomes),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
70	[BUG]  [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit),  false);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit),  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this(new  LinkedList  <  Chromosome>(chromosomes,  populationLimit),  false);	      this(new    LinkedList    <    Chromosome>(chromosomes,    populationLimit));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]      this.chromosomes  =  Collections.emptyList();  this.chromosomes  =  Collections.EMPTYList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	        this.chromosomes    =    Collections.emptyList();    this.chromosomes  =  Collections.EMPTYList();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
72	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0,  populationLimit);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0,  populationLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0,  populationLimit);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	add	if(chromosomes  ==  null  ||  populationLimit  <  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    0)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	3	replace
74	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  0)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populationLimit  <  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    0)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	3	replace
75	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.populationLimit  =  chromosomes.size();  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.size();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.populationLimit  =  chromosomes.get(populationLimit);  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.populationLimit  =  chromosomes.get(populationLimit);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  false);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  false);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
78	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populateLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  populateLimit  <  =  0)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes  ==  null  ||  populateLimit  <  =  0)  {	  if(chromosomes    ==    null    ||    populationLimit    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  chromosomes.get(populationLimit,  numberLimit);	      this.chromosomes    =    chromosomes.get(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.populationLimit  =  0;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.populationLimit  =  0;  }  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes.size()  >  populationLimit)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.populationLimit  =  0;  }	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.populationLimit    =    0;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes  ==  null  ||  chromosomes.size()  >  populationLimit)  {  if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {  [BUGGY]    throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes    ==    null    ||    chromosomes.size()    >    populationLimit)    {    if(chromosomes  ==  null  ||  chromosomes.size()  <  populationLimit)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
82	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  chromosomes;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  chromosomes;  }  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	if(chromosomes!=  null)  {  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  this.chromosomes  =  chromosomes;  }	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    this.chromosomes    =    chromosomes;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
83	[BUG]  [BUGGY]  this.chromosomes  =  ArrayLists.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  this.chromosomes  =  ArrayLists.newArrayList();  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	this.chromosomes  =  ArrayLists.newArrayList();	      this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
84	[BUG]  [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {    [BUGGY]  super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  0);  [BUGGY]    if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	65	65	1	replace	super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  0);	      super(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
