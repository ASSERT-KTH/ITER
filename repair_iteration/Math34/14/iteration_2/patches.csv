bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]    NotPositiveException    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    0    ||    populationLimit    >    chromosomes.size())    {    if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
2	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  If(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  [CE]  ';'  expected  [FE]      NotPositiveException    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  If(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    0    ||    populationLimit    >    chromosomes.size())    {    If(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {	  	non-compiled	[CE]  ';'  expected	11	None	add
3	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  if(populationLimit  >=  0  ||  populationLimit  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]        NotPositiveException    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  if(populationLimit  >=  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    0    ||    populationLimit    >    chromosomes.size())    {    if(populationLimit  >=  0  ||  populationLimit  >  chromosomes.size())  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
4	[BUG]  [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
6	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
7	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
8	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  if(populationLimit  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  if(populationLimit  <  1)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    1)    {    if(populationLimit  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
10	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  If(populationLimit  <  1)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  If(populationLimit  <  1)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    1)    {    If(populationLimit  <  1)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
11	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  if(populationLimit  >=  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  if(populationLimit  >=  1)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    1)    {    if(populationLimit  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
12	[BUG]  [BUGGY]  static  final  int  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  static  final  int  populationLimit  =  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	static  final  int  populationLimit  =  chromosomes.size();	  final    int    populationLimit    =    chromosomes.size()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
13	[BUG]  [BUGGY]  Final  int  populationLimit  =  chromosomes.size();  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  Final  int  populationLimit  =  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	Final  int  populationLimit  =  chromosomes.size();	  final    int    populationLimit    =    chromosomes.size()    -    2;    	non-compiled	[CE]  not  a  statement	65	None	replace
14	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator    <    Chromosome>    it    =    chromosomes.iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
15	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator    <    Chromosome>    it    =    chromosomes.iterator();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
16	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
17	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
18	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
19	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  null  =  new  LinkedList  <  Chromosome>();  this.chromosomes  =  new  LinkedList  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  null  =  new  LinkedList  <  Chromosome>();  this.chromosomes  =  new  LinkedList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	null  =  new  LinkedList  <  Chromosome>();  this.chromosomes  =  new  LinkedList  <  Chromosome>();	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
21	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NO  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NO  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NO	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {	  if(populationLimit    <    1)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  2)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  <  2)  {	  if(populationLimit    <    1)    {    	compilable	  [FE]  AssertionError  	14	2	replace
28	[BUG]  [BUGGY]  if(populationLimit  <  2)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  2)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  2)  {	  if(populationLimit    <    1)    {    	compilable	  [FE]  AssertionError  	14	2	replace
29	[BUG]  [BUGGY]  Integer  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  Integer  populationLimit  =  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	Integer  populationLimit  =  chromosomes.size();	  int    populationLimit    =    chromosomes.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
31	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
32	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit  +  1);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
33	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  numberLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  numberLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
34	[BUG]  [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes);	  chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
35	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit);	  chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
36	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  >  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	35	7	replace
37	[BUG]  [BUGGY]  if(chromosomes.size()  >  0  ||  populationLimit  >  chromosomes.size())  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	35	7	replace
38	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  <  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  <  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  ==  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  ==  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	35	6	replace
40	[BUG]  [BUGGY]  if(chromosomes.size()  ==  0  ||  populationLimit  >  chromosomes.size())  {  [FE]  NotPositiveException  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  ==  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  ==  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	35	6	replace
41	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(this.populationLimit,  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Lists.newArrayList(this.populationLimit,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Lists.newArrayList(this.populationLimit,  populationLimit);	  chromosomes    =    Lists.newArrayList(this.populationLimit);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Lists.newArrayList(populationLimit);	  chromosomes    =    Lists.newArrayList(this.populationLimit);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
43	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);	  chromosomes    =    Lists.newArrayList(this.populationLimit);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
44	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
45	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
46	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(0);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(0);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(0);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(0);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
47	[BUG]  [BUGGY]  chromosomes  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Collections.newHashSet();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Collections.newHashSet();	  chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  chromosomes  =  Collections.newLinkedList();  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Collections.newLinkedList();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Collections.newLinkedList();	  chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
50	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  if(populationLimit  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0)  {  if(populationLimit  ==  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    ==    0)    {    if(populationLimit  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
51	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  if(populationLimit  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0)  {  if(populationLimit  >=  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    ==    0)    {    if(populationLimit  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
52	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  if(populationLimit!=  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0)  {  if(populationLimit!=  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    ==    0)    {    if(populationLimit!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
53	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  If(populationLimit  ==  0)  {  [CE]  ';'  expected  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0)  {  If(populationLimit  ==  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    ==    0)    {    If(populationLimit  ==  0)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
54	[BUG]  [BUGGY]  If(populationLimit  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  If(populationLimit  <  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	If(populationLimit  <  0)  {	  if(populationLimit    <    0)    {    If(populationLimit    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
55	[BUG]  [BUGGY]  If(populationLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  If(populationLimit  <  =  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	If(populationLimit  <  =  0)  {	  if(populationLimit    <    0)    {    If(populationLimit    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
56	[BUG]  [BUGGY]  If(populationLimit  ==  0)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  If(populationLimit  ==  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	If(populationLimit  ==  0)  {	  if(populationLimit    <    0)    {    If(populationLimit    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
57	[BUG]  [BUGGY]  If(populationLimit  <  0  ||  populationLimit  >  0)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  If(populationLimit  <  0  ||  populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	If(populationLimit  <  0  ||  populationLimit  >  0)  {	  if(populationLimit    <    0)    {    If(populationLimit    <    0)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
58	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
59	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
61	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  if(populationLimit  >  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0)  {  if(populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    >    0)    {    if(populationLimit  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
62	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  If(populationLimit  >  0)  {  [CE]  ';'  expected  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0)  {  If(populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    >    0)    {    If(populationLimit  >  0)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
63	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  if(PopulationLimit  >  0)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0)  {  if(PopulationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    >    0)    {    if(PopulationLimit  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
64	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
65	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
66	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	58	None	replace
67	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);	  chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
68	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);	  chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
69	[BUG]  [BUGGY]  if(chromosomes  <  0  ||  populationLimit  >  chromosomes.size())  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  <  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  <  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	42	None	replace
70	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null  ||  populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
71	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null  ||  populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null  ||  populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
72	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
73	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  2);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  2);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  2);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
74	[BUG]  [BUGGY]  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
75	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    NotPositiveException    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  <  0  ||  populationLimit  >  chromosomes.size())  {	  if(populationLimit    <    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	12	7	replace
76	[BUG]  [BUGGY]  if(chromosomes.size()  <  0  ||  populationLimit  >  chromosomes.size())  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    NotPositiveException    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  0  ||  populationLimit  >  chromosomes.size())  {	  if(populationLimit    <    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	12	7	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  	compilable	  [FE]  AssertionError  	17	1	add
78	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  	compilable	  [FE]  AssertionError  	17	1	add
79	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	17	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	  	compilable	  [FE]  AssertionError  	17	1	add
81	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	  	compilable	  [FE]  AssertionError  	17	1	add
82	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  	non-compiled	[CE]  cannot  find  symbol  This	17	None	add
83	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.EMPTY_LIST_NOT_POSITIVE)  {  [CE]  cannot  find  symbol  EMPTY_LIST_NOT_POSITIVE  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.EMPTY_LIST_NOT_POSITIVE)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  >  List.EMPTY_LIST_NOT_POSITIVE)  {	  if(populationLimit    <    0    ||    populationLimit    >    List.POPULATION_LIMIT_NOT_POSITIVE)    {    	non-compiled	[CE]  cannot  find  symbol  EMPTY_LIST_NOT_POSITIVE	64	None	replace
84	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.BIGGER_POPULATION_SIZE)  {  [CE]  cannot  find  symbol  BIGGER_POPULATION_SIZE  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.BIGGER_POPULATION_SIZE)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  >  List.BIGGER_POPULATION_SIZE)  {	  if(populationLimit    <    0    ||    populationLimit    >    List.POPULATION_LIMIT_NOT_POSITIVE)    {    	non-compiled	[CE]  cannot  find  symbol  BIGGER_POPULATION_SIZE	64	None	replace
85	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.BOOLEAN_POPULATION_LIMIT_NOT_POSITIVE)  {  [CE]  cannot  find  symbol  BOOLEAN_POPULATION_LIMIT_NOT_POSITIVE  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.BOOLEAN_POPULATION_LIMIT_NOT_POSITIVE)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  >  List.BOOLEAN_POPULATION_LIMIT_NOT_POSITIVE)  {	  if(populationLimit    <    0    ||    populationLimit    >    List.POPULATION_LIMIT_NOT_POSITIVE)    {    	non-compiled	[CE]  cannot  find  symbol  BOOLEAN_POPULATION_LIMIT_NOT_POSITIVE	64	None	replace
86	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    these.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
87	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    these.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
88	[BUG]  [BUGGY]  final  long  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  long  populationLimit  =  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  long  populationLimit  =  chromosomes.size();	  final    int    populationLimit    =    chromosomes.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
89	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
90	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
91	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
92	[BUG]  [BUGGY]  final  long  populationLimit  =  chromosomes.size()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  long  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  long  populationLimit  =  chromosomes.size()  -  1;	  final    int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
93	[BUG]  [BUGGY]  final  double  populationLimit  =  chromosomes.size()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  double  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  double  populationLimit  =  chromosomes.size()  -  1;	  final    int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  This.chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  This.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	This.chromosomes  =  new  ArrayList  <  Chromosome>();	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    This.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  if(populationLimit  <  2)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  2)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  2)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
96	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  >  0  ||  populationLimit  <  chromosomes.size())  {	  if(populationLimit    >    0)    {    	compilable	  [FE]  NotPositiveException  	51	6	replace
97	[BUG]  [BUGGY]  if(populationLimit  >  0  ||  populationLimit  <  chromosomes.size())  {  [FE]  NotPositiveException  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  >  0  ||  populationLimit  <  chromosomes.size())  {	  if(populationLimit    >    0)    {    	compilable	  [FE]  NotPositiveException  	51	6	replace
98	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  <  0  ||  populationLimit  >  0)  {	  if(populationLimit    <    0)    {    if(populationLimit    <    0)    {    	compilable	  [FE]  NotPositiveException  	32	6	replace
99	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  0)  {  [FE]  NotPositiveException  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  >  0)  {	  if(populationLimit    <    0)    {    if(populationLimit    <    0)    {    	compilable	  [FE]  NotPositiveException  	32	6	replace
100	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  false);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  false);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  false);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
101	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  true);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  true);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  true);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
102	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  <  0  ||  populationLimit  <  chromosomes.size())  {	  if(populationLimit    <    =    0    ||    populationLimit    <    chromosomes.size())    {    	compilable	  [FE]  AssertionError  	36	2	replace
104	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  <  chromosomes.size())  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  <  chromosomes.size())  {	  if(populationLimit    <    =    0    ||    populationLimit    <    chromosomes.size())    {    	compilable	  [FE]  AssertionError  	36	2	replace
105	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	59	7	replace
106	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	59	7	replace
107	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  >  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	59	6	replace
108	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [FE]  NotPositiveException  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	59	6	replace
109	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >=  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  >=  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	59	6	replace
110	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [FE]  NotPositiveException  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >=  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >=  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	59	6	replace
111	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	48	None	add
112	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	48	None	add
113	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	48	None	add
114	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  if(it!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  }  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]          AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  if(it!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    if(it!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  it.iterator();  }	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	48	None	add
115	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator());  Iterator  <  Chromosome>  it  =  it.iterator();  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)  [FE]            AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator());  Iterator  <  Chromosome>  it  =  it.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator());  Iterator  <  Chromosome>  it  =  it.iterator();	  	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)	48	None	add
116	[BUG]  [BUGGY]  float  populationLimit  =  chromosomes.size()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  float  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	float  populationLimit  =  chromosomes.size()  -  1;	  int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
117	[BUG]  [BUGGY]  long  populationLimit  =  chromosomes.size()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  long  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	long  populationLimit  =  chromosomes.size()  -  1;	  int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
118	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1);	  chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
119	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit);	  chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
120	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
121	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
122	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
123	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator    <    Chromosome>    it    =    chromosomes.iterator();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
124	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator    <    Chromosome>    it    =    chromosomes.iterator();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
125	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator    <    Chromosome>    it    =    chromosomes.iterator();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
126	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1);  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1);  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1);  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator    <    Chromosome>    it    =    chromosomes.iterator();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
127	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
128	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  ==  0  ||  populationLimit  >  chromosomes.size())  {	  if(populationLimit    ==    0)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	16	7	replace
129	[BUG]  [BUGGY]  if(populationLimit  ==  0  ||  populationLimit  >  chromosomes.size())  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  ==  0  ||  populationLimit  >  chromosomes.size())  {	  if(populationLimit    ==    0)    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	16	7	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  ==  0  ||  populationLimit  <  chromosomes.size())  {	  if(populationLimit    ==    0)    {    	compilable	  [FE]  AssertionError  	16	2	replace
131	[BUG]  [BUGGY]  if(populationLimit  ==  0  ||  populationLimit  <  chromosomes.size())  {  [FE]  AssertionError  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  ==  0  ||  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  ==  0  ||  populationLimit  <  chromosomes.size())  {	  if(populationLimit    ==    0)    {    	compilable	  [FE]  AssertionError  	16	2	replace
132	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	1	1	add
134	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	1	1	add
135	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	1	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
137	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
138	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  cannot  find  symbol  This  [FE]          AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    This.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
139	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	45	None	add
140	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	45	None	add
141	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    This.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  cannot  find  symbol  This	45	None	add
142	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]          AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	45	None	add
143	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  it.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]            AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  it.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  it.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	45	None	add
144	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
145	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  	compilable	  [FE]  AssertionError  	17	1	add
147	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  	compilable	  [FE]  AssertionError  	17	1	add
148	[BUG]  [BUGGY]  if(populationLimit  <  =  0  &&  populationLimit  <  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0  &&  populationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0  &&  populationLimit  <  chromosomes.size())  {	  if(populationLimit    <    =    0    ||    populationLimit    <    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
149	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    This.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
150	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  This.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    This.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  >  populationLimit)  {	  if(populationLimit    <    0)    {    if(populationLimit    <    0)    {    	compilable	  [FE]  AssertionError  	32	2	replace
152	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {	  if(populationLimit    <    0)    {    if(populationLimit    <    0)    {    	compilable	  [FE]  AssertionError  	32	2	replace
153	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
154	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	1	1	add
155	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        this.chromosomes    =    new    ArrayList    <    Chromosome>();    if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
156	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.POPULATION_LIMIT_NOT_SIZE)  {  [CE]  cannot  find  symbol  POPULATION_LIMIT_NOT_SIZE  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.POPULATION_LIMIT_NOT_SIZE)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  >  List.POPULATION_LIMIT_NOT_SIZE)  {	  if(populationLimit    <    0    ||    populationLimit    >    List.POPULATION_LIMIT_NOT_POSITIVE)    {    	non-compiled	[CE]  cannot  find  symbol  POPULATION_LIMIT_NOT_SIZE	64	None	replace
157	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.EMPTY_LIST)  {  [CE]  cannot  find  symbol  EMPTY_LIST  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  List.EMPTY_LIST)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  0  ||  populationLimit  >  List.EMPTY_LIST)  {	  if(populationLimit    <    0    ||    populationLimit    >    List.POPULATION_LIMIT_NOT_POSITIVE)    {    	non-compiled	[CE]  cannot  find  symbol  EMPTY_LIST	64	None	replace
158	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
159	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
160	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
161	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1,  populationLimit);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size()  -  1,  populationLimit);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
162	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
163	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  these.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  these.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  these.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    these.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
164	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  these.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  these.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  these.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    these.chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
165	[BUG]  [BUGGY]  final  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
166	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(1);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(1);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(0);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
167	[BUG]  [BUGGY]  chromosomes  =  Lists.newLinkedList(this.populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Lists.newLinkedList(this.populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Lists.newLinkedList(this.populationLimit);	  chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
168	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
169	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>();    chromosomes    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
170	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  not  a  statement	45	None	add
171	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  it.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  it.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  Iterator  <  Chromosome>  it  =  it.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	45	None	add
172	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
173	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
174	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >=  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  >=  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	35	6	replace
175	[BUG]  [BUGGY]  if(chromosomes.size()  >=  0  ||  populationLimit  >  chromosomes.size())  {  [FE]  NotPositiveException  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >=  0  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >=  0  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  NotPositiveException  	35	6	replace
176	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    This.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
177	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    This.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
178	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	47	None	replace
179	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  ==  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(chromosomes.size()  ==  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	59	7	replace
180	[BUG]  [BUGGY]  if(chromosomes.size()  ==  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  ==  populationLimit  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  ==  populationLimit  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	59	7	replace
181	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populations);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populations);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populations);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
182	[BUG]  [BUGGY]  if(chromosomes!=  null  ||  populationLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null  ||  populationLimit  <  =  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null  ||  populationLimit  <  =  0)  {	  if(chromosomes    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
183	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  int  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0)  {  int  populationLimit  =  chromosomes.size();  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    >    0)    {    int  populationLimit  =  chromosomes.size();	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
184	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  these.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  these.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  these.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    these.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
185	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
186	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
187	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
188	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  If(populationLimit  <  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  If(populationLimit  <  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  If(populationLimit  <  0)  {	  if(populationLimit    <    0)    {    If(populationLimit    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
189	[BUG]  [BUGGY]  final  int  populationLimit  =(chromosomes.size()  <  1)?  populationLimit  :  chromosomes.size();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  int  populationLimit  =(chromosomes.size()  <  1)?  populationLimit  :  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  int  populationLimit  =(chromosomes.size()  <  1)?  populationLimit  :  chromosomes.size();	  final    int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
190	[BUG]  [BUGGY]  final  int  populationLimit  =(chromosomes.size()  <  1)?  0  :  chromosomes.size();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  int  populationLimit  =(chromosomes.size()  <  1)?  0  :  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  int  populationLimit  =(chromosomes.size()  <  1)?  0  :  chromosomes.size();	  final    int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
191	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
192	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
193	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
194	[BUG]  [BUGGY]  chromosomes  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Collections.EMPTY_LIST;  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Collections.EMPTY_LIST;	  chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
195	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
196	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	48	None	add
197	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  variable  it  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	48	None	add
198	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>(chromosomes.size());        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    ArrayList  <  Chromosome>(chromosomes.size());  Iterator  <  Chromosome>  it  =  chromosomes.iterator();	  	non-compiled	[CE]  not  a  statement	48	None	add
199	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
200	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
201	[BUG]  [BUGGY]  int  populationLimit  =(chromosomes.size()  <  1)?  populationLimit  :  chromosomes.size();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  int  populationLimit  =(chromosomes.size()  <  1)?  populationLimit  :  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	int  populationLimit  =(chromosomes.size()  <  1)?  populationLimit  :  chromosomes.size();	  int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
202	[BUG]  [BUGGY]  int  populationLimit  =(chromosomes.size()  <  1)?  0  :  chromosomes.size();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  int  populationLimit  =(chromosomes.size()  <  1)?  0  :  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	int  populationLimit  =(chromosomes.size()  <  1)?  0  :  chromosomes.size();	  int    populationLimit    =    chromosomes.size()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
203	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION);  }	  if(populationLimit    <    =    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
204	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  int  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  int  populationLimit  =  chromosomes.size();  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    1)    {    int  populationLimit  =  chromosomes.size();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
205	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  if(populationLimit  <  2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1)  {  if(populationLimit  <  2)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit    <    1)    {    if(populationLimit  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
206	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
207	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
208	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
209	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
210	[BUG]  [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
211	[BUG]  [BUGGY]  final  int  populationLimit  =(chromosomes.size()  <  2)?  0  :  chromosomes.size();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  final  int  populationLimit  =(chromosomes.size()  <  2)?  0  :  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	final  int  populationLimit  =(chromosomes.size()  <  2)?  0  :  chromosomes.size();	  final    int    populationLimit    =    chromosomes.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
212	[BUG]  [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  LinkedList  <  Chromosome>(1);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  LinkedList  <  Chromosome>(1);	  this.chromosomes    =    new    ArrayList    <    Chromosome>(0);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
213	[BUG]  [BUGGY]  chromosomes  =  Collections.newArrayList(this.populationLimit);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  Collections.newArrayList(this.populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  Collections.newArrayList(this.populationLimit);	  chromosomes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
214	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1  ||  populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit  <  1  ||  populationLimit  >  0)  {	  if(populationLimit    <    1)    {    	compilable	  [FE]  NotPositiveException  	14	6	replace
215	[BUG]  [BUGGY]  if(populationLimit  <  1  ||  populationLimit  >  0)  {  [FE]  NotPositiveException  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  1  ||  populationLimit  >  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  1  ||  populationLimit  >  0)  {	  if(populationLimit    <    1)    {    	compilable	  [FE]  NotPositiveException  	14	6	replace
216	[BUG]  [BUGGY]  if(populationLimit  >  0  ||  populationLimit  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  >  0  ||  populationLimit  <  =  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  >  0  ||  populationLimit  <  =  0)  {	  if(populationLimit    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
217	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit  ||  chromosomes.size()  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  populationLimit  ||  chromosomes.size()  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  populationLimit  ||  chromosomes.size()  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
218	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  1  ||  populationLimit  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  1  ||  populationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  1  ||  populationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
219	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit  ||  chromosomes.size()  >  populationLimit)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  =  populationLimit  ||  chromosomes.size()  >  populationLimit)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  =  populationLimit  ||  chromosomes.size()  >  populationLimit)  {	  if(chromosomes.size()    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
220	[BUG]  [BUGGY]  this.chromosomes  =  new  TreeSet  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  TreeSet  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  TreeSet  <  Chromosome>(chromosomes.size());	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
221	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
222	[BUG]  [BUGGY]  safePosition(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  safePosition(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	safePosition(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
223	[BUG]  [BUGGY]  safePosition(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  safePosition(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	safePosition(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    numberLimit);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
224	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_SETTING,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
225	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
226	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  PopulationLimit  >  chromosomes.size())  {  [CE]  cannot  find  symbol  PopulationLimit  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  PopulationLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit  ||  PopulationLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	59	None	replace
227	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  numberLimit  >  chromosomes.size())  {  [CE]  cannot  find  symbol  numberLimit  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  numberLimit  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  <  populationLimit  ||  numberLimit  >  chromosomes.size())  {	  if(chromosomes.size()    <    =    populationLimit    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  cannot  find  symbol  numberLimit	59	None	replace
228	[BUG]  [BUGGY]  this.chromosomes  =  new  TreeList  <  Chromosome>(chromosomes.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  this.chromosomes  =  new  TreeList  <  Chromosome>(chromosomes.size());  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	this.chromosomes  =  new  TreeList  <  Chromosome>(chromosomes.size());	  this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
229	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  it  =  chromosomes.iterator();	  	compilable	  [FE]  AssertionError  	45	1	add
230	[BUG]  [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  it  =  chromosomes.iterator();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]          this.chromosomes    =    new    ArrayList    <    Chromosome>();    Iterator  <  Chromosome>  it  =  chromosomes.iterator();  this.chromosomes  =  new  ArrayList  <  Chromosome>();  it  =  chromosomes.iterator();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	                this.chromosomes        =        new        ArrayList        <        Chromosome>();        Iterator    <    Chromosome>    it    =    chromosomes.iterator();    this.chromosomes  =  new  ArrayList  <  Chromosome>();  it  =  chromosomes.iterator();	  	compilable	  [FE]  AssertionError  	45	1	add
231	[BUG]  [BUGGY]  chromosomes  =  new  TreeSet  <  Chromosome>();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  chromosomes  =  new  TreeSet  <  Chromosome>();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	chromosomes  =  new  TreeSet  <  Chromosome>();	  chromosomes    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
232	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES	  this.chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  ')'  expected	28	None	replace
233	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	  this.chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  ')'  expected	28	None	replace
234	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  This.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    This.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
235	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit!=  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	add	if(populationLimit!=  0)  {	  if(populationLimit    ==    0)    {    	compilable	  [FE]  NotPositiveException  	16	6	replace
236	[BUG]  [BUGGY]  if(populationLimit!=  0)  {  [FE]  NotPositiveException  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit!=  0)  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit!=  0)  {	  if(populationLimit    ==    0)    {    	compilable	  [FE]  NotPositiveException  	16	6	replace
237	[BUG]  [BUGGY]  Int  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  Int  populationLimit  =  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	Int  populationLimit  =  chromosomes.size();	  int    populationLimit    =    chromosomes.size()    -    2;    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
238	[BUG]  [BUGGY]  MutableFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  MutableFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	MutableFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	60	None	replace
239	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  PopulationLimit  <  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(populationLimit  <  =  0  ||  PopulationLimit  <  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(populationLimit  <  =  0  ||  PopulationLimit  <  chromosomes.size())  {	  if(populationLimit    <    =    0    ||    populationLimit    <    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
240	[BUG]  [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  0  ||  chromosomes.size()  >  chromosomes.size())  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  if(chromosomes  ==  null  ||  populationLimit  <  =  0  ||  chromosomes.size()  >  chromosomes.size())  {  [BUGGY]      throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	if(chromosomes  ==  null  ||  populationLimit  <  =  0  ||  chromosomes.size()  >  chromosomes.size())  {	  if(chromosomes    <    =    0    ||    populationLimit    >    chromosomes.size())    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
241	[BUG]  [BUGGY]  int  populationLimit  =(chromosomes.size()  <  1)?  1  :  chromosomes.size();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  int  populationLimit  =(chromosomes.size()  <  1)?  1  :  chromosomes.size();  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	int  populationLimit  =(chromosomes.size()  <  1)?  1  :  chromosomes.size();	  int    populationLimit    =    chromosomes.size()    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
242	[BUG]  [BUGGY]  MutableFormats.log(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  ListPopulation(final  List<Chromosome>  chromosomes,  final  int  populationLimit)  {  if  (chromosomes  ==  null)  {  throw  new  NullArgumentException();  }      [BUGGY]  MutableFormats.log(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [BUGGY]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.31622776601683794	68	68	1	replace	MutableFormats.log(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
