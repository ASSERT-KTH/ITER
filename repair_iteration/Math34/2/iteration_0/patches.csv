bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.chromosomes.add(chromosomeColl);  [CE]  no  suitable  method  found  for  add(Collection<Chromosome>)  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]  this.chromosomes.add(chromosomeColl);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.add(chromosomeColl);	this.chromosomes.addAll(chromosomeColl);  	non-compiled	[CE]  no  suitable  method  found  for  add(Collection<Chromosome>)	3	None	replace
2	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size());  [CE]  no  suitable  method  found  for  addAll(int)  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size());  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size());	this.chromosomes.addAll(chromosomeColl);  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	3	None	replace
3	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]));  [CE]  no  suitable  method  found  for  addAll(Chromosome[])  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]));  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]));	this.chromosomes.addAll(chromosomeColl);  	non-compiled	[CE]  no  suitable  method  found  for  addAll(Chromosome[])	3	None	replace
4	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]          AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	  	this.chromosomes.addAll(chromosomeColl);  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	3	2	replace
5	[BUG]  [BUGGY]    [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]          AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	  	this.chromosomes.addAll(chromosomeColl);  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	3	2	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    int  populationLimit  =  chromosomeColl.size();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	    int  populationLimit  =  chromosomeColl.size();		compilable	  [FE]  AssertionError  	4	1	add
7	[BUG]  [BUGGY]    int  populationLimit  =  chromosomeColl.size();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    int  populationLimit  =  chromosomeColl.size();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	    int  populationLimit  =  chromosomeColl.size();		compilable	  [FE]  AssertionError  	4	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    int  populationLimit  =  chromosomes.size();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	    int  populationLimit  =  chromosomes.size();		compilable	  [FE]  AssertionError  	4	1	add
9	[BUG]  [BUGGY]    int  populationLimit  =  chromosomes.size();  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    int  populationLimit  =  chromosomes.size();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	    int  populationLimit  =  chromosomes.size();		compilable	  [FE]  AssertionError  	4	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    chromosomes.clear();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	    chromosomes.clear();		compilable	  [FE]  AssertionError  	4	1	add
11	[BUG]  [BUGGY]    chromosomes.clear();  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    chromosomes.clear();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	    chromosomes.clear();		compilable	  [FE]  AssertionError  	4	1	add
12	[BUG]  [BUGGY]  this.chromosomes.addAll(this.chromosomeColl);  [CE]  cannot  find  symbol  chromosomeColl  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]  this.chromosomes.addAll(this.chromosomeColl);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(this.chromosomeColl);	this.chromosomes.addAll(chromosomeColl);  	non-compiled	[CE]  cannot  find  symbol  chromosomeColl	3	None	replace
13	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false);  [CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean)  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false);	this.chromosomes.addAll(chromosomeColl);  	non-compiled	[CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean)	3	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    chromosomeColl.clear();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	    chromosomeColl.clear();		compilable	  [FE]  AssertionError  	4	1	add
15	[BUG]  [BUGGY]    chromosomeColl.clear();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    chromosomeColl.clear();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	    chromosomeColl.clear();		compilable	  [FE]  AssertionError  	4	1	add
16	[BUG]  [BUGGY]    chromosomeColl.addAll(this);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    chromosomeColl.addAll(this);  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	    chromosomeColl.addAll(this);		non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	4	None	add
17	[BUG]  [BUGGY]  this.chromosomes.addAll(this);  [CE]  no  suitable  method  found  for  addAll(ListPopulation)  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]  this.chromosomes.addAll(this);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(this);	this.chromosomes.addAll(chromosomeColl);  	non-compiled	[CE]  no  suitable  method  found  for  addAll(ListPopulation)	3	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    int  chromosomeLimit  =  chromosomes.size();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	    int  chromosomeLimit  =  chromosomes.size();		compilable	  [FE]  AssertionError  	4	1	add
19	[BUG]  [BUGGY]    int  chromosomeLimit  =  chromosomes.size();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  [BUGGY]    int  chromosomeLimit  =  chromosomes.size();  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	    int  chromosomeLimit  =  chromosomes.size();		compilable	  [FE]  AssertionError  	4	1	add
