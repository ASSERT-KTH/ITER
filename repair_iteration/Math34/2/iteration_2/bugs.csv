bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosomes(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosomes(chromosomeColl);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosomes(chromosomeColl);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosomes(chromosomeColl,  f);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosomes(chromosomeColl,  f);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosomes(chromosomeColl,  f);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosome(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosome(chromosomeColl);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomes.size()  >  populationLimit)  {  for(int  f=0;  f  <  chromosomeColl.size();  f++)  {  addChromosome(chromosomeColl);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  true);  [CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  true);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  true);	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean)	13	None	replace
5	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeColl.size());  [CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean,int)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeColl.size());  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false,  chromosomeColl.size());	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean,int)	13	None	replace
6	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeCount);  [CE]  cannot  find  symbol  chromosomeCount  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeCount);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false,  chromosomeCount);	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  cannot  find  symbol  chromosomeCount	13	None	replace
7	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomes.size());  [CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean,int)  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomes.size());  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false,  chromosomes.size());	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean,int)	13	None	replace
8	[BUG]  [BUGGY]  this.chromosomes.add(chromosomeColl,  populationLimit);  [CE]  no  suitable  method  found  for  add(Collection<Chromosome>,int)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.add(chromosomeColl,  populationLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.add(chromosomeColl,  populationLimit);	  this.chromosomes.add(chromosomeColl);    	non-compiled	[CE]  no  suitable  method  found  for  add(Collection<Chromosome>,int)	1	None	replace
9	[BUG]  [BUGGY]  this.chromosomes.add(chromosomeColl,  false);  [CE]  no  suitable  method  found  for  add(Collection<Chromosome>,boolean)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.add(chromosomeColl,  false);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.add(chromosomeColl,  false);	  this.chromosomes.add(chromosomeColl);    	non-compiled	[CE]  no  suitable  method  found  for  add(Collection<Chromosome>,boolean)	1	None	replace
10	[BUG]  [BUGGY]  this.chromosomes.add(chromosomeColl,  0);  [CE]  no  suitable  method  found  for  add(Collection<Chromosome>,int)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.add(chromosomeColl,  0);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.add(chromosomeColl,  0);	  this.chromosomes.add(chromosomeColl);    	non-compiled	[CE]  no  suitable  method  found  for  add(Collection<Chromosome>,int)	1	None	replace
11	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.addAll(this.chromosomes);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	chromosomeColl.addAll(this.chromosomes);	      chromosomeColl.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	15	2	replace
12	[BUG]  [BUGGY]  chromosomeColl.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.addAll(this.chromosomes);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.addAll(this.chromosomes);	      chromosomeColl.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	15	2	replace
13	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.remove(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	chromosomeColl.remove(chromosomeColl);	      chromosomeColl.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	15	2	replace
14	[BUG]  [BUGGY]  chromosomeColl.remove(chromosomeColl);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.remove(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.remove(chromosomeColl);	      chromosomeColl.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	15	2	replace
15	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  false);  [CE]  no  suitable  method  found  for  addAll(Chromosome[],boolean)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  false);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  false);	  this.chromosomes.addAll(chromosomeColl.toArray(new    Chromosome[chromosomeColl.size()    ]));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Chromosome[],boolean)	3	None	replace
16	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  populationLimit);  [CE]  no  suitable  method  found  for  addAll(Chromosome[],int)  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  populationLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  populationLimit);	  this.chromosomes.addAll(chromosomeColl.toArray(new    Chromosome[chromosomeColl.size()    ]));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Chromosome[],int)	3	None	replace
17	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ],  populationLimit));  [CE]  no  suitable  method  found  for  toArray(Chromosome[],int)  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ],  populationLimit));  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ],  populationLimit));	  this.chromosomes.addAll(chromosomeColl.toArray(new    Chromosome[chromosomeColl.size()    ]));    	non-compiled	[CE]  no  suitable  method  found  for  toArray(Chromosome[],int)	3	None	replace
18	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	this.chromosomes.addAll(chromosomes);	  this.chromosomes.addAll(this.chromosomeColl);    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	12	2	replace
19	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomes);	  this.chromosomes.addAll(this.chromosomeColl);    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	12	2	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomes.clear();    chromosomes.clear();	  	compilable	  [FE]  AssertionError  	10	1	add
21	[BUG]  [BUGGY]      chromosomes.clear();  chromosomes.clear();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    chromosomes.clear();	  	compilable	  [FE]  AssertionError  	10	1	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  AssertionError  	10	1	add
23	[BUG]  [BUGGY]      chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  AssertionError  	10	1	add
24	[BUG]  [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Collections.newHashSet();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Collections.newHashSet();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    Collection  <  Chromosome>  chromosomes  =  Collections.newHashSet();	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Collections.emptyList();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomes.clear();    Collection  <  Chromosome>  chromosomes  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	10	1	add
26	[BUG]  [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Collections.emptyList();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Collections.emptyList();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    Collection  <  Chromosome>  chromosomes  =  Collections.emptyList();	  	compilable	  [FE]  AssertionError  	10	1	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  this.chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomes.clear();    this.chromosomes.clear();	  	compilable	  [FE]  AssertionError  	10	1	add
28	[BUG]  [BUGGY]      chromosomes.clear();  this.chromosomes.clear();  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  this.chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    this.chromosomes.clear();	  	compilable	  [FE]  AssertionError  	10	1	add
29	[BUG]  [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  populationLimit  =  chromosomeColl.size();  [CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  populationLimit  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomeColl.size();    int  populationLimit  =  chromosomeColl.size();	  	non-compiled	[CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	6	None	add
30	[BUG]  [BUGGY]      int  populationLimit  =  chromosomeColl.size();  Integer  populationLimit  =  chromosomeColl.size();  [CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  Integer  populationLimit  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomeColl.size();    Integer  populationLimit  =  chromosomeColl.size();	  	non-compiled	[CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	6	None	add
31	[BUG]  [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  chromosomeColl  =  chromosomeColl.size();  [CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  chromosomeColl  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomeColl.size();    int  chromosomeColl  =  chromosomeColl.size();	  	non-compiled	[CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	6	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  numberLimit  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        int    populationLimit    =    chromosomeColl.size();    int  numberLimit  =  chromosomeColl.size();	  	compilable	  [FE]  AssertionError  	6	1	add
33	[BUG]  [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  numberLimit  =  chromosomeColl.size();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  numberLimit  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomeColl.size();    int  numberLimit  =  chromosomeColl.size();	  	compilable	  [FE]  AssertionError  	6	1	add
34	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size(),  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size(),  populationLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size(),  populationLimit);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	2	None	replace
35	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  populationLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size()  -  populationLimit);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	2	None	replace
36	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  1);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  1);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size()  -  1);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	2	None	replace
37	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  1,  chromosomeColl.size());  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  1,  chromosomeColl.size());  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size()  -  1,  chromosomeColl.size());	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	2	None	replace
38	[BUG]  [BUGGY]  chromosomes.addAll(this);  [CE]  no  suitable  method  found  for  addAll(ListPopulation)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.addAll(this);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomes.addAll(this);	      chromosomes.clear();    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ListPopulation)	11	None	replace
39	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.addAll(this.chromosomes);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	chromosomes.addAll(this.chromosomes);	      chromosomes.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	replace
40	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.addAll(this.chromosomes);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomes.addAll(this.chromosomes);	      chromosomes.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	replace
41	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.remove(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	chromosomes.remove(chromosomeColl);	      chromosomes.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	11	2	replace
42	[BUG]  [BUGGY]  chromosomes.remove(chromosomeColl);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.remove(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomes.remove(chromosomeColl);	      chromosomes.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	11	2	replace
43	[BUG]  [BUGGY]      int  populationLimit  =  chromosomes.size();  int  populationLimit  =  chromosomes.size();  [CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  populationLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomes.size();    int  populationLimit  =  chromosomes.size();	  	non-compiled	[CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	8	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  chromosomesLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        int    populationLimit    =    chromosomes.size();    int  chromosomesLimit  =  chromosomes.size();	  	compilable	  [FE]  AssertionError  	8	1	add
45	[BUG]  [BUGGY]      int  populationLimit  =  chromosomes.size();  int  chromosomesLimit  =  chromosomes.size();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  chromosomesLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomes.size();    int  chromosomesLimit  =  chromosomes.size();	  	compilable	  [FE]  AssertionError  	8	1	add
46	[BUG]  [BUGGY]      int  populationLimit  =  chromosomes.size();  Integer  populationLimit  =  chromosomes.size();  [CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  Integer  populationLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomes.size();    Integer  populationLimit  =  chromosomes.size();	  	non-compiled	[CE]  variable  populationLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	8	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  numberLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        int    populationLimit    =    chromosomes.size();    int  numberLimit  =  chromosomes.size();	  	compilable	  [FE]  AssertionError  	8	1	add
48	[BUG]  [BUGGY]      int  populationLimit  =  chromosomes.size();  int  numberLimit  =  chromosomes.size();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  numberLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomes.size();    int  numberLimit  =  chromosomes.size();	  	compilable	  [FE]  AssertionError  	8	1	add
49	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomes.size()  +  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  populationLimit  =  chromosomes.size()  +  1;	      int    populationLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	9	2	replace
50	[BUG]  [BUGGY]  int  populationLimit  =  chromosomes.size()  +  1;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomes.size()  +  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  populationLimit  =  chromosomes.size()  +  1;	      int    populationLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	9	2	replace
51	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  this.chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  populationLimit  =  this.chromosomes.size();	      int    populationLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	replace
52	[BUG]  [BUGGY]  int  populationLimit  =  this.chromosomes.size();  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  this.chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  populationLimit  =  this.chromosomes.size();	      int    populationLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	replace
53	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  populationLimit  =  chromosomes.size()  -  1;	      int    populationLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	replace
54	[BUG]  [BUGGY]  int  populationLimit  =  chromosomes.size()  -  1;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  populationLimit  =  chromosomes.size()  -  1;	      int    populationLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	replace
55	[BUG]  [BUGGY]  this.chromosomes.addAll(this,  chromosomeColl);  [CE]  no  suitable  method  found  for  addAll(ListPopulation,Collection<Chromosome>)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(this,  chromosomeColl);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(this,  chromosomeColl);	  this.chromosomes.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ListPopulation,Collection<Chromosome>)	17	None	replace
56	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  this);  [CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,ListPopulation)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  this);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  this);	  this.chromosomes.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,ListPopulation)	17	None	replace
57	[BUG]  [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  int  chromosomeLimit  =  chromosomes.size();  [CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  int  chromosomeLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    chromosomeLimit    =    chromosomes.size();    int  chromosomeLimit  =  chromosomes.size();	  	non-compiled	[CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	18	None	add
58	[BUG]  [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  Integer  chromosomeLimit  =  chromosomes.size();  [CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  Integer  chromosomeLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    chromosomeLimit    =    chromosomes.size();    Integer  chromosomeLimit  =  chromosomes.size();	  	non-compiled	[CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	18	None	add
59	[BUG]  [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  int  chromosomeLimit  =  this.chromosomes.size();  [CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  int  chromosomeLimit  =  this.chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    chromosomeLimit    =    chromosomes.size();    int  chromosomeLimit  =  this.chromosomes.size();	  	non-compiled	[CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	18	None	add
60	[BUG]  [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  Integer  chromosomeColl  =  chromosomes.size();  [CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  Integer  chromosomeColl  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    chromosomeLimit    =    chromosomes.size();    Integer  chromosomeColl  =  chromosomes.size();	  	non-compiled	[CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	18	None	add
61	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  this.chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  chromosomeLimit  =  this.chromosomes.size();	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
62	[BUG]  [BUGGY]  int  chromosomeLimit  =  this.chromosomes.size();  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  this.chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  chromosomeLimit  =  this.chromosomes.size();	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
63	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  +  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  chromosomeLimit  =  chromosomes.size()  +  1;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	19	2	replace
64	[BUG]  [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  +  1;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  +  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  chromosomeLimit  =  chromosomes.size()  +  1;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	19	2	replace
65	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  +  populationLimit;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  chromosomeLimit  =  chromosomes.size()  +  populationLimit;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
66	[BUG]  [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  +  populationLimit;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  +  populationLimit;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  chromosomeLimit  =  chromosomes.size()  +  populationLimit;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
67	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  -  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  chromosomeLimit  =  chromosomes.size()  -  1;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
68	[BUG]  [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  -  1;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  -  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  chromosomeLimit  =  chromosomes.size()  -  1;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
69	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomeColl.size()  +  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  populationLimit  =  chromosomeColl.size()  +  1;	      int    populationLimit    =    chromosomeColl.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	7	2	replace
70	[BUG]  [BUGGY]  int  populationLimit  =  chromosomeColl.size()  +  1;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomeColl.size()  +  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  populationLimit  =  chromosomeColl.size()  +  1;	      int    populationLimit    =    chromosomeColl.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	7	2	replace
71	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomeColl.size()  -  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  populationLimit  =  chromosomeColl.size()  -  1;	      int    populationLimit    =    chromosomeColl.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	7	2	replace
72	[BUG]  [BUGGY]  int  populationLimit  =  chromosomeColl.size()  -  1;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  chromosomeColl.size()  -  1;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  populationLimit  =  chromosomeColl.size()  -  1;	      int    populationLimit    =    chromosomeColl.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	7	2	replace
73	[BUG]  [BUGGY]  int  populationLimit  =  this.chromosomeColl.size();  [CE]  cannot  find  symbol  chromosomeColl  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  populationLimit  =  this.chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  populationLimit  =  this.chromosomeColl.size();	      int    populationLimit    =    chromosomeColl.size();    	non-compiled	[CE]  cannot  find  symbol  chromosomeColl	7	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomeColl.clear();    chromosomeColl.clear();	  	compilable	  [FE]  AssertionError  	14	1	add
75	[BUG]  [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    chromosomeColl.clear();	  	compilable	  [FE]  AssertionError  	14	1	add
76	[BUG]  [BUGGY]      chromosomeColl.clear();  this.chromosomeColl.clear();  [CE]  cannot  find  symbol  chromosomeColl  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  this.chromosomeColl.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    this.chromosomeColl.clear();	  	non-compiled	[CE]  cannot  find  symbol  chromosomeColl	14	None	add
77	[BUG]  [BUGGY]      chromosomeColl.clear();  Collection  <  Chromosome>  chromosomeColl  =  Collections.emptyList();  [CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  Collection  <  Chromosome>  chromosomeColl  =  Collections.emptyList();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    Collection  <  Chromosome>  chromosomeColl  =  Collections.emptyList();	  	non-compiled	[CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	14	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomeColl.clear();    chromosomeColl.clear();  this.chromosomes.clear();	  	compilable	  [FE]  AssertionError  	14	1	add
79	[BUG]  [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomes.clear();  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomes.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    chromosomeColl.clear();  this.chromosomes.clear();	  	compilable	  [FE]  AssertionError  	14	1	add
80	[BUG]  [BUGGY]      chromosomeColl.clear();  Collection  <  Chromosome>  chromosomeColl  =  Collections.newHashSet();  [CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  Collection  <  Chromosome>  chromosomeColl  =  Collections.newHashSet();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    Collection  <  Chromosome>  chromosomeColl  =  Collections.newHashSet();	  	non-compiled	[CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	14	None	add
81	[BUG]  [BUGGY]  chromosomeColl.addAll(this,  this);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.addAll(this,  this);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.addAll(this,  this);	      chromosomeColl.addAll(this);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	16	None	replace
82	[BUG]  [BUGGY]  chromosomeColl.addAll(this,  false);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.addAll(this,  false);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.addAll(this,  false);	      chromosomeColl.addAll(this);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	16	None	replace
83	[BUG]  [BUGGY]  chromosomeColl.addAll(this,  chromosomes);  [CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.addAll(this,  chromosomes);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.addAll(this,  chromosomes);	      chromosomeColl.addAll(this);    	non-compiled	[CE]  method  addAll  in  interface  Collection<E>  cannot  be  applied  to  given  types;	16	None	replace
84	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(chromosomeColl));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(chromosomeColl));  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(chromosomeColl));	  this.chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
85	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>());  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>());  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>());	  this.chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
86	[BUG]  [BUGGY]      int  populationLimit  =  chromosomes.size();  int  chromosomeColl  =  chromosomes.size();  [CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  chromosomeColl  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomes.size();    int  chromosomeColl  =  chromosomes.size();	  	non-compiled	[CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	8	None	add
87	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  +  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  +  populationLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size()  +  populationLimit);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	2	None	replace
88	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.removeAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	chromosomes.removeAll(chromosomeColl);	      chromosomes.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	replace
89	[BUG]  [BUGGY]  chromosomes.removeAll(chromosomeColl);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.removeAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomes.removeAll(chromosomeColl);	      chromosomes.clear();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	replace
90	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeLimit);  [CE]  cannot  find  symbol  chromosomeLimit  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false,  chromosomeLimit);	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  cannot  find  symbol  chromosomeLimit	13	None	replace
91	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeSize);  [CE]  cannot  find  symbol  chromosomeSize  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomeSize);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false,  chromosomeSize);	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  cannot  find  symbol  chromosomeSize	13	None	replace
92	[BUG]  [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats)  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats)	5	None	replace
93	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats)  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats)	5	None	replace
94	[BUG]  [BUGGY]  if(chromosomeColl.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats)  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomeColl.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomeColl.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats)	5	None	replace
95	[BUG]  [BUGGY]  if(chromosomeColl.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,boolean)  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  if(chromosomeColl.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	if(chromosomeColl.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }	      	non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,boolean)	5	None	replace
96	[BUG]  [BUGGY]      chromosomeColl.clear();  Collection  <  Chromosome>  chromosomeColl  =  new  ArrayList  <  Chromosome>();  [CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  Collection  <  Chromosome>  chromosomeColl  =  new  ArrayList  <  Chromosome>();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    Collection  <  Chromosome>  chromosomeColl  =  new  ArrayList  <  Chromosome>();	  	non-compiled	[CE]  variable  chromosomeColl  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	14	None	add
97	[BUG]  [BUGGY]      chromosomeColl.clear();  int  chromosomeCollLimit  =  Collections.emptyList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  int  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  int  chromosomeCollLimit  =  Collections.emptyList();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    int  chromosomeCollLimit  =  Collections.emptyList();	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  int	14	None	add
98	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  true);  [CE]  no  suitable  method  found  for  addAll(Chromosome[],boolean)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  true);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  true);	  this.chromosomes.addAll(chromosomeColl.toArray(new    Chromosome[chromosomeColl.size()    ]));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Chromosome[],boolean)	3	None	replace
99	[BUG]  [BUGGY]      if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,int)  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,int)	4	None	add
100	[BUG]  [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  Lists.newArrayList();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    Collection  <  Chromosome>  chromosomes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	10	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomes.clear();    Collection  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	10	1	add
102	[BUG]  [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomes.clear();  Collection  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomes.clear();    Collection  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	10	1	add
103	[BUG]  [BUGGY]  chromosomeColl.addAll(this,  new  LinkedList  <  Chromosome>());  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.addAll(this,  new  LinkedList  <  Chromosome>());  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.addAll(this,  new  LinkedList  <  Chromosome>());	      chromosomeColl.addAll(this);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
104	[BUG]  [BUGGY]      if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,int)  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,int)	4	None	add
105	[BUG]  [BUGGY]      if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  ')'  expected  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  	non-compiled	[CE]  ')'  expected	4	None	add
106	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  -  populationLimit;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	int  chromosomeLimit  =  chromosomes.size()  -  populationLimit;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
107	[BUG]  [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  -  populationLimit;  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  int  chromosomeLimit  =  chromosomes.size()  -  populationLimit;  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	int  chromosomeLimit  =  chromosomes.size()  -  populationLimit;	      int    chromosomeLimit    =    chromosomes.size();    	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	19	2	replace
108	[BUG]  [BUGGY]  chromosomeColl.add(this);  [CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomeColl.add(this);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomeColl.add(this);	      chromosomeColl.clear();    	non-compiled	[CE]  method  add  in  interface  Collection<E>  cannot  be  applied  to  given  types;	15	None	replace
109	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomes);  [CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean,List<Chromosome>)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl,  false,  chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl,  false,  chromosomes);	  this.chromosomes.addAll(chromosomeColl,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Collection<Chromosome>,boolean,List<Chromosome>)	13	None	replace
110	[BUG]  [BUGGY]  chromosomes.addAll(new  LinkedList  <  Chromosome>());  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  chromosomes.addAll(new  LinkedList  <  Chromosome>());  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	chromosomes.addAll(new  LinkedList  <  Chromosome>());	      chromosomes.clear();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        chromosomeColl.clear();    chromosomeColl.clear();  this.chromosomes.addAll(chromosomeColl);	  	compilable	  [FE]  AssertionError  	14	1	add
112	[BUG]  [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomes.addAll(chromosomeColl);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    chromosomeColl.clear();  this.chromosomes.addAll(chromosomeColl);	  	compilable	  [FE]  AssertionError  	14	1	add
113	[BUG]  [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomeColl.clear();  [CE]  cannot  find  symbol  chromosomeColl  [FE]      AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      chromosomeColl.clear();  chromosomeColl.clear();  this.chromosomeColl.clear();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        chromosomeColl.clear();    chromosomeColl.clear();  this.chromosomeColl.clear();	  	non-compiled	[CE]  cannot  find  symbol  chromosomeColl	14	None	add
114	[BUG]  [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  boolean  chromosomeLimit  =  chromosomes.size();  [CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  chromosomeLimit  =  chromosomes.size();  boolean  chromosomeLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    chromosomeLimit    =    chromosomes.size();    boolean  chromosomeLimit  =  chromosomes.size();	  	non-compiled	[CE]  variable  chromosomeLimit  is  already  defined  in  method  addChromosomes(Collection<Chromosome>)	18	None	add
115	[BUG]  [BUGGY]  this.chromosomes.addAll(Chromosome.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(Chromosome.EMPTY);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(Chromosome.EMPTY);	  this.chromosomes.addAll(this);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	17	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  populimit  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        int    populationLimit    =    chromosomeColl.size();    int  populimit  =  chromosomeColl.size();	  	compilable	  [FE]  AssertionError  	6	1	add
117	[BUG]  [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  populimit  =  chromosomeColl.size();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomeColl.size();  int  populimit  =  chromosomeColl.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomeColl.size();    int  populimit  =  chromosomeColl.size();	  	compilable	  [FE]  AssertionError  	6	1	add
118	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(chromosomeColl.size()));  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(chromosomeColl.size()));  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(chromosomeColl.size()));	  this.chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
119	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  chromosomes);  [CE]  no  suitable  method  found  for  addAll(Chromosome[],List<Chromosome>)  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  ]),  chromosomes);	  this.chromosomes.addAll(chromosomeColl.toArray(new    Chromosome[chromosomeColl.size()    ]));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Chromosome[],List<Chromosome>)	3	None	replace
120	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  -  1]));  [CE]  no  suitable  method  found  for  addAll(Chromosome[])  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  -  1]));  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.toArray(new  Chromosome[chromosomeColl.size()  -  1]));	  this.chromosomes.addAll(chromosomeColl.toArray(new    Chromosome[chromosomeColl.size()    ]));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Chromosome[])	3	None	replace
121	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,boolean)  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  populationLimit,  false);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.addAll(chromosomeColl.size()  -  populationLimit,  false);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean)	2	None	replace
122	[BUG]  [BUGGY]  this.chromosomes.add(chromosomeColl,  null);  [CE]  no  suitable  method  found  for  add(Collection<Chromosome>,<null>)  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]  this.chromosomes.add(chromosomeColl,  null);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	this.chromosomes.add(chromosomeColl,  null);	  this.chromosomes.add(chromosomeColl);    	non-compiled	[CE]  no  suitable  method  found  for  add(Collection<Chromosome>,<null>)	1	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  populateLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	        int    populationLimit    =    chromosomes.size();    int  populateLimit  =  chromosomes.size();	  	compilable	  [FE]  AssertionError  	8	1	add
124	[BUG]  [BUGGY]      int  populationLimit  =  chromosomes.size();  int  populateLimit  =  chromosomes.size();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }    [BUGGY]      int  populationLimit  =  chromosomes.size();  int  populateLimit  =  chromosomes.size();  [BUGGY]    this.chromosomes.addAll(chromosomeColl);  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	        int    populationLimit    =    chromosomes.size();    int  populateLimit  =  chromosomes.size();	  	compilable	  [FE]  AssertionError  	8	1	add
