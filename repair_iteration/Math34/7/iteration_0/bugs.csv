bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
13	[BUG] [BUGGY] this.populationLimit = populationLimit; [FE] AssertionError [CONTEXT] if (chromosomes == null) { throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } [BUGGY] this.populationLimit = populationLimit; [BUGGY] this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	75	75	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (chromosomes == null) { throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } [BUGGY] [BUGGY] this.populationLimit = populationLimit; this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	75	75	1	add	
