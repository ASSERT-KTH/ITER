projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71if(chromosomes.size()>populationLimit){
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71if(chromosomes.size()<populationLimit){
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Lists.newArrayList();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>(populationLimit);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71finalintpopulationLimit=chromosomes.size();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intpopulationLimit=chromosomes.size();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Collections.emptyList();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes.clear();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>(chromosomes.size());
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>(chromosomes);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newLinkedList<Chromosome>(populationLimit);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>(chromosomes.size());
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71finalintpopulationLimit=chromosomes.size()-1;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71finalintpopulationLimit=chromosomes.size()+1;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71if(chromosomes.size()<=populationLimit){
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Collections.EMPTY_LIST;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71if(chromosomes.size()<populationLimit){if(chromosomes.size()<populationLimit){
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71if(chromosomes.size()<populationLimit){If(chromosomes.size()<populationLimit){
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71if(chromosomes.size()<populationLimit){if(chromosomes.size()<PopulationLimit){
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>(chromosomes);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newLinkedList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Collections.newArrayList();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intpopulationLimit=chromosomes.size()-1;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intpopulationLimit=chromosomes.size()+1;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newLinkedList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>();this.chromosomes=newArrayList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>();chromosomes=newArrayList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>();This.chromosomes=newArrayList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>();newArrayList<Chromosome>();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>();Iterator<Chromosome>it=chromosomes.iterator();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intnumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,chromosomes.size(),populationLimit,false);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intnumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intnumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,populationLimit,false);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intnumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,chromosomes.size());
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>(this.populationLimit);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>(1);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Lists.newArrayList(populationLimit);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Lists.newLinkedList();
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Lists.newArrayListWithCapacity(populationLimit);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>(populationLimit,populationLimit);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=newArrayList<Chromosome>(populationLimit+1);
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71chromosomes=Collections.synchronizedList(newArrayList<Chromosome>());
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71intpopulationLimit=chromosomes.size()-2;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71finalintpopulationLimit=chromosomes.size()-2;
projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java71this.chromosomes=newArrayList<Chromosome>(0);
