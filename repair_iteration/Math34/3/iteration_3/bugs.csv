bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	java.lang.AssertionError:  expected	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  not  a  statement	75	None	replace
2	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	75	None	replace
3	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSO  [CE]  ')'  expected  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSO  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSO	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	75	None	replace
4	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [CE]  ')'  expected  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	75	None	replace
5	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER    	non-compiled	[CE]  ')'  expected	63	None	replace
6	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomes);	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
7	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	68	None	replace
8	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	68	None	replace
9	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(populationLimit,  false);	  chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
10	[BUG]  [BUGGY]  chromosomes.addAll(this.populationSize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.populationSize);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.populationSize);	  chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
11	[BUG]  [BUGGY]  chromosomes.addAll(this.populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.populationLimit);	  chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
12	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
13	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	13	2	add
14	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	13	2	add
15	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    java.lang.AssertionError:  expected	  	non-compiled	[CE]  not  a  statement	13	None	add
16	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  final  java.lang.AssertionError:  expected  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  final  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    final  java.lang.AssertionError:  expected	  	non-compiled	[CE]  <identifier>  expected	13	None	add
17	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    java.lang.AssertionError:  expected;	  	non-compiled	[CE]  not  a  statement	13	None	add
18	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	13	2	add
19	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	13	2	add
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  java.lang.AssertionError:  false;  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  java.lang.AssertionError:  false;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	java.lang.AssertionError:  false;	          this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:    false;    	non-compiled	[CE]  not  a  statement	15	None	replace
23	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AssertionError:  false;  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AssertionError:  false;  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AssertionError:  false;  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:    false;    	non-compiled	[CE]  not  a  statement	15	None	replace
24	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AssertionError:  false;  }  [CE]  not  a  statement  [FE]                  java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AssertionError:  false;  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AssertionError:  false;  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:    false;    	non-compiled	[CE]  not  a  statement	15	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    i++)    {    chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
27	[BUG]  [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  not  a  statement	24	None	replace
28	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  ')'  expected	35	None	replace
29	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  -  1);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl.size()  -  1);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
30	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  +  1);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl.size()  +  1);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
31	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  +  populationLimit);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(chromosomeColl.size()  +  populationLimit);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl.size()  +  populationLimit);	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
32	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    this.chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
33	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
35	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit,  false)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  >  populationLimit,  false)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit,  false)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
36	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.add(i);  }	  if(chromosomeColl!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
38	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [CE]  ')'  expected  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    	non-compiled	[CE]  ')'  expected	76	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  this.chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  this.chromosomes.addAll(chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  this.chromosomes.addAll(chromosomeColl);  }	  for(int    i    =    0;    i    <    chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  for(int    i    =    0;    i    <    chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
41	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomeSize,  this.chromosomeColl);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomeSize,  this.chromosomeColl);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomeSize,  this.chromosomeColl);	  chromosomes.addAll(this.chromosomeSize);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
42	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomeSize,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomeSize,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomeSize,  populationLimit);	  chromosomes.addAll(this.chromosomeSize);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }	  if(chromosomeColl!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(chromosomeColl);  }	  if(chromosomeColl!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
45	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(chromosomeColl!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
46	[BUG]  [BUGGY]  chromosomes.remove(this.chromosomeColl);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.remove(this.chromosomeColl);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.remove(this.chromosomeColl);	  chromosomes.add(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
47	[BUG]  [BUGGY]  chromosomes.add(this.chromosomeColl,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.add(this.chromosomeColl,  false);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.add(this.chromosomeColl,  false);	  chromosomes.add(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
48	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  expected	  	non-compiled	[CE]  not  a  statement	11	None	add
49	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  expected;	  	non-compiled	[CE]  not  a  statement	11	None	add
50	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  final  java.lang.AssertionError:  expected  [CE]  <identifier>  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  final  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    final  java.lang.AssertionError:  expected	  	non-compiled	[CE]  <identifier>  expected	11	None	add
51	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
52	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
53	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  false;  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  false;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  false;	  	non-compiled	[CE]  not  a  statement	11	None	add
54	[BUG]  [BUGGY]  addChromosome(this.chromosomes);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  addChromosome(this.chromosomes);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	addChromosome(this.chromosomes);	  addChromosome(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
55	[BUG]  [BUGGY]  chromosomeColl.addAll(this.chromosomes);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomeColl.addAll(this.chromosomes);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomeColl.addAll(this.chromosomes);	  addChromosome(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
56	[BUG]  [BUGGY]  addChromosome(this.chromosomeColl);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  addChromosome(this.chromosomeColl);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	addChromosome(this.chromosomeColl);	  addChromosome(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
57	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  not  a  statement	6	None	replace
58	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  not  a  statement	6	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
60	[BUG]  [BUGGY]  chromosomes.add(this.chromososomeColl);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.add(this.chromososomeColl);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.add(this.chromososomeColl);	  chromosomes.addAll(this.chromososomeColl);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i  +  1);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i,  populationLimit);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  this.chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  this.chromosomes.add(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  this.chromosomes.add(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  int  populationLimit  =  chromosomeColl.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit  =  chromosomeColl.size()  -  1;  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  chromosomeColl.size()  -  1;	  int    populationLimit    =    chromosomeColl.size();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
67	[BUG]  [BUGGY]  int  populationLimit  =  chromosomeColl.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit  =  chromosomeColl.size()  +  1;  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  chromosomeColl.size()  +  1;	  int    populationLimit    =    chromosomeColl.size();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
68	[BUG]  [BUGGY]  int  populationLimit  =  this.chromosomeColl.size();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit  =  this.chromosomeColl.size();  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  this.chromosomeColl.size();	  int    populationLimit    =    chromosomeColl.size();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
69	[BUG]  [BUGGY]  int  populationLimit  =  this.chromosomes.size();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit  =  this.chromosomes.size();  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  this.chromosomes.size();	  int    populationLimit    =    chromosomeColl.size();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
70	[BUG]  [BUGGY]  this.chromosomes  =  Lists.newArrayList();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes  =  Lists.newArrayList();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes  =  Lists.newArrayList();	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    Lists.newArrayList();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
71	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    Lists.newArrayList();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  this.chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  this.chromosomes.addAll(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  this.chromosomes.addAll(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
74	[BUG]  [BUGGY]  int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }  [CE]  >  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.addAll(i);    }    	non-compiled	[CE]  >  expected	39	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
77	[BUG]  [BUGGY]  chromosomes.addAll(this.cloneChromosomes,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.cloneChromosomes,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.cloneChromosomes,  false);	  chromosomes.addAll(this.cloneChromosomes);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  chromosomes.addAll(this.cloneChromosomes,  true);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.cloneChromosomes,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.cloneChromosomes,  true);	  chromosomes.addAll(this.cloneChromosomes);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
79	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(chromosomeColl).clone());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomes.get(chromosomeColl).clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(chromosomeColl).clone());	  chromosomes.addAll(this.chromosomes.get(i).clone());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
80	[BUG]  [BUGGY]  chromosomes.addAll(chromosomes.get(0).clone());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(chromosomes.get(0).clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(chromosomes.get(0).clone());	  chromosomes.addAll(this.chromosomes.get(i).clone());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
81	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	64	None	replace
82	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	64	None	replace
83	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_P  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_P  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_P	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	64	None	replace
84	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	64	None	replace
85	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  not  a  statement	7	None	replace
86	[BUG]  [BUGGY]  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    new    java.lang.ArrayList    <    AssertionError>();    	non-compiled	[CE]  not  a  statement	54	None	replace
87	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    new    java.lang.ArrayList    <    AssertionError>();    	non-compiled	[CE]  not  a  statement	54	None	replace
88	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    new    java.lang.ArrayList    <    AssertionError>();    	non-compiled	[CE]  not  a  statement	54	None	replace
89	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    new    java.lang.ArrayList    <    AssertionError>();    	non-compiled	[CE]  not  a  statement	54	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  this.chromosomes.addAll(this.chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
91	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
92	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
93	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
94	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
95	[BUG]  [BUGGY]  this.chromosomes.removeAll(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.removeAll(chromosomeColl);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.removeAll(chromosomeColl);	  this.chromosomes.clear();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
97	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	62	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
100	[BUG]  [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  not  a  statement	52	None	replace
101	[BUG]  [BUGGY]  int  populationLimit  =  chromosomes.size()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit  =  chromosomes.size()  +  1;  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  chromosomes.size()  +  1;	  int    populationLimit    =    chromosomes.size();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
102	[BUG]  [BUGGY]  int  populationLimit  =  chromosomes.size()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit  =  chromosomes.size()  -  1;  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  chromosomes.size()  -  1;	  int    populationLimit    =    chromosomes.size();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
103	[BUG]  [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  chromosomes.size()  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  not  a  statement	28	None	replace
104	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
107	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
108	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(new    LinkedList    <    Chromosome>());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
109	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(1));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(1));	  this.chromosomes.addAll(new    LinkedList    <    Chromosome>());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
110	[BUG]  [BUGGY]  this.chromosomes.addAll(new  TreeSet  <  Chromosome>());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(new  TreeSet  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(new  TreeSet  <  Chromosome>());	  this.chromosomes.addAll(new    LinkedList    <    Chromosome>());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
111	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	69	None	replace
112	[BUG]  [BUGGY]  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  not  a  statement	55	None	replace
113	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  not  a  statement	55	None	replace
114	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  not  a  statement	55	None	replace
115	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  not  a  statement	55	None	replace
116	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
117	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    java.lang.AssertionError:  expected	  	non-compiled	[CE]  not  a  statement	56	None	add
118	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  final  java.lang.AssertionError:  expected  [CE]  <identifier>  expected  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  final  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    final  java.lang.AssertionError:  expected	  	non-compiled	[CE]  <identifier>  expected	56	None	add
119	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  expected;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    java.lang.AssertionError:  expected;	  	non-compiled	[CE]  not  a  statement	56	None	add
120	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  false;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  false;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    java.lang.AssertionError:  false;	  	non-compiled	[CE]  not  a  statement	56	None	add
121	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    java.lang.AssertionError:	  	non-compiled	[CE]  not  a  statement	56	None	add
122	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
123	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
124	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
125	[BUG]  [BUGGY]  chromosomes.addAll(chromosomeColl.get(0).clone());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(chromosomeColl.get(0).clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(chromosomeColl.get(0).clone());	  chromosomes.addAll(this.chromosomes.get(0).clone());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(0),  this.chromosomeColl.clone());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomes.get(0),  this.chromosomeColl.clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(0),  this.chromosomeColl.clone());	  chromosomes.addAll(this.chromosomes.get(0).clone());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	9	2	add
128	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	9	2	add
129	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  expected	  	non-compiled	[CE]  not  a  statement	9	None	add
130	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	add
131	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	add
132	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  expected;	  	non-compiled	[CE]  not  a  statement	9	None	add
133	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  final  java.lang.AssertionError:  expected  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  final  java.lang.AssertionError:  expected  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    final  java.lang.AssertionError:  expected	  	non-compiled	[CE]  <identifier>  expected	9	None	add
134	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
135	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
137	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
138	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	65	None	replace
139	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(1).clone());  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
140	[BUG]  [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(0).clone());    }    	non-compiled	[CE]  not  a  statement	50	None	replace
141	[BUG]  [BUGGY]  chromosomes.add(this.cloneChromosomes);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.add(this.cloneChromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.add(this.cloneChromosomes);	  chromosomes.addAll(this.cloneChromosomes);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
142	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.add(new  LinkedList  <  Chromosome>());	  this.chromosomes.addAll(new    LinkedList    <    Chromosome>());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
143	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(series).clone());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomes.get(series).clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(series).clone());	  chromosomes.addAll(this.chromosomes.get(i).clone());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
144	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  false;  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  false;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  false;	  	non-compiled	[CE]  not  a  statement	9	None	add
145	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected,  false);  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  expected,  false);	  	non-compiled	[CE]  not  a  statement	9	None	add
146	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  false;  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  false;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    java.lang.AssertionError:  false;	  	non-compiled	[CE]  not  a  statement	13	None	add
147	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected,  false);  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    java.lang.AssertionError:  expected,  false);	  	non-compiled	[CE]  not  a  statement	13	None	add
148	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected,  null);  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  java.lang.AssertionError:  expected,  null);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    java.lang.AssertionError:  expected,  null);	  	non-compiled	[CE]  not  a  statement	13	None	add
149	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomeColl);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.removeAll(this.chromosomeColl);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.removeAll(this.chromosomeColl);	  chromosomes.addAll(this.chromososomeColl);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
150	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.removeAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.removeAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.removeAll(this.chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
151	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
153	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    Lists.newArrayList();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
154	[BUG]  [BUGGY]  if(chromosomeColl!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    Lists.newArrayList();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
155	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	33	None	replace
156	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIG  [CE]  ')'  expected  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIG  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIG	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	33	None	replace
157	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
158	[BUG]  [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
159	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	17	None	replace
160	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	17	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
162	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected,  false);  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  expected,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  expected,  false);	  	non-compiled	[CE]  not  a  statement	11	None	add
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(this.chromosomeColl);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
164	[BUG]  [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  chromosomes.size()  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  not  a  statement	31	None	replace
165	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
166	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
167	[BUG]  [BUGGY]  if(chromosomeColl.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  ==  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
168	[BUG]  [BUGGY]  if(chromosomeColl!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
169	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
170	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomeSize  +  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomeSize  +  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomeSize  +  populationLimit);	  chromosomes.addAll(this.chromosomeSize);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomeColl);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
172	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	62	None	replace
173	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    new    java.lang.ArrayList    <    AssertionError>();    	non-compiled	[CE]  not  a  statement	54	None	replace
174	[BUG]  [BUGGY]  this.chromosomes.add(this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.add(this);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.add(this);	  this.chromosomes.addAll(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
175	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomeColl.get(0).clone());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomeColl.get(0).clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomeColl.get(0).clone());	  chromosomes.addAll(this.chromosomes.get(0).clone());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
176	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(0),  this.populationSize.clone());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomes.get(0),  this.populationSize.clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(0),  this.populationSize.clone());	  chromosomes.addAll(this.chromosomes.get(0).clone());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
177	[BUG]  [BUGGY]  chromosomes.add(this.chromosomeColl,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.add(this.chromosomeColl,  populationLimit);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.add(this.chromosomeColl,  populationLimit);	  chromosomes.add(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
178	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER,	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
179	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  expected,  false);  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  java.lang.AssertionError:  expected,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    java.lang.AssertionError:  expected,  false);	  	non-compiled	[CE]  not  a  statement	56	None	add
180	[BUG]  [BUGGY]  chromosomes.addAll(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(chromosomeColl);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(chromosomeColl);	  chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
181	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
182	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
183	[BUG]  [BUGGY]  addChromosomes(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  addChromosomes(chromosomeColl);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	addChromosomes(chromosomeColl);	  addChromosome(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
184	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  not  a  statement	6	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
186	[BUG]  [BUGGY]  this.chromosomes.remove(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.remove(chromosomeColl);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.remove(chromosomeColl);	  this.chromosomes.add(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
187	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	68	None	replace
188	[BUG]  [BUGGY]  this.chromosomes.add(populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.add(populationLimit);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.add(populationLimit);	  this.chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
189	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  not  a  statement	55	None	replace
190	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  not  a  statement	55	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(chromosomeColl!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }	  if(chromosomeColl!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
193	[BUG]  [BUGGY]  &&  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  &&  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	&&  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
194	[BUG]  [BUGGY]  if(chromosomeColl!=  null)  {  chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl!=  null)  {  chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl!=  null)  {  chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	65	None	replace
195	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	65	None	replace
196	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
197	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
198	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes	  if(chromosomes.size()    >=    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    this.chromosomes.    	non-compiled	[CE]  ')'  expected	45	None	replace
199	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AnsertionError:  false;  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AnsertionError:  false;  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AnsertionError:  false;  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:    false;    	non-compiled	[CE]  not  a  statement	15	None	replace
200	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AnsertionError:  false;  }  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AnsertionError:  false;  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  AnsertionError:  false;  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:    false;    	non-compiled	[CE]  not  a  statement	15	None	replace
201	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	62	None	replace
202	[BUG]  [BUGGY]  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  java.lang.AssertionError:  expected;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	java.lang.AssertionError:  expected;	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  not  a  statement	35	None	replace
203	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
204	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  ArrayList  <  AssertionError>  this.chromosomes  =  new  ArrayList  <  AssertionError>();  }	          this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList    <    AssertionError>    this.chromosomes    =    new    java.lang.ArrayList    <    AssertionError>();    	non-compiled	[CE]  not  a  statement	54	None	replace
205	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit,  false)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  >  populationLimit,  false)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit,  false)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  not  a  statement	6	None	replace
206	[BUG]  [BUGGY]  chromosomes.size()  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.size()  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ';'  expected	6	None	replace
207	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit,  true);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(populationLimit,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(populationLimit,  true);	  chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
208	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(this);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
209	[BUG]  [BUGGY]  chromosomes.addAll(this.cloneOtherChromosomes);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.cloneOtherChromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.cloneOtherChromosomes);	  chromosomes.addAll(this.cloneChromosomes);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
210	[BUG]  [BUGGY]  chromosomes.addAll(this.clonesomes);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.clonesomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.clonesomes);	  chromosomes.addAll(this.cloneChromosomes);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
211	[BUG]  [BUGGY]  chromosomes.addAll(this.cloneMembers);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.cloneMembers);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.cloneMembers);	  chromosomes.addAll(this.cloneChromosomes);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
212	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
213	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	add
214	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	9	2	add
215	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	9	2	add
216	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	9	2	add
217	[BUG]  [BUGGY]  this.chromosomes.addAll(Chromosome.EMPTY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(Chromosome.EMPTY);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(Chromosome.EMPTY);	  this.chromosomes.addAll(this);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
218	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	75	None	replace
219	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]            java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	75	None	replace
220	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	75	None	replace
221	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomeColl.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  ')'  expected	47	None	replace
222	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
223	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
224	[BUG]  [BUGGY]  int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }	  for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    this.chromosomes.add(i);    }    	non-compiled	[CE]  >  expected	2	None	replace
225	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	65	None	replace
226	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	18	None	replace
227	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
228	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	77	None	replace
229	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomeSize,  this.populationSize);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomeSize,  this.populationSize);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomeSize,  this.populationSize);	  chromosomes.addAll(this.chromosomeSize);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
230	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(populationLimit,  false);  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(populationLimit,  false);	  this.chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
231	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(populationLimit).clone());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomes.get(populationLimit).clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(populationLimit).clone());	  chromosomes.addAll(this.chromosomes.get(i).clone());    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
232	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  IllegalArgumentException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  IllegalArgumentException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  IllegalArgumentException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	10	None	replace
233	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
234	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	13	2	add
235	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	13	2	add
236	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	13	2	add
237	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	13	2	add
238	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	13	2	add
239	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	13	2	add
240	[BUG]  [BUGGY]  if(this.chromosomeColl!=  null)  {  chromosomes.addAll(this.chromososomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomeColl!=  null)  {  chromosomes.addAll(this.chromososomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomeColl!=  null)  {  chromosomes.addAll(this.chromososomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  chromosomes.addAll(this.chromososomeColl);    	non-compiled	[CE]  ')'  expected	20	None	replace
241	[BUG]  [BUGGY]  if(this.chromosomeColl!=  null)  {  chromosomes.addAll(this.chromososomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(this.chromosomeColl!=  null)  {  chromosomes.addAll(this.chromososomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomeColl!=  null)  {  chromosomes.addAll(this.chromososomeColl);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  chromosomes.addAll(this.chromososomeColl);    	non-compiled	[CE]  ')'  expected	20	None	replace
242	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
243	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [1    [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	                this.chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
244	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(0).toArray());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  chromosomes.addAll(this.chromosomes.get(0).toArray());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(0).toArray());	  chromosomes.addAll(this.chromosomes.get(0).clone());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
245	[BUG]  [BUGGY]  int  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  int  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }	  chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    }    	non-compiled	[CE]  ';'  expected	51	None	replace
246	[BUG]  [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomeColl);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    Lists.newArrayList();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
247	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected:<[(f=0.0  [0      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    Lists.newArrayList();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
248	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.clone());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(chromosomeColl.clone());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl.clone());	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
249	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.values());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);      [BUGGY]  this.chromosomes.addAll(chromosomeColl.values());  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl.values());	  this.chromosomes.addAll(chromosomeColl.size());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
