bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	}  	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl);	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]    if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	    if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.		non-compiled	[CE]  <identifier>  expected	6	None	add
7	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  chromosomes.addAll(this.chromosomes);  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes);	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]    chromosomes.addAll(this.chromosomeColl);  [CE]  cannot  find  symbol  chromosomeColl  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    chromosomes.addAll(this.chromosomeColl);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	    chromosomes.addAll(this.chromosomeColl);		non-compiled	[CE]  cannot  find  symbol  chromosomeColl	6	None	add
11	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(this.chromosomes);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	    this.chromosomes.addAll(this.chromosomes);		compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	6	2	add
12	[BUG]  [BUGGY]    this.chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(this.chromosomes);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	    this.chromosomes.addAll(this.chromosomes);		compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [0  	6	2	add
13	[BUG]  [BUGGY]    this.chromosomes.addAll(this.chromosomeColl);  [CE]  cannot  find  symbol  chromosomeColl  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    this.chromosomes.addAll(this.chromosomeColl);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	    this.chromosomes.addAll(this.chromosomeColl);		non-compiled	[CE]  cannot  find  symbol  chromosomeColl	6	None	add
14	[BUG]  [BUGGY]    if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,int)  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]    if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	    if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }		non-compiled	[CE]  no  suitable  constructor  found  for  NumberIsTooLargeException(LocalizedFormats,int)	6	None	add
15	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);  [BUGGY]  if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]    [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	}  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
