bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.add(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomesColl);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(this.chromosomesColl);  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomesColl);	  chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  this.chromosomes.clear();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.clear();  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.clear();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
7	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    }    	non-compiled	[CE]  not  a  statement	3	None	replace
8	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  false);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
10	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
11	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	        this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
12	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
13	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
14	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
15	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  false;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  java.lang.AssertionError:  false;  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    java.lang.AssertionError:  false;	  	non-compiled	[CE]  not  a  statement	11	None	add
16	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  ')'  expected	2	None	replace
18	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  ')'  expected	2	None	replace
19	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.	      if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    this.chromosomes.    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  chromosomes.addAll(this.chromososomeColl);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(this.chromososomeColl);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromososomeColl);	      chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomeSize);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(this.chromosomeSize);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomeSize);	      chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(0).clone());  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(this.chromosomes.get(0).clone());  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(0).clone());	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(i).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
32	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	12	None	replace
34	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	12	None	replace
36	[BUG]  [BUGGY]  this.chromosomes.add(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.add(chromosomeColl);  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.add(chromosomeColl);	  this.chromosomes.addAll(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomeColl.size());  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.addAll(chromosomeColl.size());  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromosomeColl.size());	  this.chromosomes.addAll(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  this.chromosomes.addAll(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.addAll(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.addAll(i);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.add(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  i++)  {  chromosomes.add(i);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomeColl!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  this.chromosomes.addAll(chromososomeColl);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.addAll(chromososomeColl);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(chromososomeColl);	      this.chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.chromosomes.	      if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    this.chromosomes.    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.addAll(populationLimit);  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(populationLimit);	  this.chromosomes.addAll(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  this.chromosomeColl.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
48	[BUG]  [BUGGY]  chromosomes.add(this.chromosomeColl);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.add(this.chromosomeColl);  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.add(this.chromosomeColl);	  chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  chromosomes.addAll(this.chromosomes.get(i).clone());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(this.chromosomes.get(i).clone());  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.chromosomes.get(i).clone());	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  i++)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    i++)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  0);  }	      if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    0);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	for(int  i  =  0;  i  <  this.chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomes.get(0).clone());  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomes.get(i).clone());    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  java.lang.ArrayList  <  AssertionError>  this.chromosomes  =  new  java.lang.ArrayList  <  AssertionError>();  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  java.lang.ArrayList  <  AssertionError>  this.chromosomes  =  new  java.lang.ArrayList  <  AssertionError>();  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList  <  AssertionError>  this.chromosomes  =  new  java.lang.ArrayList  <  AssertionError>();	  	non-compiled	[CE]  not  a  statement	11	None	add
55	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  java.lang.ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  java.lang.ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    java.lang.ArrayList  <  AssertionError>  this.chromosomes  =  Lists.newArrayList();	  	non-compiled	[CE]  not  a  statement	11	None	add
56	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
57	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<[(f=0.0  [1  	11	2	add
58	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  cannot  find  symbol  Lists  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  Lists.newArrayList();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	non-compiled	[CE]  cannot  find  symbol  Lists	11	None	add
59	[BUG]  [BUGGY]  addChromosome(chromosomeColl);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  addChromosome(chromosomeColl);  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	addChromosome(chromosomeColl);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(populationLimit);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(populationLimit);	      chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  chromosomes.addAll(this.cloneChromosomes);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  chromosomes.addAll(this.cloneChromosomes);  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	chromosomes.addAll(this.cloneChromosomes);	      chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	12	None	replace
63	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	12	None	replace
64	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	9	None	replace
65	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	9	None	replace
66	[BUG]  [BUGGY]  this.chromosomes.addAll(this);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.addAll(this);  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(this);	  this.chromosomes.addAll(chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomes.size();  ++i)  {  chromosomes.addAll(this.chromosomeColl);  }	  if(this.chromosomes!=    null)    {    for(int    i    =    0;    i    <    this.chromosomes.size();    ++i)    {    chromosomes.addAll(this.chromosomeColl);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
68	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	12	None	replace
69	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	      this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	12	None	replace
70	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>());  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>());	      this.chromosomes.addAll(this.chromosomeColl);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  int  populationLimit  =  chromosomeColl.size();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  int  populationLimit  =  chromosomeColl.size();  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  chromosomeColl.size();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  int  populationLimit  =  chromosomes.size();  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  int  populationLimit  =  chromosomes.size();  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	int  populationLimit  =  chromosomes.size();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]  if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }  [BUGGY]      [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	if(chromosomes!=  null)  {  for(int  i  =  0;  i  <  chromosomeColl.size();  i++)  {  chromosomes.addAll(chromosomeColl);  }	  if(chromosomes!=    null)    {    for(int    i    =    0;    i    <    chromosomeColl.size();    i++)    {    chromosomes.add(i);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]    java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  	non-compiled	[CE]  ')'  expected	11	None	add
75	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]      java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  	non-compiled	[CE]  ')'  expected	11	None	add
76	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  [CE]  ')'  expected  [FE]        java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE	  	non-compiled	[CE]  ')'  expected	11	None	add
77	[BUG]  [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]          java.lang.AssertionError:  expected:<[(f=0.0  [0    [CONTEXT]    public  void  addChromosomes(final  Collection<Chromosome>  chromosomeColl)  {  if  (chromosomes.size()  +  chromosomeColl.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.chromosomes.addAll(chromosomeColl);    [BUGGY]      this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]    }  [CLASS]  ListPopulation  [METHOD]  addChromosomes  [RETURN_TYPE]  void  Chromosome>  chromosomeColl  [VARIABLES]  Collection  chromosomeColl  List  chromosomes  boolean  int  populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  	non-compiled	[CE]  ')'  expected	11	None	add
