bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	16	3	replace
2	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	16	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  AssertionError  	16	1	replace
4	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  AssertionError  	16	1	replace
5	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	16	3	replace
6	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	16	3	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	16	3	replace
8	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	16	3	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
10	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
12	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
14	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
16	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
18	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	compilable	  [FE]  AssertionError  	11	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
20	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
22	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
24	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
26	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
27	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	32	None	add
28	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
29	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
30	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
31	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
32	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
33	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
35	[BUG]  [BUGGY]  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
36	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
37	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	119	3	replace
38	[BUG]  [BUGGY]  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	119	3	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	68	1	add
40	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	68	1	add
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	68	1	add
42	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	68	1	add
43	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit));  [CE]  ';'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit));	  	non-compiled	[CE]  ';'  expected	68	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  }	  	compilable	  [FE]  AssertionError  	68	1	add
45	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  }  [FE]  AssertionError  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  }	  	compilable	  [FE]  AssertionError  	68	1	add
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.removeAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.removeAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	68	1	add
47	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.removeAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.removeAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.removeAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	68	1	add
48	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
49	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
50	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	77	3	replace
51	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	77	3	replace
52	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
53	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
54	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
55	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
56	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
57	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
58	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
59	[BUG]  [BUGGY]  chromosomes.addAll(this,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(ListPopulation,int)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(this,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(this,  populationLimit);	  chromosomes.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ListPopulation,int)	104	None	replace
60	[BUG]  [BUGGY]  chromosomes.addAll(this,  new  ArrayList  <  Chromosome>(populationLimit));  [CE]  no  suitable  method  found  for  addAll(ListPopulation,ArrayList<Chromosome>)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(this,  new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(this,  new  ArrayList  <  Chromosome>(populationLimit));	  chromosomes.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ListPopulation,ArrayList<Chromosome>)	104	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	66	1	add
62	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	66	1	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	66	1	add
64	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	66	1	add
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  	compilable	  [FE]  AssertionError  	66	1	add
66	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    synchronized(chromosomes)  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  	compilable	  [FE]  AssertionError  	66	1	add
67	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit));  [CE]  ';'  expected  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit));	  	non-compiled	[CE]  ';'  expected	66	None	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	66	1	add
69	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	66	1	add
70	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  numberLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  numberLimit);	  this.chromosomes.addAll(count,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	36	None	replace
71	[BUG]  [BUGGY]  this.chromosomes.addAll(numberLimit,  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(numberLimit,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(numberLimit,  populationLimit);	  this.chromosomes.addAll(count,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	36	None	replace
72	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit,  populationLimit));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.add(new    TreeSet    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
73	[BUG]  [BUGGY]  this.chromosomes.addAll(new  TreeSet  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  TreeSet  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  TreeSet  <  Chromosome>(populationLimit));	  this.chromosomes.add(new    TreeSet    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
74	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit),  false);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit),  false);	  this.chromosomes.add(new    TreeSet    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
75	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit),  populationLimit);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.add(new    TreeSet    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
76	[BUG]  [BUGGY]  chromosomes.addAll(this.populationLimit,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(this.populationLimit,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(this.populationLimit,  populationLimit);	  chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	21	None	replace
77	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit,  this.populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(populationLimit,  this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(populationLimit,  this.populationLimit);	  chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	21	None	replace
78	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,boolean)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(populationLimit,  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(populationLimit,  false);	  chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean)	21	None	replace
79	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(populationLimit,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(populationLimit,  populationLimit);	  chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	21	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	41	1	add
81	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	41	1	add
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	41	1	add
83	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	compilable	  [FE]  AssertionError  	41	1	add
84	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit));  [CE]  not  a  statement  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit));	  	non-compiled	[CE]  not  a  statement	41	None	add
85	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [CE]  not  a  statement  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    ArrayList  <  Chromosome>  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	non-compiled	[CE]  not  a  statement	41	None	add
86	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  java.lang.IndexOutOfBoundsException:  Index:  0;  [CE]  not  a  statement  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  java.lang.IndexOutOfBoundsException:  Index:  0;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    java.lang.IndexOutOfBoundsException:  Index:  0;	  	non-compiled	[CE]  not  a  statement	41	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
88	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
90	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
92	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
93	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	51	1	add
94	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	51	1	add
95	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	51	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	70	1	add
97	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	70	1	add
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	70	1	add
99	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	70	1	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	70	1	add
101	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	70	1	add
102	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  If(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  If(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    If(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	non-compiled	[CE]  ';'  expected	70	None	add
103	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
104	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
105	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
106	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
107	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
108	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
109	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	92	None	add
110	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	92	None	add
111	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
112	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
113	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
114	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
115	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
116	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
117	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
118	[BUG]  [BUGGY]  chromosomes.add(this.populationLimit,  populationLimit);  [CE]  no  suitable  method  found  for  add(int,int)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(this.populationLimit,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(this.populationLimit,  populationLimit);	  chromosomes.add(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int)	23	None	replace
119	[BUG]  [BUGGY]  chromosomes.add(populationLimit,  this.populationLimit);  [CE]  no  suitable  method  found  for  add(int,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(populationLimit,  this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(populationLimit,  this.populationLimit);	  chromosomes.add(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int)	23	None	replace
120	[BUG]  [BUGGY]  chromosomes.add(populationLimit,  populationLimit);  [CE]  no  suitable  method  found  for  add(int,int)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(populationLimit,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(populationLimit,  populationLimit);	  chromosomes.add(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int)	23	None	replace
121	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
122	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
123	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
124	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
125	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
126	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	1	replace
128	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	1	replace
129	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	1	replace
131	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	1	replace
132	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
133	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
134	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
135	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
136	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
137	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
138	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
139	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
140	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
141	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
142	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
143	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
145	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
146	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  java.lang.IndexOutOfBoundsException:  Index:  0;  [CE]  not  a  statement  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  java.lang.IndexOutOfBoundsException:  Index:  0;  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    java.lang.IndexOutOfBoundsException:  Index:  0;	  	non-compiled	[CE]  not  a  statement	98	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
148	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	compilable	  [FE]  AssertionError  	98	1	add
149	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
150	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
152	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
153	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
154	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
156	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);	  	compilable	  [FE]  AssertionError  	26	1	add
158	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);	  	compilable	  [FE]  AssertionError  	26	1	add
159	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  [CE]  ')'  expected  [FE]                java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasNext();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	7	None	replace
160	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  [CE]  ')'  expected  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasNext();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	7	None	replace
161	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  }  [CE]  ')'  expected  [FE]                    java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasNext();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	7	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
163	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
165	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
166	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
167	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
169	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	15	1	add
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	compilable	  [FE]  AssertionError  	15	1	add
171	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	compilable	  [FE]  AssertionError  	15	1	add
172	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    populationLimit);    	non-compiled	[CE]  ')'  expected	9	None	replace
173	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit,  false);  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,int,boolean)  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit,  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit,  false);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,int,boolean)	9	None	replace
174	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit,  true);  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,int,boolean)  [FE]                      AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit,  true);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit,  true);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,int,boolean)	9	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	46	1	add
176	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	46	1	add
177	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	46	None	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	46	1	add
179	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	46	1	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	46	1	add
181	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	46	1	add
182	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	46	None	add
183	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
184	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
185	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
186	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
187	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	20	None	replace
188	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  ')'  expected	20	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  AssertionError  	116	1	add
190	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  AssertionError  	116	1	add
191	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  	non-compiled	[CE]  ')'  expected	116	None	add
192	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  	non-compiled	[CE]  ')'  expected	116	None	add
193	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  NotPositiveException  	116	5	add
194	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  NotPositiveException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  NotPositiveException  	116	5	add
195	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  [CE]  ')'  expected  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit	  	non-compiled	[CE]  ')'  expected	116	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
197	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
198	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
199	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
201	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
202	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
203	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	48	1	add
204	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	48	None	add
205	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	50	None	replace
206	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	50	None	replace
207	[BUG]  [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	          chromosomes.addAll(this.chromosomes);    chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	50	None	replace
208	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
209	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
210	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
211	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
212	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
213	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
214	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
215	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
216	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	90	None	add
217	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	47	3	replace
218	[BUG]  [BUGGY]  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	47	3	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
220	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
221	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
222	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
224	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
226	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
227	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
228	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
229	[BUG]  [BUGGY]  chromosomes.add(this.chromosomes,  populationLimit);  [CE]  no  suitable  method  found  for  add(List<Chromosome>,int)  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(this.chromosomes,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(this.chromosomes,  populationLimit);	  chromosomes.add(this.chromosomes);    	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>,int)	22	None	replace
230	[BUG]  [BUGGY]  chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));	  chromosomes.add(this.chromosomes);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)	22	None	replace
231	[BUG]  [BUGGY]  chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  this.chromosomes);  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,List<Chromosome>)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  this.chromosomes);	  chromosomes.add(this.chromosomes);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,List<Chromosome>)	22	None	replace
232	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
233	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
234	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
235	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
236	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
237	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  0)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
238	[BUG]  [BUGGY]  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  chromosomes.clear();  }  [CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  chromosomes.clear();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.size())    {    chromosomes.clear();    }    	non-compiled	[CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	5	None	replace
239	[BUG]  [BUGGY]  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  this.chromosomes.clear();  }  [CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]              java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  this.chromosomes.clear();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.size())    {    chromosomes.clear();    }    	non-compiled	[CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	5	None	replace
240	[BUG]  [BUGGY]  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  chromosomes.addAll(this.chromosomes);  }  [CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]                java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.size())  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.size())    {    chromosomes.clear();    }    	non-compiled	[CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	5	None	replace
241	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	18	3	replace
242	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	18	3	replace
243	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
244	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
245	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	18	3	replace
246	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	18	3	replace
247	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
248	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
249	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
250	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
252	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
254	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	17	1	add
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	17	1	add
256	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	17	1	add
257	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes.size(),  populationLimit,  false);  [CE]  no  suitable  method  found  for  add(int,int,boolean)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes.size(),  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes.size(),  populationLimit,  false);	  this.chromosomes.add(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int,boolean)	38	None	replace
258	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes.size(),  populationLimit,  true);  [CE]  no  suitable  method  found  for  add(int,int,boolean)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes.size(),  populationLimit,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes.size(),  populationLimit,  true);	  this.chromosomes.add(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int,boolean)	38	None	replace
259	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes.size()  -  1,  populationLimit);  [CE]  no  suitable  method  found  for  add(int,int)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes.size()  -  1,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes.size()  -  1,  populationLimit);	  this.chromosomes.add(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int)	38	None	replace
260	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes.size(),  0,  populationLimit);  [CE]  no  suitable  method  found  for  add(int,int,int)  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes.size(),  0,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes.size(),  0,  populationLimit);	  this.chromosomes.add(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int,int)	38	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
262	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
263	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
265	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
267	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
268	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
269	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
270	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	12	3	replace
271	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	12	3	replace
272	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	12	3	replace
273	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	12	3	replace
274	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	115	3	replace
275	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	115	3	replace
276	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
277	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
278	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
279	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
280	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
281	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
282	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
283	[BUG]  [BUGGY]  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	76	1	add
285	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	76	1	add
286	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
287	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
288	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
289	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
290	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
291	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
292	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
293	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    synchronized(this.chromosomes)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	76	1	add
294	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	3	add
295	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	3	add
296	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	3	add
297	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	3	add
298	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	3	add
299	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	3	add
300	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  [CE]  illegal  start  of  expression  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
301	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.remove();  chromosomes.clear();  [CE]  no  suitable  method  found  for  remove()  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.remove();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    chromosomes.remove();  chromosomes.clear();	  	non-compiled	[CE]  no  suitable  method  found  for  remove()	1	None	add
302	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  true));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  true));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  true));	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
303	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit,  false));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit,  false));	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
304	[BUG]  [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit,  false));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit,  false));	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
305	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	3	replace
306	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	27	3	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    	compilable	  [FE]  AssertionError  	27	1	replace
308	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    	compilable	  [FE]  AssertionError  	27	1	replace
309	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,int,boolean)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  populationLimit,  false);	  this.chromosomes.addAll(populationLimit,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,boolean)	35	None	replace
310	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  populationLimit,  true);  [CE]  no  suitable  method  found  for  addAll(int,int,boolean)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  populationLimit,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  populationLimit,  true);	  this.chromosomes.addAll(populationLimit,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,boolean)	35	None	replace
311	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  0,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int,int)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  0,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  0,  populationLimit);	  this.chromosomes.addAll(populationLimit,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,int)	35	None	replace
312	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
313	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
314	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
315	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
316	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
317	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
318	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
319	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	118	1	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
321	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
323	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
325	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
327	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	74	1	add
328	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	74	1	add
329	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	74	1	add
330	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit  +  1));  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit  +  1));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	99	None	replace
331	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit  +  1));  [CE]  cannot  find  symbol  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit  +  1));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
332	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit,  populationLimit));  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit,  populationLimit));	  chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	69	None	replace
333	[BUG]  [BUGGY]  chromosomes.addAll(new  LinkedList  <  Chromosome>(this.populationLimit));  [CE]  cannot  find  symbol  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  LinkedList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new  LinkedList  <  Chromosome>(this.populationLimit));	  chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
334	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit,  false));  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit,  false));	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
335	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit),  false);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit),  false);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
336	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
337	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
338	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
339	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
340	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
341	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
342	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
343	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
344	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
345	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
346	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	83	1	add
347	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	83	1	add
348	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	83	1	add
349	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	83	1	add
350	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.removeAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	83	1	add
351	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	83	1	add
352	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	83	1	add
353	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	83	1	add
354	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	83	1	add
355	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	83	1	add
356	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
357	[BUG]  [BUGGY]  this.chromosomes.addAll(true,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(boolean,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(true,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(true,  populationLimit);	  this.chromosomes.addAll(populationLimit,    true);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(boolean,int)	82	None	replace
358	[BUG]  [BUGGY]  this.chromosomes.addAll(count,  populationLimit,  true);  [CE]  cannot  find  symbol  count  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(count,  populationLimit,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(count,  populationLimit,  true);	  this.chromosomes.addAll(populationLimit,    true);    	non-compiled	[CE]  cannot  find  symbol  count	82	None	replace
359	[BUG]  [BUGGY]  this.chromosomes.addAll(this.populationLimit,  true);  [CE]  no  suitable  method  found  for  addAll(int,boolean)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(this.populationLimit,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(this.populationLimit,  true);	  this.chromosomes.addAll(populationLimit,    true);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean)	82	None	replace
360	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
361	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
362	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
363	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
364	[BUG]  [BUGGY]  this.chromosomes.addAll(this.populationLimit,  populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,int,boolean)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(this.populationLimit,  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(this.populationLimit,  populationLimit,  false);	  this.chromosomes.addAll(this.populationLimit,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,boolean)	55	None	replace
365	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>());  [CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>)  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	non-compiled	[CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>)	57	None	replace
366	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(this.populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(this.populationLimit,  new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	57	7	replace
367	[BUG]  [BUGGY]  this.chromosomes.addAll(this.populationLimit,  new  ArrayList  <  Chromosome>());  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(this.populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(this.populationLimit,  new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	57	7	replace
368	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	57	3	replace
369	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>());  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	57	3	replace
370	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.add(new    LinkedList    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	72	None	replace
371	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  false));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  false));	  this.chromosomes.add(new    LinkedList    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
372	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
373	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	75	3	replace
374	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	75	3	replace
375	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
376	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	56	7	add
377	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	56	7	add
378	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	56	7	add
379	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	56	7	add
380	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,int)  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,int)	61	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	43	1	add
382	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	43	1	add
383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	43	1	add
384	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	43	1	add
385	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	43	1	add
386	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	43	1	add
387	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  If(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  ';'  expected  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  If(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    If(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	non-compiled	[CE]  ';'  expected	43	None	add
388	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	89	None	replace
389	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	89	None	replace
390	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    }    else    {    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
391	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    }    else    {    chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	106	3	replace
392	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    }    else    {    chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	106	3	replace
393	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  true));  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  true));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  true));	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	97	None	replace
394	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  populationLimit);  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  populationLimit);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	97	None	replace
395	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false);  [CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false);	  chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean)	67	None	replace
396	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false));  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false));	  chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	67	None	replace
397	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,int)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    This.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,int)	87	None	replace
398	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
399	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
400	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
401	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
402	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  }  else  {  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  }  else  {  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
403	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  }  else  {  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  }  else  {  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  }  else  {  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
404	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
405	[BUG]  [BUGGY]  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
406	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  true);  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,boolean)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  true);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  true);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,boolean)	96	None	replace
407	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  false);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  false);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	96	None	replace
408	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  false,  populationLimit);  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,boolean,int)  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  false,  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  false,  populationLimit);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,boolean,int)	96	None	replace
409	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
410	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
411	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
412	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
414	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
415	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
416	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
417	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	28	1	add
418	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit),  populationLimit,  false);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit),  populationLimit,  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit),  populationLimit,  false);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
419	[BUG]  [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit),  populationLimit);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
420	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
421	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
422	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
423	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
424	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
425	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
426	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
427	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit),  true);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit),  true);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit),  true);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
428	[BUG]  [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit),  false);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit),  false);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
429	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit),  false);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit),  false);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
430	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
431	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
432	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_P  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_P  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_P	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
433	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
434	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
436	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
438	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
439	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes  >=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes  >=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes  >=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	78	None	add
440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
441	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
443	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
445	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
447	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
449	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
450	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  false);  [CE]  no  suitable  method  found  for  add(List<Chromosome>,int,boolean)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes,  populationLimit,  false);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>,int,boolean)	37	None	replace
451	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  true);  [CE]  no  suitable  method  found  for  add(List<Chromosome>,int,boolean)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes,  populationLimit,  true);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>,int,boolean)	37	None	replace
452	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes,  0,  populationLimit);  [CE]  no  suitable  method  found  for  add(List<Chromosome>,int,int)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes,  0,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes,  0,  populationLimit);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>,int,int)	37	None	replace
453	[BUG]  [BUGGY]  this.chromosomes.add(populationLimit,  chromosomes);  [CE]  no  suitable  method  found  for  add(int,List<Chromosome>)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(populationLimit,  chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(populationLimit,  chromosomes);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,List<Chromosome>)	37	None	replace
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  AssertionError  	101	1	add
455	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  AssertionError  	101	1	add
456	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  	non-compiled	[CE]  ')'  expected	101	None	add
457	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  	non-compiled	[CE]  ')'  expected	101	None	add
458	[BUG]  [BUGGY]  [FE]  NotPositiveException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  NotPositiveException  	101	5	add
459	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  NotPositiveException  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  NotPositiveException  	101	5	add
460	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  [CE]  ')'  expected  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit	  	non-compiled	[CE]  ')'  expected	101	None	add
461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
462	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
463	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	107	1	add
464	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	107	1	add
465	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	107	1	add
466	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	107	1	add
467	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
468	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
469	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
470	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
471	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  false);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  false);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	39	None	replace
472	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean,int)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  populationLimit);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean,int)	39	None	replace
473	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.addAll(new    LinkedList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
474	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit),  false);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(populationLimit),  false);	  this.chromosomes.addAll(new    LinkedList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
475	[BUG]  [BUGGY]  This.chromosomes.addAll(this.chromosomes);  [CE]  package  This  does  not  exist  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  This.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	This.chromosomes.addAll(this.chromosomes);	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  package  This  does  not  exist	44	None	replace
476	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
477	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  [CE]  ';'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  ';'  expected	62	None	replace
478	[BUG]  [BUGGY]  new  ArrayList  <  Chromosome>(populationLimit));  [CE]  ';'  expected  [FE]                java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	new  ArrayList  <  Chromosome>(populationLimit));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  ';'  expected	62	None	replace
479	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
480	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
481	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	80	1	add
482	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	80	1	add
483	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
484	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
485	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
486	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	80	1	add
488	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	80	1	add
489	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  this.populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,int,boolean)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  this.populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  this.populationLimit,  false);	  this.chromosomes.addAll(populationLimit,    this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,boolean)	120	None	replace
490	[BUG]  [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit,  populationLimit));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  HashMap  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.add(new    HashMap    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
491	[BUG]  [BUGGY]  this.chromosomes.addAll(new  HashMap  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  HashMap  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  HashMap  <  Chromosome>(populationLimit));	  this.chromosomes.add(new    HashMap    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
492	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
493	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
494	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
495	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
496	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
497	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
498	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	non-compiled	[CE]  ';'  expected	60	None	add
499	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
500	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
501	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
502	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
503	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
504	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
505	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	non-compiled	[CE]  ';'  expected	58	None	add
506	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
507	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
508	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
509	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
510	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
511	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
512	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
513	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
514	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	94	None	add
515	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  1,  0);  [CE]  no  suitable  method  found  for  addAll(int,int,int)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  1,  0);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  1,  0);	  this.chromosomes.addAll(populationLimit,    0);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,int)	113	None	replace
516	[BUG]  [BUGGY]  this.chromosomes.addAll(0,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(0,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(0,  populationLimit);	  this.chromosomes.addAll(populationLimit,    0);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	113	None	replace
517	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  1);  [CE]  no  suitable  method  found  for  addAll(int,int)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  1);	  this.chromosomes.addAll(populationLimit,    0);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int)	113	None	replace
518	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	114	1	add
519	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	114	1	add
520	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	114	1	add
521	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	114	1	add
522	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  If(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  ';'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  If(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    If(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }	  	non-compiled	[CE]  ';'  expected	114	None	add
523	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	117	3	replace
524	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	117	3	replace
525	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  no  suitable  method  found  for  addAll(int)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	117	None	replace
526	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	117	None	replace
527	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit,  populationLimit));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.add(new    TreeMap    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
528	[BUG]  [BUGGY]  this.chromosomes.addAll(new  TreeMap  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  TreeMap  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  TreeMap  <  Chromosome>(populationLimit));	  this.chromosomes.add(new    TreeMap    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
529	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	102	3	replace
530	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	102	3	replace
531	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  AssertionError  	102	1	replace
532	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  AssertionError  	102	1	replace
533	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	102	None	replace
534	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  false));  [CE]  no  suitable  constructor  found  for  ArrayList(int,int,boolean)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  false));	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int,boolean)	8	None	replace
535	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
536	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
537	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
538	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
539	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
540	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
541	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
542	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
543	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
544	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
545	[BUG]  [BUGGY]  This.chromosomes.addAll(chromosomes);  [CE]  package  This  does  not  exist  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  This.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	This.chromosomes.addAll(chromosomes);	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  package  This  does  not  exist	71	None	replace
546	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }  [CE]  ')'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasMore();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	6	None	replace
547	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }  [CE]  ')'  expected  [FE]                java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasMore();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	6	None	replace
548	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.  [CE]  ')'  expected  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasMore();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	6	None	replace
549	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  true);  [CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean,boolean)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  true);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  true);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit),    true);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean,boolean)	105	None	replace
550	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  true));  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  true));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  true));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	105	None	replace
551	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  AssertionError  	31	1	replace
552	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  AssertionError  	31	1	replace
553	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	3	replace
554	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	3	replace
555	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	3	replace
556	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	3	replace
557	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    }    	non-compiled	[CE]  variable  chromosomes  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	112	None	replace
558	[BUG]  [BUGGY]  Set  <  Chromosome>  chromosomes  =  Sets.newHashSet();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  Set  <  Chromosome>  chromosomes  =  Sets.newHashSet();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	Set  <  Chromosome>  chromosomes  =  Sets.newHashSet();	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
559	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	chromosomes.addAll(chromosomes);	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	112	3	replace
560	[BUG]  [BUGGY]  chromosomes.addAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(chromosomes);	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	112	3	replace
561	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.addAll(chromosomes,    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	10	None	replace
562	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  false);  [CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>,boolean)  [FE]                      AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  false);	  this.chromosomes.addAll(chromosomes,    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>,boolean)	10	None	replace
563	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit,  false));  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]                        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit,  false));	  this.chromosomes.addAll(chromosomes,    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	10	None	replace
564	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>,int)  [FE]                          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.addAll(chromosomes,    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>,int)	10	None	replace
565	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
566	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
567	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
568	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
569	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
570	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
571	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
572	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
573	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
574	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	19	1	add
575	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	110	1	add
576	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	110	1	add
577	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	110	1	add
578	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.removeAll(chromosomes);  }  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	110	1	add
579	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  PopulationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  cannot  find  symbol  PopulationLimit  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  PopulationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  PopulationLimit)  {  this.chromosomes.addAll(chromosomes);  }	  	non-compiled	[CE]  cannot  find  symbol  PopulationLimit	110	None	add
580	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit,  false));  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit,  false));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit,  false));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	40	None	replace
581	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false),  populationLimit);  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false),  populationLimit);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	40	None	replace
582	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit),  true);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit),  true);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit),  true);	  this.chromosomes.add(new    LinkedList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
583	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  false,  chromosomes);  [CE]  no  suitable  method  found  for  addAll(int,boolean,List<Chromosome>)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  false,  chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  false,  chromosomes);	  this.chromosomes.addAll(populationLimit,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean,List<Chromosome>)	34	None	replace
584	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  false,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,boolean,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  false,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  false,  populationLimit);	  this.chromosomes.addAll(populationLimit,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean,int)	34	None	replace
585	[BUG]  [BUGGY]  this.chromosomes.addAll(false,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(boolean,int)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(false,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(false,  populationLimit);	  this.chromosomes.addAll(populationLimit,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(boolean,int)	34	None	replace
586	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
587	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
588	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
589	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
590	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
591	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
592	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
593	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
594	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
595	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
596	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
597	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
598	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
599	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
600	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
601	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  0)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
602	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  0)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  0)  {  chromosomes.clear();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  }	          chromosomes.clear();    new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	95	3	replace
603	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
604	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
605	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	93	3	replace
606	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	110	1	add
607	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	110	1	add
608	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	110	1	add
609	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes.size()  >  populationLimit)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	110	1	add
610	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
611	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)	99	None	replace
612	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  *  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  *  1));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	99	3	replace
613	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  *  1));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  *  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  *  1));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	99	3	replace
614	[BUG]  [BUGGY]  chromosomes.add(populationLimit,  false);  [CE]  no  suitable  method  found  for  add(int,boolean)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(populationLimit,  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(populationLimit,  false);	  chromosomes.add(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,boolean)	23	None	replace
615	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	11	1	add
616	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	11	1	add
617	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	30	1	add
618	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	30	1	add
619	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	1	None	add
620	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  false));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  false));	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
621	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
622	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
623	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
624	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	20	3	replace
625	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  true,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,boolean,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  true,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  true,  populationLimit);	  this.chromosomes.addAll(populationLimit,    true);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean,int)	82	None	replace
626	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
627	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
628	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
629	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
630	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
631	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes.clear();  new  ArrayList  <  Chromosome>(this.chromosomes.size());	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	94	3	add
632	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	74	1	add
633	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes  =  new  ArrayList  <  Chromosome>();	  	compilable	  [FE]  AssertionError  	74	1	add
634	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  true);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  true);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit),  true);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	8	None	replace
635	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false),  chromosomes);  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false),  chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  false),  chromosomes);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	40	None	replace
636	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	89	None	replace
637	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
638	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
639	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
640	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
641	[BUG]  [BUGGY]  chromosomes.addAll(this.populationSize);  [CE]  cannot  find  symbol  populationSize  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(this.populationSize);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(this.populationSize);	  chromosomes.addAll(this);    	non-compiled	[CE]  cannot  find  symbol  populationSize	104	None	replace
642	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	102	3	replace
643	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	102	3	replace
644	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  no  suitable  method  found  for  addAll(int)  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	102	None	replace
645	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
646	[BUG]  [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  true);  [CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>,boolean)  [FE]                    AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  true);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(chromosomes,  new  ArrayList  <  Chromosome>(populationLimit),  true);	  this.chromosomes.addAll(chromosomes,    new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  no  suitable  method  found  for  addAll(List<Chromosome>,ArrayList<Chromosome>,boolean)	10	None	replace
647	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	50	None	replace
648	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
649	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  [CE]  ')'  expected  [FE]                java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasNext();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	7	None	replace
650	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	24	1	add
651	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	24	1	add
652	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
653	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	24	1	add
654	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit,  false));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit,  false));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeSet  <  Chromosome>(populationLimit,  false));	  this.chromosomes.add(new    TreeSet    <    Chromosome>(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
655	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	83	None	add
656	[BUG]  [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(this.populationLimit));  [CE]  cannot  find  symbol  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  LinkedList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  LinkedList  <  Chromosome>(this.populationLimit));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
657	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
658	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	78	1	add
659	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	76	None	add
660	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
661	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	76	None	add
662	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	15	1	add
663	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	15	1	add
664	[BUG]  [BUGGY]  this.chromosomes.addAll(numberLimit,  new  ArrayList  <  Chromosome>());  [CE]  cannot  find  symbol  numberLimit  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(numberLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(numberLimit,  new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	non-compiled	[CE]  cannot  find  symbol  numberLimit	57	None	replace
665	[BUG]  [BUGGY]  this.chromosomes.addAll(count,  new  ArrayList  <  Chromosome>());  [CE]  cannot  find  symbol  count  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(count,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(count,  new  ArrayList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	non-compiled	[CE]  cannot  find  symbol  count	57	None	replace
666	[BUG]  [BUGGY]  chromosomes.removeAll(this.populationLimit);  [CE]  no  suitable  method  found  for  removeAll(int)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.populationLimit);	  chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  no  suitable  method  found  for  removeAll(int)	84	None	replace
667	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
668	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
669	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  ArrayList  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chromosome>(populationLimit  +  1);  [CE]  variable  populationLimit  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  ArrayList  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chromosome>(populationLimit  +  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    ArrayList  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chromosome>(populationLimit  +  1);	  	non-compiled	[CE]  variable  populationLimit  is  already  defined  in  constructor  ListPopulation(List<Chromosome>,int)	98	None	add
670	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  ArrayList  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chromosome>(populationLimit  +  1));  [CE]  ';'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  ArrayList  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit    +    1));    ArrayList  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chromosome>(populationLimit  +  1));	  	non-compiled	[CE]  ';'  expected	98	None	add
671	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)	58	None	add
672	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
673	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
674	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	90	None	add
675	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
676	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	90	3	add
677	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  illegal  start  of  expression  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
678	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	26	1	add
679	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	26	1	add
680	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	88	None	replace
681	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
682	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	91	3	replace
683	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	48	None	add
684	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	48	None	add
685	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
686	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
687	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  >  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(populationLimit  >  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	61	3	replace
688	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  >  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  >  0)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  else  {  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	61	3	replace
689	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	  	compilable	  [FE]  AssertionError  	107	1	add
690	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	  	compilable	  [FE]  AssertionError  	107	1	add
691	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	107	1	add
692	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	107	1	add
693	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	107	1	add
694	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	107	1	add
695	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
696	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
697	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	28	1	add
698	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	28	1	add
699	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	28	1	add
700	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	28	1	add
701	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	28	1	add
702	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	28	1	add
703	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	19	1	add
704	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	compilable	  [FE]  AssertionError  	19	1	add
705	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	53	None	add
706	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
707	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	53	1	add
708	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
709	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	3	3	add
710	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes.clear();    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	3	None	add
711	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
712	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
713	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.clear();  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.clear();  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
714	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.clear();  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.clear();  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.clear();  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	32	1	add
715	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	79	3	replace
716	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	79	3	replace
717	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit),  populationLimit);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
718	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  false,  chromosomes);  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,boolean,List<Chromosome>)  [FE]                AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  false,  chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit),  false,  chromosomes);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>,boolean,List<Chromosome>)	96	None	replace
719	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }  [CE]  ')'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasMore();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	6	None	replace
720	[BUG]  [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit),  false);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit,  populationLimit),  false);	  this.chromosomes.add(new    LinkedList    <    Chromosome>(populationLimit,    populationLimit));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
721	[BUG]  [BUGGY]  chromosomes.addAll(this.populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,boolean)  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(this.populationLimit,  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(this.populationLimit,  false);	  chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean)	21	None	replace
722	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
723	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
724	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  	non-compiled	[CE]  ')'  expected	101	None	add
725	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	  	non-compiled	[CE]  ')'  expected	101	None	add
726	[BUG]  [BUGGY]  this.chromosomes.addAll(this.populationLimit,  false);  [CE]  no  suitable  method  found  for  addAll(int,boolean)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(this.populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(this.populationLimit,  false);	  this.chromosomes.addAll(populationLimit,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,boolean)	34	None	replace
727	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	17	1	add
728	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	17	1	add
729	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
730	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
731	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
732	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
733	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
734	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
735	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  this.chromosomes.removeAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	51	1	add
736	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
737	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(!chromosomes.isEmpty())  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	4	3	replace
738	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
739	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.populationLimit!=  0)  {  this.chromosomes.addAll(this.populationLimit);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.populationLimit!=  0)  {  this.chromosomes.addAll(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.populationLimit!=  0)  {  this.chromosomes.addAll(this.populationLimit);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
740	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.populationLimit);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.populationLimit);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.populationLimit);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
741	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.populationLimit  ==  0)  {  this.chromosomes.addAll(this.populationLimit);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.populationLimit  ==  0)  {  this.chromosomes.addAll(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(this.chromosomes);  if(this.populationLimit  ==  0)  {  this.chromosomes.addAll(this.populationLimit);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
742	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	33	3	replace
743	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	33	3	replace
744	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	1	replace
745	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	1	replace
746	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
747	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes  ==  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
748	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
749	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	2	3	replace
750	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
751	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	60	1	add
752	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
753	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	compilable	  [FE]  AssertionError  	80	1	add
754	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	80	1	add
755	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	80	1	add
756	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  	non-compiled	[CE]  ')'  expected	116	None	add
757	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  	non-compiled	[CE]  ')'  expected	116	None	add
758	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	46	None	add
759	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	68	None	add
760	[BUG]  [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes  =(new  ArrayList  <  Chromosome>(this.populationLimit));  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  chromosomes  =(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    chromosomes  =(new  ArrayList  <  Chromosome>(this.populationLimit));	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	68	None	add
761	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.removeAll(populationLimit,  new  ArrayList  <  Chromosome>());  [CE]  no  suitable  method  found  for  removeAll(int,ArrayList<Chromosome>)  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.removeAll(populationLimit,  new  ArrayList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    this.chromosomes.removeAll(populationLimit,  new  ArrayList  <  Chromosome>());	  	non-compiled	[CE]  no  suitable  method  found  for  removeAll(int,ArrayList<Chromosome>)	56	None	add
762	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.removeAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.removeAll(new  ArrayList  <  Chromosome>(populationLimit));	  	non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)	118	None	add
763	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(populationLimit,  chromosomes);	  this.chromosomes.addAll(this.populationLimit,    populationLimit);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	55	7	replace
764	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  chromosomes);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  chromosomes);	  this.chromosomes.addAll(this.populationLimit,    populationLimit);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	55	7	replace
765	[BUG]  [BUGGY]  this.chromosomes.add(new  List  <  Chromosome>(populationLimit),  false);  [CE]  List  is  abstract;  cannot  be  instantiated  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  List  <  Chromosome>(populationLimit),  false);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  List  <  Chromosome>(populationLimit),  false);	  this.chromosomes.add(new    LinkedList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  List  is  abstract;  cannot  be  instantiated	100	None	replace
766	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	13	1	add
767	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);	  	compilable	  [FE]  AssertionError  	13	1	add
768	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	13	1	add
769	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	13	1	add
770	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	13	1	add
771	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	compilable	  [FE]  AssertionError  	13	1	add
772	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	  	compilable	  [FE]  AssertionError  	13	1	add
773	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  }	  	compilable	  [FE]  AssertionError  	13	1	add
774	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	3	replace
775	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	31	3	replace
776	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  chromosomes);  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  chromosomes);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	97	None	replace
777	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  chromosomes);  [CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean,List<Chromosome>)  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false,  chromosomes);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit),    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(ArrayList<Chromosome>,boolean,List<Chromosome>)	39	None	replace
778	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    }    else    {    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
779	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  java.lang.IndexOutOfBoundsException:  Index:  0;  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  java.lang.IndexOutOfBoundsException:  Index:  0;  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    java.lang.IndexOutOfBoundsException:  Index:  0;	  	non-compiled	[CE]  not  a  statement	92	None	add
780	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  [CE]  illegal  start  of  expression  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    synchronized(chromosomes)  {  chromosomes.clear();  chromosomes.clear();	  	non-compiled	[CE]  illegal  start  of  expression	92	None	add
781	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  0,  false);  [CE]  no  suitable  method  found  for  addAll(int,int,boolean)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  0,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  0,  false);	  this.chromosomes.addAll(populationLimit,    false);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,boolean)	34	None	replace
782	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	29	3	replace
783	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	29	3	replace
784	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	2	replace
785	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	33	2	replace
786	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.n  [CE]  ')'  expected  [FE]              java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.n  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasMore();)  {  chromosomes.n	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasMore();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	6	None	replace
787	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	11	1	add
788	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	11	1	add
789	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes.size(),  populationLimit,  null);  [CE]  no  suitable  method  found  for  add(int,int,<null>)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes.size(),  populationLimit,  null);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes.size(),  populationLimit,  null);	  this.chromosomes.add(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,int,<null>)	38	None	replace
790	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	47	3	replace
791	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	47	3	replace
792	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
793	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  chromosomes.clear();  chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.populationLimit);    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	92	3	add
794	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  0,  this.populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  0,  this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  0,  this.populationLimit);	  this.chromosomes.addAll(populationLimit,    this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,int)	120	None	replace
795	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
796	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
797	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
798	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
799	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
800	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	54	3	replace
801	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
802	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	49	3	replace
803	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
804	[BUG]  [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  dataArea);  [CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)  [FE]                  AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  dataArea);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit,  false),  dataArea);	  this.chromosomes.add(new    ArrayList    <    Chromosome>(populationLimit,    false));    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,boolean)	97	None	replace
805	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
806	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	107	1	add
807	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.	  	non-compiled	[CE]  <identifier>  expected	107	None	add
808	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(	  	non-compiled	[CE]  ')'  expected	107	None	add
809	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size());  }	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes.size());    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
810	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
811	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	52	3	replace
812	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
813	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CH  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CH  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CH	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
814	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	45	None	replace
815	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	75	3	replace
816	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes  ==  null)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	75	3	replace
817	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
818	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
819	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
820	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	compilable	  [FE]  AssertionError  	25	1	replace
821	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  AssertionError  	116	1	add
822	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	compilable	  [FE]  AssertionError  	116	1	add
823	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  	non-compiled	[CE]  ')'  expected	116	None	add
824	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  [CE]  ')'  expected  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit	  	non-compiled	[CE]  ')'  expected	116	None	add
825	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  no  suitable  method  found  for  addAll(int)  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	116	None	add
826	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  this.chromosomes.addAll(this.populationLimit);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  this.chromosomes.addAll(this.populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.populationLimit  <  =  0)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  this.chromosomes.addAll(this.populationLimit);  }	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    this.chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
827	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.clear();	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.size())    {    chromosomes.clear();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	5	3	replace
828	[BUG]  [BUGGY]  this.chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.clear();	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.size())    {    chromosomes.clear();    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	5	3	replace
829	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
830	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
831	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  new  LinkedList  <  Chromosome>());  [CE]  cannot  find  symbol  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  LinkedList  <  Chromosome>());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  new  LinkedList  <  Chromosome>());	  this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
832	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  1,  populationLimit);  [CE]  no  suitable  method  found  for  addAll(int,int,int)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  1,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,  1,  populationLimit);	  this.chromosomes.addAll(populationLimit,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int,int,int)	35	None	replace
833	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    }    else    {    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
834	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  }  else  {  this.chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);    }    else    {    chromosomes.addAll(this.chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
835	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  0);  [CE]  no  suitable  method  found  for  add(List<Chromosome>,int,int)  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  0);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes,  populationLimit,  0);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>,int,int)	37	None	replace
836	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  null);  [CE]  no  suitable  method  found  for  add(List<Chromosome>,int,<null>)  [FE]              AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(chromosomes,  populationLimit,  null);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes,  populationLimit,  null);	  this.chromosomes.add(chromosomes,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>,int,<null>)	37	None	replace
837	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
838	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromos  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromos  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromos	          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    List    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit);    this.chromosomes.addAll(this.    	non-compiled	[CE]  not  a  statement	109	None	replace
839	[BUG]  [BUGGY]  chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit));	  chromosomes.add(this.chromosomes);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
840	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes).removeAll(this.chromosomes);  [CE]  boolean  cannot  be  dereferenced  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes).removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes).removeAll(this.chromosomes);	  	non-compiled	[CE]  boolean  cannot  be  dereferenced	83	None	add
841	[BUG]  [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  [CE]  illegal  start  of  type  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.removeAll(this.chromosomes);  chromosomes.removeAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.removeAll(this.chromosomes);    chromosomes.removeAll(this.chromosomes);  }  else  {  chromosomes.removeAll(this.chromosomes);	  	non-compiled	[CE]  illegal  start  of  type	83	None	add
842	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  no  suitable  method  found  for  addAll(int)  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	101	None	add
843	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.populationLimit);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  	non-compiled	[CE]  ')'  expected	101	None	add
844	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(populationLimit);  chromosomes.addAll(chromosomes);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(populationLimit);  chromosomes.addAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes.addAll(populationLimit);  chromosomes.addAll(chromosomes);	  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	32	None	add
845	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	19	1	add
846	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    this.chromosomes.removeAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        this.chromosomes.removeAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	19	1	add
847	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	59	3	replace
848	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  }	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	59	3	replace
849	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	102	3	replace
850	[BUG]  [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);	  if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	102	3	replace
851	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
852	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
853	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>(chromosomes);    }    this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  }	  	compilable	  [FE]  AssertionError  	26	1	add
854	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	{  this.chromosomes.addAll(chromosomes);  }	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	compilable	  [FE]  AssertionError  	71	1	replace
855	[BUG]  [BUGGY]  {  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	{  this.chromosomes.addAll(chromosomes);  }	  if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    	compilable	  [FE]  AssertionError  	71	1	replace
856	[BUG]  [BUGGY]  chromosomes.addAll(this,  new  LinkedList  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(this,  new  LinkedList  <  Chromosome>(populationLimit));  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(this,  new  LinkedList  <  Chromosome>(populationLimit));	  chromosomes.addAll(this);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
857	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
858	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  AssertionError  	30	1	add
859	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  this.chromosomes.next();  }  [CE]  ')'  expected  [FE]                java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  this.chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  this.chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasNext();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	7	None	replace
860	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  this.chromosomes.next();  }  [CE]  ')'  expected  [FE]                  java.lang.IndexOutOfBoundsException:  Index:  0      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  this.chromosomes.next();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  for(int  chromosomes  =  0;  chromosomes!=  null;  chromosomes.hasNext();)  {  this.chromosomes.next();  }	          chromosomes.clear();    for(int    chromosomes    =    0;    chromosomes!=    null;    chromosomes.hasNext();)    {    chromosomes.next();    }    	non-compiled	[CE]  ')'  expected	7	None	replace
861	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
862	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.removeAll(chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
863	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(chromosomes);        if(chromosomes!=    null)    {    this.chromosomes.addAll(chromosomes);    }    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
864	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  }  [CE]  illegal  start  of  type  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit,    new    ArrayList    <    Chromosome>());    this.chromosomes.addAll(populationLimit,  new  ArrayList  <  Chromosome>());  }	  	non-compiled	[CE]  illegal  start  of  type	56	None	add
865	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  If(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [CE]  ';'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  If(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    If(chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	non-compiled	[CE]  ';'  expected	78	None	add
866	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
867	[BUG]  [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new        ArrayList        <        Chromosome>(populationLimit));        this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	  	compilable	  [FE]  AssertionError  	58	1	add
868	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  0;  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  0;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	4	add
869	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  0;  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  0;  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  0;	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	1	4	add
870	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  >  populationLimit)  {  chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    chromosomes    =    new    ArrayList    <    Chromosome>(this.chromosomes);    	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	50	None	replace
871	[BUG]  [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit),  populationLimit);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(new  TreeMap  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.add(new    LinkedHashMap    <    Chromosome>(populationLimit),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
872	[BUG]  [BUGGY]  chromosomes.addAll(populationLimit);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]        AssertionError      [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  chromosomes.addAll(populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	chromosomes.addAll(populationLimit);	  chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	21	None	replace
873	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	114	1	add
874	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [FE]  AssertionError  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.chromosomes!=  null)  {  chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.chromosomes!=    null)    {    chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	114	1	add
875	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(this.populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(this.populationLimit  <  =  0)  {  chromosomes.addAll(this.chromosomes);  synchronized(this.chromosomes)  {  chromosomes.addAll(this.chromosomes);  }	          chromosomes.addAll(this.chromosomes);    synchronized(this.chromosomes)    {    chromosomes.addAll(this.chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
876	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	48	None	add
877	[BUG]  [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.populationLimit);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.chromosomes);  this.chromosomes.addAll(this.chromosomes);  chromosomes.addAll(this.populationLimit);  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.addAll(this.chromosomes);        chromosomes.addAll(this.chromosomes);    this.chromosomes.addAll(this.chromosomes);    chromosomes.addAll(this.populationLimit);	  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	48	None	add
878	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  chromosomes.clear();  chromosomes.clear();  this.chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    this.chromosomes.clear();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
879	[BUG]  [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          chromosomes.clear();    new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  chromosomes  =  new  ArrayList  <  Chromosome>();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                chromosomes.clear();        new    ArrayList    <    Chromosome>(chromosomes.size());    this.chromosomes.clear();    chromosomes  =  new  ArrayList  <  Chromosome>();  new  ArrayList  <  Chromosome>(chromosomes.size());  this.chromosomes.clear();	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	94	None	add
880	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  ArrayList  <  Chromosome>  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [CE]  not  a  statement  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  ArrayList  <  Chromosome>  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new    ArrayList    <    Chromosome>(this.populationLimit));    ArrayList  <  Chromosome>  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(this.populationLimit));	  	non-compiled	[CE]  not  a  statement	41	None	add
881	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
882	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  TreeList  <  Chromosome>();  }  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  TreeList  <  Chromosome>();  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes    =    new    ArrayList    <    Chromosome>();    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes  =  new  TreeList  <  Chromosome>();  }	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
883	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  }	  	compilable	  [FE]  AssertionError  	13	1	add
884	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  }	  	compilable	  [FE]  AssertionError  	13	1	add
885	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
886	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
887	[BUG]  [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);      [BUGGY]          this.chromosomes.addAll(this.chromosomes);    if(this.chromosomes!=  null)  {  this.chromosomes.addAll(this.chromosomes);  }  this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }  [BUGGY]      this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	                this.chromosomes.addAll(this.chromosomes);        if(this.chromosomes!=    null)    {    this.chromosomes.addAll(this.chromosomes);    }    this.chromosomes.addAll(this.chromosomes);  if(this.chromosomes!=  null)  {  this.chromosomes.removeAll(this.chromosomes);  }	  	compilable	  [FE]  AssertionError  	13	1	add
