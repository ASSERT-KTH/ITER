bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    chromosomes.addAll(this.chromosomes);  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	    chromosomes.addAll(this.chromosomes);		compilable	  [FE]  AssertionError  	18	1	add
2	[BUG]  [BUGGY]    chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    chromosomes.addAll(this.chromosomes);  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    chromosomes.addAll(this.chromosomes);		compilable	  [FE]  AssertionError  	18	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.addAll(chromosomes);  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	    this.chromosomes.addAll(chromosomes);		compilable	  [FE]  AssertionError  	18	1	add
4	[BUG]  [BUGGY]    this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.addAll(chromosomes);  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    this.chromosomes.addAll(chromosomes);		compilable	  [FE]  AssertionError  	18	1	add
5	[BUG]  [BUGGY]    this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  [CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)  [FE]        AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    this.chromosomes.add(new  ArrayList  <  Chromosome>(populationLimit));		non-compiled	[CE]  no  suitable  method  found  for  add(ArrayList<Chromosome>)	18	None	add
6	[BUG]  [BUGGY]    this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]          AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit));  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    this.chromosomes.add(new  LinkedList  <  Chromosome>(populationLimit));		non-compiled	[CE]  cannot  find  symbol	18	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.addAll(this.chromosomes);  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	    this.chromosomes.addAll(this.chromosomes);		compilable	  [FE]  AssertionError  	18	1	add
8	[BUG]  [BUGGY]    this.chromosomes.addAll(this.chromosomes);  [FE]  AssertionError  [FE]            AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.addAll(this.chromosomes);  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    this.chromosomes.addAll(this.chromosomes);		compilable	  [FE]  AssertionError  	18	1	add
9	[BUG]  [BUGGY]  this.chromosomes.addAll(populationLimit);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]    AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]  this.chromosomes.addAll(populationLimit);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(populationLimit);	this.chromosomes.addAll(chromosomes);  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	17	None	replace
10	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	this.chromosomes.addAll(chromosomes);  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	17	3	replace
11	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit));	this.chromosomes.addAll(chromosomes);  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	17	3	replace
12	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes);  [CE]  no  suitable  method  found  for  add(List<Chromosome>)  [FE]    AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]  this.chromosomes.add(chromosomes);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.add(chromosomes);	this.chromosomes.addAll(chromosomes);  	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>)	17	None	replace
13	[BUG]  [BUGGY]  this.chromosomes.addAll(this.populationLimit);  [CE]  no  suitable  method  found  for  addAll(int)  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]  this.chromosomes.addAll(this.populationLimit);  [BUGGY]  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	this.chromosomes.addAll(this.populationLimit);	this.chromosomes.addAll(chromosomes);  	non-compiled	[CE]  no  suitable  method  found  for  addAll(int)	17	None	replace
14	[BUG]  [BUGGY]    this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit));  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit));  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    this.chromosomes.add(new  LinkedHashMap  <  Chromosome>(populationLimit));		non-compiled	[CE]  cannot  find  symbol	18	None	add
15	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    chromosomes.clear();  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	    chromosomes.clear();		compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	18	3	add
16	[BUG]  [BUGGY]    chromosomes.clear();  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      AssertionError  [CONTEXT]  }  if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  [BUGGY]    chromosomes.clear();  [BUGGY]  this.chromosomes.addAll(chromosomes);  }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	    chromosomes.clear();		compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	18	3	add
