bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this.chromosomes.iterator(populationLimit);  [CE]  no  suitable  method  found  for  iterator(int)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  this.chromosomes.iterator(populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  this.chromosomes.iterator(populationLimit);	  return    this.chromosomes.iterator(0);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int)	48	None	replace
2	[BUG]  [BUGGY]  return  this.chromosomes.iterator(populationLimit,  1);  [CE]  no  suitable  method  found  for  iterator(int,int)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  this.chromosomes.iterator(populationLimit,  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  this.chromosomes.iterator(populationLimit,  1);	  return    this.chromosomes.iterator(0);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int,int)	48	None	replace
3	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(globalLimit);  [CE]  cannot  find  symbol  globalLimit  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(globalLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(globalLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    java.util.ArrayList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol  globalLimit	64	None	replace
4	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  null  :  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());	  return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)	25	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null)?  null  :  chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	return(chromosomes  ==  null)?  null  :  chromosomes.iterator();	  return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    	compilable	  [FE]  AssertionError  	25	1	replace
6	[BUG]  [BUGGY]  return(chromosomes  ==  null)?  null  :  chromosomes.iterator();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null)?  null  :  chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(chromosomes  ==  null)?  null  :  chromosomes.iterator();	  return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    	compilable	  [FE]  AssertionError  	25	1	replace
7	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  populationLimit);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    populations);    	non-compiled	[CE]  '.class'  expected	63	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  populations);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  populations);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  populations);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    populations);    	non-compiled	[CE]  '.class'  expected	63	None	replace
9	[BUG]  [BUGGY]  chromosomes.add(iterator(),  populationLimit);  [CE]  no  suitable  method  found  for  add(Iterator<Chromosome>,int)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(iterator(),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(iterator(),  populationLimit);	  chromosomes.add(iterator());    	non-compiled	[CE]  no  suitable  method  found  for  add(Iterator<Chromosome>,int)	42	None	replace
10	[BUG]  [BUGGY]  chromosomes.add(populationLimit,  iterator());  [CE]  no  suitable  method  found  for  add(int,Iterator<Chromosome>)  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(populationLimit,  iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(populationLimit,  iterator());	  chromosomes.add(iterator());    	non-compiled	[CE]  no  suitable  method  found  for  add(int,Iterator<Chromosome>)	42	None	replace
11	[BUG]  [BUGGY]  chromosomes.add(globalIterator());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(globalIterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(globalIterator());	  chromosomes.add(iterator());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
12	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(globalLimit);  [CE]  cannot  find  symbol  globalLimit  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(globalLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(globalLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(globalLimit);    	non-compiled	[CE]  cannot  find  symbol  globalLimit	9	None	replace
13	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(globalLimit,  populationLimit);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(globalLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(globalLimit,  populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(globalLimit);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(globalLimit);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(globalLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(globalLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(globalLimit);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
15	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
16	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(chromosomes.iterator());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(chromosomes.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(chromosomes.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes,  populationLimit.iterator());  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes,  populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes,  populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.super.iterator();  [CE]  '('  expected  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.super.iterator();	  Iterator    <    Chromosome>    chromosomes    =(List    <    Chromosome>)super.iterator();    	non-compiled	[CE]  '('  expected	3	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Chromosome>  super  =(List  <  Chromosome>)super.iterator();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  super  =(List  <  Chromosome>)super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  super  =(List  <  Chromosome>)super.iterator();	  Iterator    <    Chromosome>    chromosomes    =(List    <    Chromosome>)super.iterator();    	non-compiled	[CE]  not  a  statement	3	None	replace
20	[BUG]  [BUGGY]  Iterator  <  Chromosome>  super  =(List  <  Chromosome>)this.super.iterator();  [CE]  not  a  statement  [FE]                        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  super  =(List  <  Chromosome>)this.super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  super  =(List  <  Chromosome>)this.super.iterator();	  Iterator    <    Chromosome>    chromosomes    =(List    <    Chromosome>)super.iterator();    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Collections.newArrayList();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Collections.newArrayList();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Collections.newArrayList();	  List    <    Chromosome>    chromosomes    =    Lists.newLinkedHashSet();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
22	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iter    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	80	None	replace
23	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iter    =    this.chromosomes.iterator();    	non-compiled	[CE]  unreachable  statement	80	None	replace
24	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iter    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	80	None	replace
25	[BUG]  [BUGGY]  Ilerator  <  Chromosome>  iter  =  this.chromosomes.iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Ilerator  <  Chromosome>  iter  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Ilerator  <  Chromosome>  iter  =  this.chromosomes.iterator();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iter    =    this.chromosomes.iterator();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
26	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	85	None	replace
27	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit,  populationLimit);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	85	None	replace
28	[BUG]  [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);  [CE]  cannot  find  symbol  Lists  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes  =  Lists.newArrayListWithCapacity(populationLimit  +  1);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	85	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	return(this.chromosomes  ==  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	compilable	  [FE]  AssertionError  	71	1	replace
30	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	compilable	  [FE]  AssertionError  	71	1	replace
31	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  this.chromosomes.iterator  :  this.chromosomes.iterator();  [CE]  cannot  find  symbol  iterator  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  this.chromosomes.iterator  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  this.chromosomes.iterator  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	71	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	return(this.chromosomes!=  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	compilable	  [FE]  AssertionError  	71	1	replace
33	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=  null)?  this.chromosomes.iterator()  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	compilable	  [FE]  AssertionError  	71	1	replace
34	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    numberLimit);    	non-compiled	[CE]  '.class'  expected	62	None	replace
35	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit.iterator());  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(this.populationLimit.iterator());    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(this.populationLimit.iterator());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(this.populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(this.populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(this.populationLimit.iterator());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populationLimit,  this.populationLimit.iterator());  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populationLimit,  this.populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populationLimit,  this.populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(this.populationLimit.iterator());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
38	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedHashSet();  [CE]  cannot  find  symbol  Lists  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedHashSet();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedHashSet();	  Iterator    <    Chromosome>    chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol  Lists	39	None	replace
39	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit,  populationLimit);	  List    <    Chromosome>    chromosomes    =    Lists.newLinkedList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	54	None	replace
40	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit  +  1);  [CE]  cannot  find  symbol  Lists  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit  +  1);	  List    <    Chromosome>    chromosomes    =    Lists.newLinkedList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	54	None	replace
41	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  iterator();  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  iterator();	  Iterator    <    Chromosome>    chromosomes    =    populationLimit.iterator();    	non-compiled	[CE]  missing  return  statement	81	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  super.iterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  super.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populationLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
43	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes.clear();  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes.clear();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes.clear();  }	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes.clear();    	non-compiled	[CE]  ';'  expected	77	None	replace
44	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes.clear();    	non-compiled	[CE]  incompatible  types	77	None	replace
45	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedHashSet  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedHashSet  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedHashSet  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes.clear();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
46	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.chromosomes.iterator();  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.chromosomes.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.chromosomes.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.chromosomes.iterator();    	non-compiled	[CE]  incompatible  types	73	None	replace
47	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.chromosomes.iterator();  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.chromosomes.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.chromosomes.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	73	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.chromosomes.values().iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.chromosomes.values().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.chromosomes.values().iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.chromosomes.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	73	None	replace
49	[BUG]  [BUGGY]  return(chromosomes  ==  null)?  new  ArrayList  <  Chromosome>()  :  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null)?  new  ArrayList  <  Chromosome>()  :  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(chromosomes  ==  null)?  new  ArrayList  <  Chromosome>()  :  new  ArrayList  <  Chromosome>();	  return(this.chromosomes    ==    null)?    new    ArrayList    <    Chromosome>()    :    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	72	None	replace
50	[BUG]  [BUGGY]  return(chromosomes  ==  null)?  new  LinkedList  <  Chromosome>()  :  new  LinkedList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null)?  new  LinkedList  <  Chromosome>()  :  new  LinkedList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(chromosomes  ==  null)?  new  LinkedList  <  Chromosome>()  :  new  LinkedList  <  Chromosome>();	  return(this.chromosomes    ==    null)?    new    ArrayList    <    Chromosome>()    :    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
51	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  new  LinkedList  <  Chromosome>()  :  new  LinkedList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  new  LinkedList  <  Chromosome>()  :  new  LinkedList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  new  LinkedList  <  Chromosome>()  :  new  LinkedList  <  Chromosome>();	  return(this.chromosomes    ==    null)?    new    ArrayList    <    Chromosome>()    :    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
52	[BUG]  [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit,  populationLimit));  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit,  populationLimit));  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  ChromosomeIterator(populationLimit,  populationLimit));	  chromosomes.add(new    ChromosomeIterator(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
53	[BUG]  [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  populationLimit);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  ChromosomeIterator(populationLimit),  populationLimit);	  chromosomes.add(new    ChromosomeIterator(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
54	[BUG]  [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  this);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  this);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  ChromosomeIterator(populationLimit),  this);	  chromosomes.add(new    ChromosomeIterator(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
55	[BUG]  [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  populator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  populator);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  ChromosomeIterator(populationLimit),  populator);	  chromosomes.add(new    ChromosomeIterator(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.chromosomes.iterator();  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.chromosomes.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.chromosomes.iterator();	  Iterator    <    Chromosome>    chromosomes    =    list.iterator();    	non-compiled	[CE]  missing  return  statement	57	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.cloneList.iterator();  [CE]  cannot  find  symbol  cloneList  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.cloneList.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.cloneList.iterator();	  Iterator    <    Chromosome>    chromosomes    =    list.iterator();    	non-compiled	[CE]  cannot  find  symbol  cloneList	57	None	replace
58	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationList.iterator();  [CE]  cannot  find  symbol  populationList  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationList.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populationList.iterator();	  Iterator    <    Chromosome>    chromosomes    =    list.iterator();    	non-compiled	[CE]  cannot  find  symbol  populationList	57	None	replace
59	[BUG]  [BUGGY]  return(chromosomes  ==  null)?  Collections.emptyList()  :  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null)?  Collections.emptyList()  :  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(chromosomes  ==  null)?  Collections.emptyList()  :  new  ArrayList  <  Chromosome>();	  return(this.chromosomes    ==    null)?    Collections.emptyList()    :    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	55	None	replace
60	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  Chromosome>();	  return(this.chromosomes    ==    null)?    Collections.emptyList()    :    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	55	None	replace
61	[BUG]  [BUGGY]  return(chromosomes  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(chromosomes  ==  null)?  Collections.EMPTY_LIST  :  new  ArrayList  <  Chromosome>();	  return(this.chromosomes    ==    null)?    Collections.emptyList()    :    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	55	None	replace
62	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	31	None	replace
63	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayHashMap  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayHashMap  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayHashMap  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
64	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  TreeMap  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  TreeMap  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  TreeMap  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
65	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	69	None	replace
66	[BUG]  [BUGGY]  chromosomes.add(iterator);  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [CE]  cannot  find  symbol  iterator  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(iterator);  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(iterator);  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol  iterator	69	None	replace
67	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
68	[BUG]  [BUGGY]  list.clear();  List  <  Chromosome>  chromosomes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  list  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  list.clear();  List  <  Chromosome>  chromosomes  =  Lists.newArrayList();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	list.clear();  List  <  Chromosome>  chromosomes  =  Lists.newArrayList();	          chromosomes.clear();    List    <    Chromosome>    chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  list	30	None	replace
69	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(populationLimit);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(populationLimit);	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>(populationLimit);    	non-compiled	[CE]  incompatible  types	32	None	replace
70	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedHashMap  <  Chromosome>(populationLimit,  populationLimit);	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
71	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayHashMap  <  Chromosome>(populationLimit);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayHashMap  <  Chromosome>(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  ArrayHashMap  <  Chromosome>(populationLimit);	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
72	[BUG]  [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.size());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.size());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  TreeSet  <  Chromosome>(chromosomes.size());	  return    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
73	[BUG]  [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  LinkedList  <  Chromosome>(chromosomes.size(),  populationLimit);	  return    new    LinkedList    <    Chromosome>(chromosomes.size());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
74	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit  +  1);  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit  +  1);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit    +    1);    	non-compiled	[CE]  incompatible  types	61	None	replace
75	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit  +  1);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit    +    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
76	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit  +  2);  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit  +  2);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit  +  2);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit    +    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
77	[BUG]  [BUGGY]  null.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  [CE]  <null>  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  null.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	null.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    NumberInput.parse(populationLimit);    	non-compiled	[CE]  <null>  cannot  be  dereferenced	74	None	replace
78	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getCurrentPopulation().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getCurrentPopulation().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getCurrentPopulation().iterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulations().iterator();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
79	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getStandardPopulations().iterator();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getStandardPopulations().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getStandardPopulations().iterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulations().iterator();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
80	[BUG]  [BUGGY]  chromosomes.add(populationLimit,  this);  [CE]  no  suitable  method  found  for  add(int,ListPopulation)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(populationLimit,  this);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(populationLimit,  this);	  chromosomes.add(numberLimit,    this);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,ListPopulation)	65	None	replace
81	[BUG]  [BUGGY]  chromosomes.add(this.populationLimit,  this);  [CE]  no  suitable  method  found  for  add(int,ListPopulation)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this.populationLimit,  this);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this.populationLimit,  this);	  chromosomes.add(numberLimit,    this);    	non-compiled	[CE]  no  suitable  method  found  for  add(int,ListPopulation)	65	None	replace
82	[BUG]  [BUGGY]  chromosomes.add(numberLimit,  null);  [CE]  cannot  find  symbol  numberLimit  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(numberLimit,  null);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(numberLimit,  null);	  chromosomes.add(numberLimit,    this);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	65	None	replace
83	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit  +  1);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit  +  1);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	13	None	replace
84	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit,  populationLimit);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	13	None	replace
85	[BUG]  [BUGGY]  return  chromosomes.iterator(populationLimit,  populationLimit);  [CE]  no  suitable  method  found  for  iterator(int,int)  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(populationLimit,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(populationLimit,  populationLimit);	  return    chromosomes.iterator(populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int,int)	47	None	replace
86	[BUG]  [BUGGY]  return  chromosomes.iterator(this.populationLimit);  [CE]  no  suitable  method  found  for  iterator(int)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(this.populationLimit);	  return    chromosomes.iterator(populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int)	47	None	replace
87	[BUG]  [BUGGY]  return  chromosomes.iterator(populationLimit,  false);  [CE]  no  suitable  method  found  for  iterator(int,boolean)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(populationLimit,  false);	  return    chromosomes.iterator(populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int,boolean)	47	None	replace
88	[BUG]  [BUGGY]  return  chromosomes.iterator(populationLimit,  1);  [CE]  no  suitable  method  found  for  iterator(int,int)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(populationLimit,  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(populationLimit,  1);	  return    chromosomes.iterator(populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int,int)	47	None	replace
89	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  iterator);  [CE]  cannot  find  symbol  iterator  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  iterator);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  iterator);	  chromosomes.add(this,    populationLimit,    this);    	non-compiled	[CE]  cannot  find  symbol  iterator	43	None	replace
90	[BUG]  [BUGGY]  chromosomes.add(iterator,  populationLimit,  this);  [CE]  cannot  find  symbol  iterator  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(iterator,  populationLimit,  this);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(iterator,  populationLimit,  this);	  chromosomes.add(this,    populationLimit,    this);    	non-compiled	[CE]  cannot  find  symbol  iterator	43	None	replace
91	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  this,  iterator);  [CE]  cannot  find  symbol  iterator  [FE]                        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  this,  iterator);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  this,  iterator);	  chromosomes.add(this,    populationLimit,    this);    	non-compiled	[CE]  cannot  find  symbol  iterator	43	None	replace
92	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  Iterator.EMPTY);  [CE]  cannot  find  symbol  EMPTY  [FE]                          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  Iterator.EMPTY);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  Iterator.EMPTY);	  chromosomes.add(this,    populationLimit,    this);    	non-compiled	[CE]  cannot  find  symbol  EMPTY	43	None	replace
93	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit),  populationLimit);  [CE]  Chromosome  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit),  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit),  populationLimit);	  chromosomes.add(new    Chromosome(populationLimit));    	non-compiled	[CE]  Chromosome  is  abstract;  cannot  be  instantiated	59	None	replace
94	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  numberLimit));  [CE]  cannot  find  symbol  numberLimit  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  numberLimit));  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit,  numberLimit));	  chromosomes.add(new    Chromosome(populationLimit));    	non-compiled	[CE]  cannot  find  symbol  numberLimit	59	None	replace
95	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populationLimit);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit.iterator());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
97	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populate);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populate);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populate);	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
98	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populator);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populator);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  populator);	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
99	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)populationLimit.iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)populationLimit.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.populationLimit.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	56	None	replace
100	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimitters.iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimitters.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimitters.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.populationLimit.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	56	None	replace
101	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.populationLimit.iterator();  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.populationLimit.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.populationLimit.iterator();    	non-compiled	[CE]  int  cannot  be  dereferenced	56	None	replace
102	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  iterator);  [CE]  cannot  find  symbol  iterator  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  iterator);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  iterator);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  iterator	49	None	replace
103	[BUG]  [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	49	None	replace
104	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  false);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int,boolean)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  false);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int,boolean)	49	None	replace
105	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  1);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int,int)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  1);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int,int)	49	None	replace
106	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  iterator());  [CE]  no  suitable  constructor  found  for  ArrayList(List<Chromosome>,int,Iterator<Chromosome>)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  iterator());	  return    new    ArrayList    <    Chromosome>(chromosomes,    populationLimit.iterator());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(List<Chromosome>,int,Iterator<Chromosome>)	46	None	replace
107	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  iterator.iterator());  [CE]  cannot  find  symbol  iterator  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  iterator.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes,  iterator.iterator());	  return    new    ArrayList    <    Chromosome>(chromosomes,    populationLimit.iterator());    	non-compiled	[CE]  cannot  find  symbol  iterator	46	None	replace
108	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  list.iterator());  [CE]  cannot  find  symbol  list  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  list.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes,  list.iterator());	  return    new    ArrayList    <    Chromosome>(chromosomes,    populationLimit.iterator());    	non-compiled	[CE]  cannot  find  symbol  list	46	None	replace
109	[BUG]  [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  LinkedList  <  Chromosome>(chromosomes.size()  -  1);	  return    new    ArrayList    <    Chromosome>(chromosomes.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
110	[BUG]  [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.size()  -  1);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.size()  -  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  TreeSet  <  Chromosome>(chromosomes.size()  -  1);	  return    new    ArrayList    <    Chromosome>(chromosomes.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
111	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  numberCount);  [CE]  '.class'  expected  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  numberCount);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  int  numberCount);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    numberCount);    	non-compiled	[CE]  '.class'  expected	12	None	replace
112	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationsIterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationsIterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populationsIterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulationsIterator();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
113	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulationsIterator().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulationsIterator().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getPopulationsIterator().iterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulationsIterator();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
114	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulationsIterator(populationLimit);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulationsIterator(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getPopulationsIterator(populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    getPopulationsIterator();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
115	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(populationLimit  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(populationLimit  >  0)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	29	None	replace
116	[BUG]  [BUGGY]  if(populationLimit  ==  1)  {  chromosomes.clear();  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(populationLimit  ==  1)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(populationLimit  ==  1)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	29	None	replace
117	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(populationLimit  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(populationLimit  >  0)  {  chromosomes.clear();  chromosomes.clear();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	29	None	replace
118	[BUG]  [BUGGY]  chromosomes.add(iterator,  populationLimit);  [CE]  cannot  find  symbol  iterator  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(iterator,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(iterator,  populationLimit);	  chromosomes.add(this,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  iterator	40	None	replace
119	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  1);  [CE]  no  suitable  method  found  for  add(ListPopulation,int,int)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  1);	  chromosomes.add(this,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(ListPopulation,int,int)	40	None	replace
120	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  index);  [CE]  cannot  find  symbol  index  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  index);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  index);	  chromosomes.add(this,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  index	40	None	replace
121	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  (this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  [CE]  not  a  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  (this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    (this.chromosomes!=  null?  null  :  this.chromosomes.iterator());	  	non-compiled	[CE]  not  a  statement	26	None	add
122	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  (this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [CE]  not  a  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  (this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    (this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());	  	non-compiled	[CE]  not  a  statement	26	None	add
123	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [CE]  incompatible  types  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    if(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());	  	non-compiled	[CE]  incompatible  types	26	None	add
124	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [CE]  unreachable  statement  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();	  	non-compiled	[CE]  unreachable  statement	26	None	add
125	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  [CE]  incompatible  types  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    if(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());	  	non-compiled	[CE]  incompatible  types	26	None	add
126	[BUG]  [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	  ArrayList    <    Chromosome>    chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  missing  return  statement	14	None	replace
127	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  int  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    Collections.emptyList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  T  exist  so  that  List<T>  conforms  to  int	75	None	replace
128	[BUG]  [BUGGY]  null.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  null.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	null.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    Collections.emptyList();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	75	None	replace
129	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  (this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  (this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    (this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  not  a  statement	24	None	add
130	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    if(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
131	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  not  a  statement	24	None	add
132	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();	  	non-compiled	[CE]  unreachable  statement	24	None	add
133	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populations.iterator());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populations.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populations.iterator());	  Iterator    <    Chromosome>    chromosomes    =    this.populations.iterator();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
134	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populations.iterator());  [CE]  cannot  find  symbol  populations  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populations.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populations.iterator());	  Iterator    <    Chromosome>    chromosomes    =    this.populations.iterator();    	non-compiled	[CE]  cannot  find  symbol  populations	36	None	replace
135	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populations.size());  [CE]  cannot  find  symbol  populations  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populations.size());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(this.populations.size());	  Iterator    <    Chromosome>    chromosomes    =    this.populations.iterator();    	non-compiled	[CE]  cannot  find  symbol  populations	36	None	replace
136	[BUG]  [BUGGY]  chromosomes.add(populationLimit);  [CE]  no  suitable  method  found  for  add(int)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(populationLimit);	  chromosomes.add(iterator);    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	41	None	replace
137	[BUG]  [BUGGY]  chromosomes.add(this.populationLimit);  [CE]  no  suitable  method  found  for  add(int)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this.populationLimit);	  chromosomes.add(iterator);    	non-compiled	[CE]  no  suitable  method  found  for  add(int)	41	None	replace
138	[BUG]  [BUGGY]  chromosomes.add(numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(numberLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(numberLimit);	  chromosomes.add(iterator);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	41	None	replace
139	[BUG]  [BUGGY]  chromosomes.add(globalIterator);  [CE]  cannot  find  symbol  globalIterator  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(globalIterator);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(globalIterator);	  chromosomes.add(iterator);    	non-compiled	[CE]  cannot  find  symbol  globalIterator	41	None	replace
140	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit.iterator());  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit.iterator());    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
141	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  list.iterator());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  list.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  list.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit.iterator());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
142	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  int  populationLimit);  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  int  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  int  populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    populationLimit);    	non-compiled	[CE]  '.class'  expected	34	None	replace
143	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  false);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  false);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit,  false);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  AssertionError  	28	1	add
145	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  chromosomes.clear();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    chromosomes.clear();  chromosomes.clear();	  	compilable	  [FE]  AssertionError  	28	1	add
146	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  Lists.newArrayList();  chromosomes.clear();  [CE]  cannot  find  symbol  Lists  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  Lists.newArrayList();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    List  <  Chromosome>  chromosomes  =  Lists.newArrayList();  chromosomes.clear();	  	non-compiled	[CE]  cannot  find  symbol  Lists	28	None	add
147	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList();  chromosomes.clear();  [CE]  cannot  find  symbol  Lists  [FE]        AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    List  <  Chromosome>  chromosomes  =  Lists.newLinkedList();  chromosomes.clear();	  	non-compiled	[CE]  cannot  find  symbol  Lists	28	None	add
148	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  Chrosome  chromosomes.clear();  chromosomes.clear();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  Chrosome  chromosomes.clear();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    Chrosome  chromosomes.clear();  chromosomes.clear();	  	non-compiled	[CE]  ';'  expected	28	None	add
149	[BUG]  [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit);  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>,int)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	ArrayList  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit);	  return    new    ArrayList    <    Chromosome>(chromosomes.iterator(),    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>,int)	44	None	replace
150	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  false);  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>,int,boolean)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  false);	  return    new    ArrayList    <    Chromosome>(chromosomes.iterator(),    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>,int,boolean)	44	None	replace
151	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  iterator);  [CE]  cannot  find  symbol  iterator  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  iterator);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  iterator);	  return    new    ArrayList    <    Chromosome>(chromosomes.iterator(),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  iterator	44	None	replace
152	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  int);  [CE]  '.class'  expected  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  int);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  int);	  return    new    ArrayList    <    Chromosome>(chromosomes.iterator(),    populationLimit);    	non-compiled	[CE]  '.class'  expected	44	None	replace
153	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(numberLimit,  populationLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(numberLimit,  populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(numberLimit,  populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  numberLimit	10	None	replace
154	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  false);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int,boolean)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  false);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  false);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int,boolean)	10	None	replace
155	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  this.populationLimit.iterator();  [CE]  int  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  this.populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  this.populationLimit.iterator();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    this.populationLimit.iterator();    	non-compiled	[CE]  int  cannot  be  dereferenced	68	None	replace
156	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populationLimit).iterator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populationLimit).iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(this.populationLimit).iterator();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    this.populationLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
157	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  (this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [CE]  not  a  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  (this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    (this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  not  a  statement	22	None	add
158	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [CE]  illegal  start  of  expression  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    if(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
159	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  (this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  [CE]  not  a  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  (this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    (this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  not  a  statement	22	None	add
160	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [CE]  unreachable  statement  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();	  	non-compiled	[CE]  unreachable  statement	22	None	add
161	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationLimits.iterator();  [CE]  cannot  find  symbol  populationLimits  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationLimits.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populationLimits.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populations.iterator();    	non-compiled	[CE]  cannot  find  symbol  populationLimits	82	None	replace
162	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  populationLimit,  false));  [CE]  Chromosome  is  abstract;  cannot  be  instantiated  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  populationLimit,  false));  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit,  populationLimit,  false));	  chromosomes.add(new    Chromosome(populationLimit,    populationLimit));    	non-compiled	[CE]  Chromosome  is  abstract;  cannot  be  instantiated	15	None	replace
163	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  populationLimit),  this);  [CE]  Chromosome  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  populationLimit),  this);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit,  populationLimit),  this);	  chromosomes.add(new    Chromosome(populationLimit,    populationLimit));    	non-compiled	[CE]  Chromosome  is  abstract;  cannot  be  instantiated	15	None	replace
164	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  populationLimit,  iterator));  [CE]  cannot  find  symbol  iterator  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  populationLimit,  iterator));  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit,  populationLimit,  iterator));	  chromosomes.add(new    Chromosome(populationLimit,    populationLimit));    	non-compiled	[CE]  cannot  find  symbol  iterator	15	None	replace
165	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	return(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());	  return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    	compilable	  [FE]  AssertionError  	27	1	replace
166	[BUG]  [BUGGY]  return(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [FE]  AssertionError  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator());	  return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    	compilable	  [FE]  AssertionError  	27	1	replace
167	[BUG]  [BUGGY]  null.clear();  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  [CE]  <null>  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  null.clear();  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	null.clear();  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    new    HashMap    <    Chromosome>();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	76	None	replace
168	[BUG]  [BUGGY]  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    new    HashMap    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
169	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationStructure.iterator();  [CE]  cannot  find  symbol  populationStructure  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationStructure.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populationStructure.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populateLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol  populationStructure	83	None	replace
170	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationCount.iterator();  [CE]  cannot  find  symbol  populationCount  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationCount.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populationCount.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populateLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol  populationCount	83	None	replace
171	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationStart.iterator();  [CE]  cannot  find  symbol  populationStart  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populationStart.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populationStart.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populateLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol  populationStart	83	None	replace
172	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.values());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.values());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes.values());	  return    new    ArrayList    <    Chromosome>(chromosomes.values());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
173	[BUG]  [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.values());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.values());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  LinkedList  <  Chromosome>(chromosomes.values());	  return    new    ArrayList    <    Chromosome>(chromosomes.values());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
174	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.iterator());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)	21	None	replace
175	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.iterator());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)	21	None	replace
176	[BUG]  [BUGGY]  Ilerator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Ilerator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Ilerator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
177	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.iterator());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)	21	None	replace
178	[BUG]  [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.iterator());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  TreeSet  <  Chromosome>(chromosomes.iterator());	  return    new    LinkedList    <    Chromosome>(chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
179	[BUG]  [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.values().iterator());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  LinkedList  <  Chromosome>(chromosomes.values().iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  LinkedList  <  Chromosome>(chromosomes.values().iterator());	  return    new    LinkedList    <    Chromosome>(chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
180	[BUG]  [BUGGY]  chromosomes.remove(populationLimit  +  1);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.remove(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.remove(populationLimit  +  1);	  chromosomes.remove(populationLimit);    	non-compiled	[CE]  missing  return  statement	16	None	replace
181	[BUG]  [BUGGY]  chromosomes.remove(populationLimit  -  1);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.remove(populationLimit  -  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.remove(populationLimit  -  1);	  chromosomes.remove(populationLimit);    	non-compiled	[CE]  missing  return  statement	16	None	replace
182	[BUG]  [BUGGY]  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    it    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	18	None	replace
183	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    it    =    this.chromosomes.iterator();    	non-compiled	[CE]  unreachable  statement	18	None	replace
184	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    it    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	18	None	replace
185	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    it    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	18	None	replace
186	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.data.iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.data.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.data.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.super.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	1	None	replace
187	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.size());    	non-compiled	[CE]  incompatible  types	20	None	replace
188	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.size());    	non-compiled	[CE]  incompatible  types	20	None	replace
189	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>(this.chromosomes.size());  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>(this.chromosomes.size());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>(this.chromosomes.size());	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.size());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
190	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
191	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
192	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  Lists  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedList();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedList();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	67	None	replace
193	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  missing  return  statement  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	  List    <    Chromosome>    chromosomes    =    Lists.newHashSet();    	non-compiled	[CE]  missing  return  statement	53	None	replace
194	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    this.chromosomes.iterator();    	non-compiled	[CE]  unreachable  statement	17	None	replace
195	[BUG]  [BUGGY]  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	17	None	replace
196	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	17	None	replace
197	[BUG]  [BUGGY]  this.chromosomes.clear();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  this.chromosomes.clear();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	this.chromosomes.clear();	  return    this.chromosomes.iterator();    this.chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	79	None	replace
198	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  this.chromosomes.clear();  }  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  this.chromosomes.clear();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  this.chromosomes.clear();  }	  return    this.chromosomes.iterator();    this.chromosomes.clear();    	non-compiled	[CE]  unreachable  statement	79	None	replace
199	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  this.chromosomes.clear();  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  this.chromosomes.clear();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  this.chromosomes.clear();  }	  return    this.chromosomes.iterator();    this.chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	79	None	replace
200	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  chromosomes.clear();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  chromosomes.clear();  }	  return    this.chromosomes.iterator();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	19	None	replace
201	[BUG]  [BUGGY]  return  this.chromosomes.iterator(1);  [CE]  no  suitable  method  found  for  iterator(int)  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  this.chromosomes.iterator(1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  this.chromosomes.iterator(1);	  return    chromosomes.iterator(1);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int)	78	None	replace
202	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.super.iterator();  [CE]  '('  expected  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)this.super.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Iterator    <    Chromosome>)super.iterator();    	non-compiled	[CE]  '('  expected	2	None	replace
203	[BUG]  [BUGGY]  Iterator  <  Chromosome>  super  =(Iterator  <  Chromosome>)super.iterator();  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  super  =(Iterator  <  Chromosome>)super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  super  =(Iterator  <  Chromosome>)super.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Iterator    <    Chromosome>)super.iterator();    	non-compiled	[CE]  not  a  statement	2	None	replace
204	[BUG]  [BUGGY]  Iterator  <  Chromosome>  super  =(Iterator  <  Chromosome>)this.super.iterator();  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  super  =(Iterator  <  Chromosome>)this.super.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  super  =(Iterator  <  Chromosome>)this.super.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Iterator    <    Chromosome>)super.iterator();    	non-compiled	[CE]  not  a  statement	2	None	replace
205	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  iterator.cloneTree().iterator();  [CE]  cannot  find  symbol  iterator  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  iterator.cloneTree().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  iterator.cloneTree().iterator();	  Iterator    <    Chromosome>    chromosomes    =    iterator.populationLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol  iterator	4	None	replace
206	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)super.clone();  [CE]  incompatible  types  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)super.clone();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)super.clone();	  Iterator    <    Chromosome>    chromosomes    =(List    <    Chromosome>)super.iterator();    	non-compiled	[CE]  incompatible  types	3	None	replace
207	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.populationLimit.iterator();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(List  <  Chromosome>)this.populationLimit.iterator();	  Iterator    <    Chromosome>    chromosomes    =(List    <    Chromosome>)super.iterator();    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
208	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    Lists.newLinkedList();    	non-compiled	[CE]  cannot  find  symbol  Lists	39	None	replace
209	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  new  HashMap  <  Chromosome>();  }	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    new    HashMap    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
210	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  iterators.iterator();  [CE]  cannot  find  symbol  iterators  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  iterators.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  iterators.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populations.iterator();    	non-compiled	[CE]  cannot  find  symbol  iterators	82	None	replace
211	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)super.clone();  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)super.clone();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Iterator  <  Chromosome>)super.clone();	  Iterator    <    Chromosome>    chromosomes    =(Iterator    <    Chromosome>)super.iterator();    	non-compiled	[CE]  missing  return  statement	2	None	replace
212	[BUG]  [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    it    =    this.chromosomes.iterator();    	non-compiled	[CE]  unreachable  statement	18	None	replace
213	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populateLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populateLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    numberLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	62	None	replace
214	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.values().iterator();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.values().iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  null  :  this.chromosomes.values().iterator();	  return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
215	[BUG]  [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iter  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iter    =    this.chromosomes.iterator();    	non-compiled	[CE]  unreachable  statement	80	None	replace
216	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit-1);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit-1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newLinkedList(populationLimit-1);	  List    <    Chromosome>    chromosomes    =    Lists.newLinkedList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	54	None	replace
217	[BUG]  [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  this.chromosomes.iterator();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    this.chromosomes.iterator();    	non-compiled	[CE]  unreachable  statement	17	None	replace
218	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  reached  end  of  file  while  parsing  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    Collections.emptyList();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
219	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  }  [CE]  cannot  find  symbol  NumberInput  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  }	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    NumberInput.parse(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  NumberInput	74	None	replace
220	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	29	None	replace
221	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  false);  [CE]  no  suitable  method  found  for  add(ListPopulation,int,boolean)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  false);	  chromosomes.add(this,    populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  add(ListPopulation,int,boolean)	40	None	replace
222	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit-1);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit-1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newArrayListWithCapacity(populationLimit-1);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayListWithCapacity(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	85	None	replace
223	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.values());  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.values());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(chromosomes.values());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(chromosomes.iterator());    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
224	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  List  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }  [CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  List  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  List  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.iterator());  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.iterator());    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Iterator<Chromosome>)	21	None	replace
225	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  this.populationLimit  :  this.chromosomes.iterator();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  this.populationLimit  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  this.populationLimit  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	non-compiled	[CE]  incompatible  types	71	None	replace
226	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  0  :  this.chromosomes.iterator();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  0  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  0  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	non-compiled	[CE]  incompatible  types	71	None	replace
227	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  this.populationList.iterator  :  this.chromosomes.iterator();  [CE]  cannot  find  symbol  populationList  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  this.populationList.iterator  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  this.populationList.iterator  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	non-compiled	[CE]  cannot  find  symbol  populationList	71	None	replace
228	[BUG]  [BUGGY]  return  iterator.chromosomes.iterator();  [CE]  package  iterator  does  not  exist  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  iterator.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  iterator.chromosomes.iterator();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  package  iterator  does  not  exist	70	None	replace
229	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.globalList.iterator();  [CE]  cannot  find  symbol  globalList  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.globalList.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.globalList.iterator();	  Iterator    <    Chromosome>    chromosomes    =    list.iterator();    	non-compiled	[CE]  cannot  find  symbol  globalList	57	None	replace
230	[BUG]  [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  ArrayList  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	ArrayList  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit);	  ArrayList    <    Chromosome>    chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	14	None	replace
231	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes!=  null?  null  :  this.chromosomes.iterator())  {  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  }  [CE]  incompatible  types  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes!=  null?  null  :  this.chromosomes.iterator())  {  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    if(this.chromosomes!=  null?  null  :  this.chromosomes.iterator())  {  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  }	  	non-compiled	[CE]  incompatible  types	26	None	add
232	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  Iterator  <  Chromosome>  iterator  =(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  Iterator  <  Chromosome>  iterator  =(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    Iterator  <  Chromosome>  iterator  =(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());	  	non-compiled	[CE]  unreachable  statement	26	None	add
233	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator())  {  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  }  [CE]  incompatible  types  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  if(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator())  {  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    if(this.chromosomes  ==  null?  null  :  this.chromosomes.iterator())  {  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  }	  	non-compiled	[CE]  incompatible  types	26	None	add
234	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes.clear();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes.clear();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes.clear();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes.clear();    	non-compiled	[CE]  ';'  expected	77	None	replace
235	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.size());    	non-compiled	[CE]  incompatible  types	20	None	replace
236	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  else  {  List  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chrom  [CE]  >  expected  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  else  {  List  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chrom  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>(this.chromosomes.size());  }  else  {  List  <  Chromosome>  populationLimit  =  new  ArrayList  <  Chrom	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>(this.chromosomes.size());    	non-compiled	[CE]  >  expected	20	None	replace
237	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>();  chromosomes.clear();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>();  chromosomes.clear();	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
238	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	                chromosomes.clear();        chromosomes.clear();    List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();	  	compilable	  [FE]  AssertionError  	28	1	add
239	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();	  	compilable	  [FE]  AssertionError  	28	1	add
240	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>();	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
241	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  null);  [CE]  no  suitable  method  found  for  add(ListPopulation,int,<null>)  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  null);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  null);	  chromosomes.add(this,    populationLimit,    this);    	non-compiled	[CE]  no  suitable  method  found  for  add(ListPopulation,int,<null>)	43	None	replace
242	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  1000);  [CE]  no  suitable  method  found  for  add(ListPopulation,int,int)  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  1000);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  1000);	  chromosomes.add(this,    populationLimit,    this);    	non-compiled	[CE]  no  suitable  method  found  for  add(ListPopulation,int,int)	43	None	replace
243	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  this.populationLimit.iterator());  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  this.populationLimit.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes,  this.populationLimit.iterator());	  return    new    ArrayList    <    Chromosome>(chromosomes,    populationLimit.iterator());    	non-compiled	[CE]  int  cannot  be  dereferenced	46	None	replace
244	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.values(),  populationLimit);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.values(),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.values(),  populationLimit);	  return    new    ArrayList    <    Chromosome>(chromosomes.iterator(),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
245	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    if(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
246	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    Iterator  <  Chromosome>  iterator  =(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();	  	non-compiled	[CE]  unreachable  statement	22	None	add
247	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>(populationLimit  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>(populationLimit  +  1);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit    +    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
248	[BUG]  [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  iterator);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  ChromosomeIterator(populationLimit),  iterator);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  ChromosomeIterator(populationLimit),  iterator);	  chromosomes.add(new    ChromosomeIterator(populationLimit));    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
249	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(populationLimit);  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    java.util.ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	64	None	replace
250	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(1);  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(1);	  Iterator    <    Chromosome>    chromosomes    =    new    java.util.ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	64	None	replace
251	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedList  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
252	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimit.get();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimit.get();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimit.get();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.populationLimit.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	56	None	replace
253	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  chromosomes.clear();  }  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  chromosomes.clear();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  chromosomes.clear();  }	  return    this.chromosomes.iterator();    chromosomes.clear();    	non-compiled	[CE]  unreachable  statement	19	None	replace
254	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  }  else  {  List  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  }	  return    this.chromosomes.iterator();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	19	None	replace
255	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  index);  [CE]  cannot  find  symbol  index  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  index);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  index);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  index	49	None	replace
256	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  iteratorType);  [CE]  cannot  find  symbol  iteratorType  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  iteratorType);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  iteratorType);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  iteratorType	49	None	replace
257	[BUG]  [BUGGY]  return  chromosomes.iterator(2);  [CE]  no  suitable  method  found  for  iterator(int)  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(2);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(2);	  return    chromosomes.iterator(1);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int)	78	None	replace
258	[BUG]  [BUGGY]  chromosomes.add(this.populationLimit,  iterator());  [CE]  no  suitable  method  found  for  add(int,Iterator<Chromosome>)  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this.populationLimit,  iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this.populationLimit,  iterator());	  chromosomes.add(iterator());    	non-compiled	[CE]  no  suitable  method  found  for  add(int,Iterator<Chromosome>)	42	None	replace
259	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeList  <  Chromosome>();	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
260	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.keySet());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.keySet());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.keySet());	  return    new    ArrayList    <    Chromosome>(chromosomes.values());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
261	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getDeclaredPopulations().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getDeclaredPopulations().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getDeclaredPopulations().iterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulations().iterator();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
262	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulations().values().iterator();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulations().values().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getPopulations().values().iterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulations().iterator();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
263	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulations().enterator();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getPopulations().enterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getPopulations().enterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulations().iterator();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
264	[BUG]  [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  this.chromosomes.clear();  }  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  this.chromosomes.clear();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.populationLimit!=  populationLimit)  {  return  this.chromosomes.iterator();  this.chromosomes.clear();  }	  return    this.chromosomes.iterator();    this.chromosomes.clear();    	non-compiled	[CE]  unreachable  statement	79	None	replace
265	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  dataLimit));  [CE]  cannot  find  symbol  dataLimit  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit,  dataLimit));  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit,  dataLimit));	  chromosomes.add(new    Chromosome(populationLimit));    	non-compiled	[CE]  cannot  find  symbol  dataLimit	59	None	replace
266	[BUG]  [BUGGY]  return  new  java.util.ArrayList  <  Chromosome>(chromosomes.size());  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  java.util.ArrayList  <  Chromosome>(chromosomes.size());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  java.util.ArrayList  <  Chromosome>(chromosomes.size());	  return    new    ArrayList    <    Chromosome>(chromosomes.size()    -    1);    	non-compiled	[CE]  incompatible  types	50	None	replace
267	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit);  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit);	  Iterator    <    Chromosome>    chromosomes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	38	None	replace
268	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit-1);  [CE]  cannot  find  symbol  Lists  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit-1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newArrayList(populationLimit-1);	  List    <    Chromosome>    chromosomes    =    Lists.newArrayList(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  Lists	13	None	replace
269	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>(populationLimit.iterator());  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>(populationLimit.iterator());  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeMap  <  Chromosome>(populationLimit.iterator());	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit.iterator());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
270	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  null  :  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes    ==    null)?    null    :    this.chromosomes.iterator();    Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();	  	non-compiled	[CE]  incompatible  types	24	None	add
271	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  LinkedList  <  Chromosome>(populationLimit,  populationLimit  +  1);	  Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>(populationLimit,    populationLimit);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
272	[BUG]  [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedHashMap();  [CE]  cannot  find  symbol  Lists  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  List  <  Chromosome>  chromosomes  =  Lists.newLinkedHashMap();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	List  <  Chromosome>  chromosomes  =  Lists.newLinkedHashMap();	  List    <    Chromosome>    chromosomes    =    Lists.newLinkedHashSet();    	non-compiled	[CE]  cannot  find  symbol  Lists	52	None	replace
273	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  map.iterator();  [CE]  cannot  find  symbol  map  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  map.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  map.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populateLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol  map	83	None	replace
274	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populateLimits.iterator();  [CE]  cannot  find  symbol  populateLimits  [FE]                    AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  this.populateLimits.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  this.populateLimits.iterator();	  Iterator    <    Chromosome>    chromosomes    =    populateLimit.iterator();    	non-compiled	[CE]  cannot  find  symbol  populateLimits	83	None	replace
275	[BUG]  [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }  [CE]  illegal  start  of  expression  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  if(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    if(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
276	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  }  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)  {  return  this.chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  }	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    ArrayList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	69	None	replace
277	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  numberLimit);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  numberLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(populationLimit,  numberLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
278	[BUG]  [BUGGY]  chromosomes.clear();  iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
279	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  collection.populationLimit.iterator();  [CE]  package  collection  does  not  exist  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  collection.populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  collection.populationLimit.iterator();	          chromosomes.clear();    Iterator    <    Chromosome>    chromosomes    =    this.populationLimit.iterator();    	non-compiled	[CE]  package  collection  does  not  exist	68	None	replace
280	[BUG]  [BUGGY]  Iterator  <  Chromosome>  list  =  chromosomes.iterator();  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  list  =  chromosomes.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  list  =  chromosomes.iterator();	  Iterator    <    Chromosome>    chromosomes    =    list.iterator();    	non-compiled	[CE]  missing  return  statement	57	None	replace
281	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes  ==  null)  {  chromosomes.clear();  chromosomes.clear();  }	          chromosomes.clear();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	29	None	replace
282	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  else  {  Collections.sort(new  ArrayList  <  Chromosome>());  }  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  else  {  Collections.sort(new  ArrayList  <  Chromosome>());  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  }  else  {  Collections.sort(new  ArrayList  <  Chromosome>());  }	          chromosomes.clear();    chromosomes.clear();    	non-compiled	[CE]  missing  return  statement	29	None	replace
283	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  0);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int,int)  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  0);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  0);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int,int)	49	None	replace
284	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  this.history);  [CE]  cannot  find  symbol  history  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  this.history);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.size(),  populationLimit,  this.history);	  return    new    ArrayList    <    Chromosome>(chromosomes.size(),    populationLimit);    	non-compiled	[CE]  cannot  find  symbol  history	49	None	replace
285	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  mapper.populationLimit.iterator();  [CE]  package  mapper  does  not  exist  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  mapper.populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  mapper.populationLimit.iterator();	  Iterator    <    Chromosome>    chromosomes    =    iterator.populationLimit.iterator();    	non-compiled	[CE]  package  mapper  does  not  exist	4	None	replace
286	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  int);  [CE]  '.class'  expected  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  int);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit,  populationLimit,  int);	  Iterator    <    Chromosome>    chromosomes    =    new    ArrayList    <    Chromosome>(populationLimit,    populationLimit);    	non-compiled	[CE]  '.class'  expected	10	None	replace
287	[BUG]  [BUGGY]  return(this.chromosomes  ==  null)?  new  ArrayList  <  Chromosome>()  :  this.chromosomes.iterator();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes  ==  null)?  new  ArrayList  <  Chromosome>()  :  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes  ==  null)?  new  ArrayList  <  Chromosome>()  :  this.chromosomes.iterator();	  return(this.chromosomes    ==    null)?    iterator    :    this.chromosomes.iterator();    	non-compiled	[CE]  incompatible  types	71	None	replace
288	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  this.populationLimit.iterator());  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  this.populationLimit.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes,  populationLimit,  this.populationLimit.iterator());	  return    new    ArrayList    <    Chromosome>(chromosomes,    populationLimit.iterator());    	non-compiled	[CE]  int  cannot  be  dereferenced	46	None	replace
289	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(numberLimit);  [CE]  cannot  find  symbol  numberLimit  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(numberLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  java.util.ArrayList  <  Chromosome>(numberLimit);	  Iterator    <    Chromosome>    chromosomes    =    new    java.util.ArrayList    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol  numberLimit	64	None	replace
290	[BUG]  [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.values());  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  TreeSet  <  Chromosome>(chromosomes.values());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  TreeSet  <  Chromosome>(chromosomes.values());	  return    new    ArrayList    <    Chromosome>(chromosomes.values());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
291	[BUG]  [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  int  len);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  int  len);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  ArrayList  <  Chromosome>(chromosomes.iterator(),  populationLimit,  int  len);	  return    new    ArrayList    <    Chromosome>(chromosomes.iterator(),    populationLimit);    	non-compiled	[CE]  '.class'  expected	44	None	replace
292	[BUG]  [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(this.chromosomes!=  null?  null  :  this.chromosomes.iterator());  Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    Iterator  <  Chromosome>  it  =  this.chromosomes.iterator();	  	non-compiled	[CE]  unreachable  statement	26	None	add
293	[BUG]  [BUGGY]  Set  <  Chromosome>  chromosomes  =  Lists.newHashSet();  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Set  <  Chromosome>  chromosomes  =  Lists.newHashSet();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Set  <  Chromosome>  chromosomes  =  Lists.newHashSet();	  List    <    Chromosome>    chromosomes    =    Lists.newHashSet();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
294	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimit.values().iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimit.values().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)this.populationLimit.values().iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.populationLimit.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	56	None	replace
295	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)map.populationLimit.iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)map.populationLimit.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)map.populationLimit.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.populationLimit.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	56	None	replace
296	[BUG]  [BUGGY]  if(this.chromosomes!=  null)return  iterator();  if(this.populationLimit  ==  populationLimit)  {  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)return  iterator();  if(this.populationLimit  ==  populationLimit)  {  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)return  iterator();  if(this.populationLimit  ==  populationLimit)  {  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }	  return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	23	None	replace
297	[BUG]  [BUGGY]  if(this.chromosomes!=  null)return  this.chromosomes.iterator();  if(this.populationLimit  ==  populationLimit)  {  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }  [CE]  missing  return  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.chromosomes!=  null)return  this.chromosomes.iterator();  if(this.populationLimit  ==  populationLimit)  {  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.chromosomes!=  null)return  this.chromosomes.iterator();  if(this.populationLimit  ==  populationLimit)  {  return(this.chromosomes!=  null)?  null  :  this.chromosomes.iterator();  }	  return(this.chromosomes!=    null)?    null    :    this.chromosomes.iterator();    	non-compiled	[CE]  missing  return  statement	23	None	replace
298	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getCurrentPopulations().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getCurrentPopulations().iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getCurrentPopulations().iterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulations().iterator();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	return(chromosomes  ==  null?  null  :  this.chromosomes.iterator());	  return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    	compilable	  [FE]  AssertionError  	27	1	replace
300	[BUG]  [BUGGY]  return(chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [FE]  AssertionError  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return(chromosomes  ==  null?  null  :  this.chromosomes.iterator());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return(chromosomes  ==  null?  null  :  this.chromosomes.iterator());	  return(this.chromosomes!=    null?    null    :    this.chromosomes.iterator());    	compilable	  [FE]  AssertionError  	27	1	replace
301	[BUG]  [BUGGY]  return  chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator();  Iterator  <  Chromosome>  iterator  =  new  ArrayList  <  Chromosome>();	  return    this.chromosomes.iterator();    Iterator    <    Chromosome>    iterator    =    new    LinkedList    <    Chromosome>();    	non-compiled	[CE]  incompatible  types	70	None	replace
302	[BUG]  [BUGGY]  return  chromosomes.iterator(populationLimit,  populateLimit);  [CE]  cannot  find  symbol  populateLimit  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(populationLimit,  populateLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(populationLimit,  populateLimit);	  return    chromosomes.iterator(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  populateLimit	47	None	replace
303	[BUG]  [BUGGY]  return  chromosomes.iterator(populationLimit,  this.populationLimit);  [CE]  no  suitable  method  found  for  iterator(int,int)  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  chromosomes.iterator(populationLimit,  this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  chromosomes.iterator(populationLimit,  this.populationLimit);	  return    chromosomes.iterator(populationLimit);    	non-compiled	[CE]  no  suitable  method  found  for  iterator(int,int)	47	None	replace
304	[BUG]  [BUGGY]  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  [CE]  cannot  find  symbol  NumberInput  [FE]        AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    NumberInput.parse(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  NumberInput	74	None	replace
305	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  }  else  {  this.populationLimit  =  new  ArrayList  <  Chromosome>();  }  [CE]  cannot  find  symbol  NumberInput  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  }  else  {  this.populationLimit  =  new  ArrayList  <  Chromosome>();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(chromosomes!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  NumberInput.parse(populationLimit);  }  else  {  this.populationLimit  =  new  ArrayList  <  Chromosome>();  }	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    NumberInput.parse(populationLimit);    	non-compiled	[CE]  cannot  find  symbol  NumberInput	74	None	replace
306	[BUG]  [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedHashMap  <  Chromosome>(populationLimit  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedHashMap  <  Chromosome>(populationLimit  +  1);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.clear();  Iterator  <  Chromosome>  iterator  =  new  LinkedHashMap  <  Chromosome>(populationLimit  +  1);	          chromosomes.clear();    Iterator    <    Chromosome>    iterator    =    new    LinkedHashMap    <    Chromosome>(populationLimit);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
307	[BUG]  [BUGGY]  chromosomes.add(new  Chromosome(populationLimit),  this);  [CE]  Chromosome  is  abstract;  cannot  be  instantiated  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(new  Chromosome(populationLimit),  this);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(new  Chromosome(populationLimit),  this);	  chromosomes.add(new    Chromosome(populationLimit));    	non-compiled	[CE]  Chromosome  is  abstract;  cannot  be  instantiated	59	None	replace
308	[BUG]  [BUGGY]  chromosomes.add(iterator(),  populationsLimit);  [CE]  cannot  find  symbol  populationsLimit  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(iterator(),  populationsLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(iterator(),  populationsLimit);	  chromosomes.add(iterator());    	non-compiled	[CE]  cannot  find  symbol  populationsLimit	42	None	replace
309	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)super.chromosomes.iterator();  [CE]  type  Chromosome  does  not  take  parameters  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)super.chromosomes.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(Chromosome  <  Chromosome>)super.chromosomes.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.chromosomes.iterator();    	non-compiled	[CE]  type  Chromosome  does  not  take  parameters	73	None	replace
310	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(HashMap  <  Chromosome>)this.chromosomes.iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =(HashMap  <  Chromosome>)this.chromosomes.iterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =(HashMap  <  Chromosome>)this.chromosomes.iterator();	  Iterator    <    Chromosome>    chromosomes    =(Chromosome    <    Chromosome>)this.chromosomes.iterator();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
311	[BUG]  [BUGGY]  chromosomes.add(this,  populationLimit,  int);  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  chromosomes.add(this,  populationLimit,  int);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	chromosomes.add(this,  populationLimit,  int);	  chromosomes.add(this,    populationLimit);    	non-compiled	[CE]  '.class'  expected	40	None	replace
312	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(4);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(4);  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  new  TreeSet  <  Chromosome>(4);	  Iterator    <    Chromosome>    chromosomes    =    new    TreeSet    <    Chromosome>();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
313	[BUG]  [BUGGY]  return  new  HashSet  <  Chromosome>(chromosomes.size());  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  return  new  HashSet  <  Chromosome>(chromosomes.size());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	return  new  HashSet  <  Chromosome>(chromosomes.size());	  return    new    ArrayList    <    Chromosome>(chromosomes.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
314	[BUG]  [BUGGY]          chromosomes.clear();    chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]          chromosomes.clear();    chromosomes.clear();  Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	                chromosomes.clear();        chromosomes.clear();    Iterator  <  Chromosome>  chromosomes  =  new  ArrayList  <  Chromosome>();  chromosomes.clear();	  	non-compiled	[CE]  incompatible  types	28	None	add
315	[BUG]  [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getDeclaredPopulationsIterator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  Iterator  <  Chromosome>  chromosomes  =  getDeclaredPopulationsIterator();  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	Iterator  <  Chromosome>  chromosomes  =  getDeclaredPopulationsIterator();	  Iterator    <    Chromosome>    chromosomes    =    getPopulationsIterator();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
316	[BUG]  [BUGGY]  if(types!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  types  [FE]          AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(types!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(types!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  types	75	None	replace
317	[BUG]  [BUGGY]  if(this.populationLimit!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionError      [CONTEXT]      public  Iterator<Chromosome>  iterator()  {      [BUGGY]  if(this.populationLimit!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }  [BUGGY]      return  chromosomes.iterator();  }  [CLASS]  ListPopulation  [METHOD]  iterator  [RETURN_TYPE]  Iterator  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	if(this.populationLimit!=  null)  {  chromosomes.clear();  chromosomes.clear();  this.populationLimit  =  Collections.emptyList();  }	          chromosomes.clear();    chromosomes.clear();    this.populationLimit    =    Collections.emptyList();    	non-compiled	[CE]  incomparable  types:  int  and  <null>	75	None	replace
