bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }	  if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  2);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  2);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  2);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE;  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE;  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
6	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
7	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
10	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
11	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  numberLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  numberLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
12	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    <    =    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  ')'  expected	27	None	replace
13	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes	  if(chromosomes.size()    <    =    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  not  a  statement	27	None	replace
14	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    ==    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  ')'  expected	28	None	replace
15	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    This.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    This.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  This.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  This.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  This.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    This.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
18	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  2);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  2);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  2);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1,  false);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1,  false);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
21	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
22	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
23	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size(),  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size(),  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size(),  populationLimit,  false);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
24	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit,  false);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
25	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  numberLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  numberLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  numberLimit,  false);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
26	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
27	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  not  a  statement	52	None	replace
28	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  populationLimit)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  populationLimit)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  populationLimit)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  populationLimit)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
30	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  PopulationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  PopulationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  PopulationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
31	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
32	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size());  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size());  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size());  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	40	1	add
34	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	40	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	40	1	add
36	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	40	1	add
37	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	40	3	add
38	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	40	3	add
39	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [CE]  final  parameter  chromosomes  may  not  be  assigned  [FE]          AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    chromosomes  =  new  ArrayList  <  Chromosome>(chromosomes);  chromosomes.addAll(chromosomes);	  	non-compiled	[CE]  final  parameter  chromosomes  may  not  be  assigned	40	None	add
40	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  numberLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  numberLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
43	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
44	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
46	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
47	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  <  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
48	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
49	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  this.chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
50	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(this.populationLimit  <  =  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(this.populationLimit  <  =  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    this.populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
51	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  <  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    this.populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
52	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.populationSize)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.populationSize)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  this.populationSize)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    this.populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
53	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
54	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
55	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
56	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.removeAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
57	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
61	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
62	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
63	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
64	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.isEmpty())  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
65	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
66	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
67	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
68	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
69	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
70	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
71	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(populationLimit);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
72	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
73	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
74	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
75	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
76	[BUG]  [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  not  a  statement	79	None	replace
77	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >=  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >=    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
78	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >=    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
79	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit.  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit.  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit.	  if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
80	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
81	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
82	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
83	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  <  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
84	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  this.chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
85	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
89	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
90	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	45	None	replace
91	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
92	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(chromosomes.size()    <    =    0    ||    populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
93	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(chromosomes.size()  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	  if(chromosomes.size()    <    =    0    ||    populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
94	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
95	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
96	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
97	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
98	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
99	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
100	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]        java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
101	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
102	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]          java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
103	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
104	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]            java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
105	[BUG]  [BUGGY]  if(populationLimit  <  0  ||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0  ||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0  ||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
106	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
107	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
108	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
109	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    ==    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
110	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    ==    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
111	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    ==    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
112	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	76	None	replace
113	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.isEmpty())  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.isEmpty())  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	76	None	replace
114	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
115	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
116	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
117	[BUG]  [BUGGY]  this.chromosomes.addAll(this.populationLimit,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.addAll(this.populationLimit,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.addAll(this.populationLimit,  populationLimit);	  this.chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
118	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(populationLimit    <    =    0)    {    if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLi    	non-compiled	[CE]  ')'  expected	12	None	replace
119	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(populationLimit    <    =    0)    {    if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLi    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  if(!chromosomes.contains(populationLimit))  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.contains(populationLimit))  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.contains(populationLimit))  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(populationLimit    <    =    0)    {    if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLi    	non-compiled	[CE]  ')'  expected	12	None	replace
121	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(populationLimit    <    =    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
122	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(populationLimit    <    =    1)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
123	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
125	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
126	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
127	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	70	None	replace
128	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
129	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  true);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
130	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
131	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
132	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
133	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  false);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
134	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit,  populationLimit));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit  +  1));	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
136	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
137	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
138	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
139	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
140	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
141	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populateLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populateLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
142	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOS  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOS  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOS	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
143	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
144	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
145	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLi  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLi	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
146	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
147	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
148	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  numberLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
149	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
150	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  2);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  2);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  2);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
151	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
152	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
153	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  numberLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  numberLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  numberLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
154	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
155	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
156	[BUG]  [BUGGY]  this.chromosomes.add(populationLimit);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.add(populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.add(populationLimit);	  this.chromosomes.addAll(populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
157	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
158	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
159	[BUG]  [BUGGY]  this.chromosomes.add(chromosomes);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.add(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.add(chromosomes);	          this.chromosomes.addAll(chromosomes);    this.chromosomes.add(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
160	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.add(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
161	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POP	          this.chromosomes.addAll(chromosomes);    this.chromosomes.add(chromosomes);    	non-compiled	[CE]  ')'  expected	48	None	replace
162	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes  ==  null)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes!=    null)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
163	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  >=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  >=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  >=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes!=    null)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
164	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes!=    null)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
165	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  2);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  2);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  2);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
167	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  this.chromosomes.addAll(chromosomes);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  this.chromosomes.addAll(chromosomes);	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
168	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  else  {  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  else  {  this.chromosomes.addAll(chromosomes);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
169	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
170	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
171	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
172	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationsLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationsLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationsLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
173	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
175	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
176	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
177	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
179	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	38	1	add
181	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	  	compilable	  [FE]  AssertionError  	38	1	add
182	[BUG]  [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);	  lastPosition    =    NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
183	[BUG]  [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size());	  lastPosition    =    NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
184	[BUG]  [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  -  1);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  -  1);	  lastPosition    =    NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
185	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
186	[BUG]  [BUGGY]  this.chromosomes.add(this.populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.add(this.populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.add(this.populationLimit);	  this.chromosomes.addAll(this.populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationsLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationsLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationsLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
188	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  PopulationLimit.POPULATION_LIMIT_NOT_POSITIVE)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  PopulationLimit.POPULATION_LIMIT_NOT_POSITIVE)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  PopulationLimit.POPULATION_LIMIT_NOT_POSITIVE)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
189	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CH  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CH  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CH	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
190	[BUG]  [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  ==  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
191	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	40	3	add
192	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  chromosomes.addAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	40	3	add
193	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  chromosomes.addAll(chromosomes);  [CE]  no  suitable  method  found  for  add(List<Chromosome>)  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        chromosomes.addAll(chromosomes);    this.chromosomes.add(chromosomes);  chromosomes.addAll(chromosomes);	  	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>)	40	None	add
194	[BUG]  [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  ==  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	76	None	replace
195	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
196	[BUG]  [BUGGY]  if(populationLimit  <  =  0  &&  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  &&  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  &&  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
197	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
198	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
199	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
200	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
201	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
202	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
203	[BUG]  [BUGGY]  if(populationLimit  <  =  0  &&!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  &&!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  &&!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
204	[BUG]  [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.	  if(chromosomes.size()    <    =    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  <identifier>  expected	27	None	replace
205	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
206	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
207	[BUG]  [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  populationLimit);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION,  populationLimit);	  lastPosition    =    NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
208	[BUG]  [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER,  populationLimit);	  lastPosition    =    NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
209	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
210	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
211	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
212	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  return  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  return  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  return  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
213	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
214	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
215	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(populationLimit    <    =    0)    {    if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLi    	non-compiled	[CE]  ')'  expected	12	None	replace
216	[BUG]  [BUGGY]  if(!chromosomes.contains(populationLimit))  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.contains(populationLimit))  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.contains(populationLimit))  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(populationLimit    <    =    0)    {    if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLi    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
217	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
218	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
219	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
220	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
221	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
222	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_IMPLEMENTED,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
223	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
224	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
225	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
226	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
227	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
228	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(chromosomes);  }  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    if(chromosomes!=  null)  {  this.chromosomes  =  new  ArrayList  <  Chromosome>();  this.chromosomes.removeAll(chromosomes);  }	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
229	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationsLimit);  }	  if(populationLimit    <    1)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
230	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
231	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
232	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.get  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.get  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.get	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
233	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  ')'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  ')'  expected	43	None	replace
234	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  ')'  expected	43	None	replace
235	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
236	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
237	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size(),  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size(),  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populations.size(),  false);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
238	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    this.chromosomes.add(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
239	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
240	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
241	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
242	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
243	[BUG]  [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(this.chromosomes!=  null)  {  this.chromosomes.addAll(chromosomes);  chromosomes.addAll(chromosomes);  }	          this.chromosomes.addAll(chromosomes);    chromosomes.addAll(chromosomes);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
244	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes!=    null)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
245	[BUG]  [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes  ==  null)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes  ==  null)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes!=    null)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
246	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
247	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOS	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
248	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NO  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NO  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NO	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >=    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
249	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >=    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
250	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
251	[BUG]  [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
252	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
253	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
255	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes  =  new  ArrayList  <  Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
256	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
257	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);	  	compilable	  [FE]  AssertionError  	38	1	add
258	[BUG]  [BUGGY]  if(chromosomes.size()  >=  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >=  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >=  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0    ||    populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
259	[BUG]  [BUGGY]  if(chromosomes.size()  ==  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  ==  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  ==  0  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0    ||    populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
260	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
261	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
262	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
263	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
264	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
265	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
266	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
267	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
268	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  true);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
269	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
270	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CH  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CH  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  <  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CH	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
271	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOS  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOS  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOS	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
272	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
273	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
274	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
275	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  ')'  expected	21	None	replace
276	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	67	None	replace
277	[BUG]  [BUGGY]  if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes!=  null)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	67	None	replace
278	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	67	None	replace
279	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes    	non-compiled	[CE]  ')'  expected	67	None	replace
280	[BUG]  [BUGGY]  if(!chromosomes.contains(populationLimit)||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.contains(populationLimit)||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.contains(populationLimit)||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
281	[BUG]  [BUGGY]  if(!chromosomes.contains(populationLimit)||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.contains(populationLimit)||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.contains(populationLimit)||!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
282	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0  ||  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    this.populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
283	[BUG]  [BUGGY]  populationLimit  <  =  0  &&  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  populationLimit  <  =  0  &&  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	populationLimit  <  =  0  &&  populationLimit  >  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    this.populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
284	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
285	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit  +  1);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
286	[BUG]  [BUGGY]  if(populationLimit  <  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	45	None	replace
287	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit,  false);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populateLimit,  false);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
288	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
289	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
290	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit  ||  populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0    ||    populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
291	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit,  false);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
292	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
293	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_    	non-compiled	[CE]  ')'  expected	22	None	replace
294	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.populationLimit,  false);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  this.populationLimit,  false);  }	  if(chromosomes.size()    ==    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    chromosomes.    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
295	[BUG]  [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	this.chromosomes.addAll(new  ArrayList  <  Chromosome>(populationLimit),  populationLimit);	  this.chromosomes.addAll(new    ArrayList    <    Chromosome>(populationLimit));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
296	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
297	[BUG]  [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
298	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
299	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
300	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
301	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
302	[BUG]  [BUGGY]  This.chromosomes.addAll(chromosomes);  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  This.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	This.chromosomes.addAll(chromosomes);	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
303	[BUG]  [BUGGY]  each.chromosomes.addAll(chromosomes);  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  each.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	each.chromosomes.addAll(chromosomes);	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
304	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
305	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(chromosomes.size()  >=  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
306	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  ')'  expected	47	None	replace
307	[BUG]  [BUGGY]  if(this.populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(this.populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(this.populationLimit  <  =  0)  {  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
308	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  ')'  expected	21	None	replace
309	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  ')'  expected	21	None	replace
310	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_S    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
311	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
312	[BUG]  [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
313	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  >  numberLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  >  numberLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  >  numberLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
314	[BUG]  [BUGGY]  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLi	  if(populationLimit    <    =    0)    {    if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLi    	non-compiled	[CE]  ')'  expected	12	None	replace
315	[BUG]  [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  ==  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit,  false);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
316	[BUG]  [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	lastPosition  =  NumberIsTooLargeException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1,  populationLimit);	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
317	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
318	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
319	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  System.arraycopy(chromosomes,  0,  this.populationLimit,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  System.arraycopy(chromosomes,  0,  this.populationLimit,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  System.arraycopy(chromosomes,  0,  this.populationLimit,  populationLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
320	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  System.arraycopy(populationLimit,  0,  this.populationLimit,  populationLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
321	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
322	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.clear();  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
323	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.remove(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.remove(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
324	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.remove(chromosomes);  this.chromosomes.removeAll(chromosomes);  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  [FE]      java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);  this.chromosomes.remove(chromosomes);  this.chromosomes.removeAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.removeAll(chromosomes);    this.chromosomes.remove(chromosomes);  this.chromosomes.removeAll(chromosomes);	  	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  0  	42	3	add
325	[BUG]  [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  =  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(chromosomes.size()    <    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
326	[BUG]  [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  0  ||  populationLimit  >  chromosomes.size())  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    chromosomes.size())    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
327	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
328	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  this.chromosomes.addAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_	  if(chromosomes.size()    >    populationLimit)    {    this.chromosomes.addAll(chromosomes);    }    else    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	70	None	replace
329	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  numberIsTooLargeException);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  numberIsTooLargeException);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE  +  numberIsTooLargeException);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE    +    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
330	[BUG]  [BUGGY]  if(populationLimit  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
331	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    if(populationLimit  <  =  0)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.addAll(chromosomes);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
332	[BUG]  [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  this.chromosomes.addAll(chromosomes);  [CE]  no  suitable  method  found  for  add(List<Chromosome>)  [FE]      AssertionError    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]          this.chromosomes.addAll(chromosomes);    this.chromosomes.addAll(chromosomes);  this.chromosomes.add(chromosomes);  this.chromosomes.addAll(chromosomes);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	                this.chromosomes.addAll(chromosomes);        this.chromosomes.addAll(chromosomes);    this.chromosomes.add(chromosomes);  this.chromosomes.addAll(chromosomes);	  	non-compiled	[CE]  no  suitable  method  found  for  add(List<Chromosome>)	38	None	add
333	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populator);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populator);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populator);  }	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
334	[BUG]  [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
335	[BUG]  [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  1)  {  throw  new  NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit  +  1);  }	  if(populationLimit    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.NUMBER_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
336	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION    	non-compiled	[CE]  ')'  expected	18	None	replace
337	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
338	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  if(!chromosomes.contains(populationLimit))  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationL	  if(!chromosomes.contains(populationLimit))    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
339	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE);  }	  if(chromosomes.size()    <    =    0)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
340	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES  [CE]  ')'  expected  [FE]    java.lang.IndexOutOfBoundsException:  Index:  0    [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  this.chromosomes.addAll(chromosomes);  this.chromosomes.removeAll(chromosomes);  }  else  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES	          this.chromosomes.addAll(chromosomes);    this.chromosomes.removeAll(chromosomes);    	non-compiled	[CE]  ')'  expected	43	None	replace
341	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit,  false);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit,  false);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationsLimit,  false);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
342	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROOSOMES_BIGGER_THAN_POPULATION_SIZE);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROOSOMES_BIGGER_THAN_POPULATION_SIZE);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
343	[BUG]  [BUGGY]  if(!chromosomes.isEmpty())  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(!chromosomes.isEmpty())  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(!chromosomes.isEmpty())  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(chromosomes.size()    <    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
344	[BUG]  [BUGGY]  if(populationLimit  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  >  0)  {  throw  new  NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  }	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
345	[BUG]  [BUGGY]  MutableFormat.log(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  MutableFormat.log(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	MutableFormat.log(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  populationLimit);	  if(populationLimit    <    0)    {    throw    new    NotPositiveException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
346	[BUG]  [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	45	None	replace
347	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN	  if(populationLimit    <    =    0)    {    if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN    	non-compiled	[CE]  ')'  expected	45	None	replace
348	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
349	[BUG]  [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  populationLimit)  {  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_	  if(chromosomes.size()    >    populationLimit)    {    if(populationLimit    <    =    0)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
350	[BUG]  [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >=  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0  ||  populationLimit  >=  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  [BUGGY]        [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0  ||  populationLimit  >=  this.populationLimit)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }	  if(populationLimit    <    =    0    ||    populationLimit    >    this.populationLimit)    {    throw    new    NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,    populationLimit);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
351	[BUG]  [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(chromosomes.size()  <  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  ')'  expected	76	None	replace
352	[BUG]  [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (populationLimit  <=  0)  {  throw  new  NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE,  populationLimit);  }  if  (chromosomes.size()  >  populationLimit)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE,  chromosomes.size(),  populationLimit,  false);  }  this.populationLimit  =  populationLimit;  this.chromosomes  =  new  ArrayList<Chromosome>(populationLimit);  this.chromosomes.addAll(chromosomes);      [BUGGY]  if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL  [BUGGY]      }  [CLASS]  ListPopulation  [METHOD]  <init>  [RETURN_TYPE]  List,int)  Chromosome>  chromosomes  final  int  populationLimit  [VARIABLES]  List  chromosomes  int  populationLimit  boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	if(populationLimit  <  =  0)  {  throw  new  NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL	  if(chromosomes.size()    >    populationLimit)    {    throw    new    NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPUL    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
