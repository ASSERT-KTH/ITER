bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return chromosomes.iterator(); [FE] AssertionError testIterator [CONTEXT] public Iterator<Chromosome> iterator() { [BUGGY] return chromosomes.iterator(); [BUGGY] } [CLASS] ListPopulation [METHOD] iterator [RETURN_TYPE] Iterator  [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	replace	
2	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] public Iterator<Chromosome> iterator() { [BUGGY] [BUGGY] return chromosomes.iterator(); } [CLASS] ListPopulation [METHOD] iterator [RETURN_TYPE] Iterator  [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	1.0	209	209	1	add	
3	[BUG] [BUGGY] this.chromosomes.addAll(chromosomeColl); [FE] AssertionError testIterator [CONTEXT] public void addChromosomes(final Collection<Chromosome> chromosomeColl) { if (chromosomes.size() + chromosomeColl.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } [BUGGY] this.chromosomes.addAll(chromosomeColl); [BUGGY] } [CLASS] ListPopulation [METHOD] addChromosomes [RETURN_TYPE] void  Chromosome> chromosomeColl [VARIABLES] Collection chromosomeColl List chromosomes boolean int populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	replace	
4	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] public void addChromosomes(final Collection<Chromosome> chromosomeColl) { if (chromosomes.size() + chromosomeColl.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } [BUGGY] [BUGGY] this.chromosomes.addAll(chromosomeColl); } [CLASS] ListPopulation [METHOD] addChromosomes [RETURN_TYPE] void  Chromosome> chromosomeColl [VARIABLES] Collection chromosomeColl List chromosomes boolean int populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	112	112	1	add	
5	[BUG] [BUGGY] } [FE] AssertionError testIterator [CONTEXT] public void addChromosomes(final Collection<Chromosome> chromosomeColl) { if (chromosomes.size() + chromosomeColl.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.chromosomes.addAll(chromosomeColl); [BUGGY] } [BUGGY]  [CLASS] ListPopulation [METHOD] addChromosomes [RETURN_TYPE] void  Chromosome> chromosomeColl [VARIABLES] Collection chromosomeColl List chromosomes boolean int populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	replace	
6	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] public void addChromosomes(final Collection<Chromosome> chromosomeColl) { if (chromosomes.size() + chromosomeColl.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.chromosomes.addAll(chromosomeColl); [BUGGY] [BUGGY] } [CLASS] ListPopulation [METHOD] addChromosomes [RETURN_TYPE] void  Chromosome> chromosomeColl [VARIABLES] Collection chromosomeColl List chromosomes boolean int populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.7071067811865475	113	113	1	add	
7	[BUG] [BUGGY] if (chromosomes.size() + chromosomeColl.size() > populationLimit) { [FE] AssertionError testIterator [CONTEXT] public void addChromosomes(final Collection<Chromosome> chromosomeColl) { [BUGGY] if (chromosomes.size() + chromosomeColl.size() > populationLimit) { [BUGGY] throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.chromosomes.addAll(chromosomeColl); } [CLASS] ListPopulation [METHOD] addChromosomes [RETURN_TYPE] void  Chromosome> chromosomeColl [VARIABLES] Collection chromosomeColl List chromosomes boolean int populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.5773502691896258	108	108	1	replace	
8	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] public void addChromosomes(final Collection<Chromosome> chromosomeColl) { [BUGGY] [BUGGY] if (chromosomes.size() + chromosomeColl.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.chromosomes.addAll(chromosomeColl); } [CLASS] ListPopulation [METHOD] addChromosomes [RETURN_TYPE] void  Chromosome> chromosomeColl [VARIABLES] Collection chromosomeColl List chromosomes boolean int populationLimit  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.5773502691896258	108	108	1	add	
9	[BUG] [BUGGY] } [FE] AssertionError testIterator [CONTEXT] public ListPopulation(final int populationLimit) { this(Collections.<Chromosome> emptyList(), populationLimit); [BUGGY] } [BUGGY]  [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] ListPopulation(int)  final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.4472135954999579	53	53	1	replace	
10	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] public ListPopulation(final int populationLimit) { this(Collections.<Chromosome> emptyList(), populationLimit); [BUGGY] [BUGGY] } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] ListPopulation(int)  final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.4472135954999579	53	53	1	add	
11	[BUG] [BUGGY] this(Collections.<Chromosome> emptyList(), populationLimit); [FE] AssertionError testIterator [CONTEXT] public ListPopulation(final int populationLimit) { [BUGGY] this(Collections.<Chromosome> emptyList(), populationLimit); [BUGGY] } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] ListPopulation(int)  final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.4082482904638631	52	52	1	replace	
12	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] public ListPopulation(final int populationLimit) { [BUGGY] [BUGGY] this(Collections.<Chromosome> emptyList(), populationLimit); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] ListPopulation(int)  final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.4082482904638631	52	52	1	add	
13	[BUG] [BUGGY] this.populationLimit = populationLimit; [FE] AssertionError testIterator [CONTEXT] if (chromosomes == null) { throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } [BUGGY] this.populationLimit = populationLimit; [BUGGY] this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	75	75	1	replace	
14	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] if (chromosomes == null) { throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } [BUGGY] [BUGGY] this.populationLimit = populationLimit; this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	75	75	1	add	
15	[BUG] [BUGGY] this.chromosomes = new ArrayList<Chromosome>(populationLimit); [FE] AssertionError testIterator [CONTEXT] throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; [BUGGY] this.chromosomes = new ArrayList<Chromosome>(populationLimit); [BUGGY] this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	76	76	1	replace	
16	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] throw new NullArgumentException(); } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; [BUGGY] [BUGGY] this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	76	76	1	add	
17	[BUG] [BUGGY] this.chromosomes.addAll(chromosomes); [FE] AssertionError testIterator [CONTEXT] } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; this.chromosomes = new ArrayList<Chromosome>(populationLimit); [BUGGY] this.chromosomes.addAll(chromosomes); [BUGGY] } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	replace	
18	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] } if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; this.chromosomes = new ArrayList<Chromosome>(populationLimit); [BUGGY] [BUGGY] this.chromosomes.addAll(chromosomes); } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	77	77	1	add	
19	[BUG] [BUGGY] } [FE] AssertionError testIterator [CONTEXT] if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); [BUGGY] } [BUGGY]  [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	replace	
20	[BUG] [BUGGY] [FE] AssertionError testIterator [CONTEXT] if (populationLimit <= 0) { throw new NotPositiveException(LocalizedFormats.POPULATION_LIMIT_NOT_POSITIVE, populationLimit); } if (chromosomes.size() > populationLimit) { throw new NumberIsTooLargeException(LocalizedFormats.LIST_OF_CHROMOSOMES_BIGGER_THAN_POPULATION_SIZE, chromosomes.size(), populationLimit, false); } this.populationLimit = populationLimit; this.chromosomes = new ArrayList<Chromosome>(populationLimit); this.chromosomes.addAll(chromosomes); [BUGGY] [BUGGY] } [CLASS] ListPopulation [METHOD] <init> [RETURN_TYPE] List,int)  Chromosome> chromosomes final int populationLimit [VARIABLES] List chromosomes int populationLimit boolean  	projects/Math34/src/main/java/org/apache/commons/math3/genetics/ListPopulation.java	0.3779644730092272	78	78	1	add	
