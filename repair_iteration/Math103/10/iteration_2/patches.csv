bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (sd  <  StandardDistributionImpl.DEFAULT  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  StandardDistributionImpl.DEFAULT  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  StandardDistributionImpl.DEFAULT  ||  sd  >  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    =    StandardDistributionImpl.DEFAULT    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
2	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  standardDeviation);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
3	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  sd);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
4	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  0.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  0.0);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
6	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd));	  ((    StandardDistributionImpl)super.setStandardDeviation(mean));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
7	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.super.setStandardDeviation(sd));  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.super.setStandardDeviation(sd));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.super.setStandardDeviation(sd));	  ((    StandardDistributionImpl)super.setStandardDeviation(mean));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
8	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  sd));  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  sd));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  sd));	  ((    StandardDistributionImpl)super.setStandardDeviation(mean));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
9	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  0.0));  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  0.0));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  0.0));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  1.0));  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  1.0));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  1.0));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd!=  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  sd!=  StandardDistributionImpl.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd!=  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    =    0.0    ||    sd    ==    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
13	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  standardDeviation);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd),  standardDeviation);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd),  standardDeviation);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd),  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd),  standardDeviation);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  sd);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd),  sd);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd),  sd,  standardDeviation);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.DEFAULT)  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
18	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd,  mean);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(mean);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  2;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  +  2;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  2;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  3;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  +  3;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  3;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setMean(mean);	  ((    NormalDistributionImpl)this.standardDeviation).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(sd,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(sd,  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setMean(sd,  mean);	  ((    NormalDistributionImpl)this.standardDeviation).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  this.standardDeviation  =  sd  /  mean;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  /  mean;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  /  mean;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
26	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  standardDeviation;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  *  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  *  standardDeviation;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
27	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  sd;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  *  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  *  sd;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
28	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
29	[BUG]  [BUGGY]  this.standardDeviation  =  d;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  d;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  d;	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.standardDeviation)  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
31	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  mean  ==  0.0)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  mean  ==  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  mean  ==  0.0)  {	  if    (sd    <    0.0    ||    standardDeviation    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
32	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  ==  0.0)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  ==  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  ==  0.0)  {	  if    (sd    <    0.0    ||    standardDeviation    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
33	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  mean  >  0.0)  {  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  mean  >  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  mean  >  0.0)  {	  if    (sd    <    0.0    ||    standardDeviation    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
34	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  standardDeviation;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  sd  +  standardDeviation;	  ((    StandardDistributionImpl)this).standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
35	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  *  mean;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  *  mean;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  sd  *  mean;	  ((    StandardDistributionImpl)this).standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
36	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  /  mean;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  /  mean;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  sd  /  mean;	  ((    StandardDistributionImpl)this).standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
37	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  sd;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  sd  +  sd;	  ((    StandardDistributionImpl)this).standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
38	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd  -  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd  -  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd  -  mean);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
39	[BUG]  [BUGGY]  ((  StandardDistributionImpl)s).setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)s).setStandardDeviation(standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)s).setStandardDeviation(standardDeviation);	  ((    StandardDistributionImpl)this).setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
40	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  sd;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  +  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  sd;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  standardDeviation;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  +  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  standardDeviation;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  = "standard ";  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  = "standard ";  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  = "standard ";	  ((    StandardDistributionImpl)this).standardDeviation    =    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  =  sd;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  =  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation  =  sd;	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  ((  NormalDistributionImpl)s).standardDeviation  =  standardDeviation;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)s).standardDeviation  =  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)s).standardDeviation  =  standardDeviation;	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation,  sd;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation,  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation,  sd;	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  -=  mean;  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  -=  mean;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation  -=  mean;	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
47	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(mean,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(mean,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(mean,  sd);	  ((    StandardDistributionImpl)this).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[sd  -  mean];  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  new  double[sd  -  mean];  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double[sd  -  mean];	  this.standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
49	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[sd  +  mean];  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  new  double[sd  +  mean];  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double[sd  +  mean];	  this.standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
50	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[Mean];  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  new  double[Mean];  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double[Mean];	  this.standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
51	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[mean];  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  new  double[mean];  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double[mean];	  this.standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
52	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  ==  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  ==  StandardDistributionImpl.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  ==  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
53	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.super.setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.super.setStandardDeviation(sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.super.setStandardDeviation(sd);	  ((    StandardDistributionImpl)super.setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
54	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)super.setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
55	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  +  1));  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  +  1));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd  +  1));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd    +    3));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  /  3));  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  /  3));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd  /  3));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd    +    3));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
57	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  *  3));  [CE]  illegal  start  of  type  [FE]                            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  *  3));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd  *  3));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd    +    3));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  ==  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  ==  StandardDistributionImpl.ZERO)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  ==  StandardDistributionImpl.ZERO)  {	  if    (sd    <    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
59	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
60	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  0.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
61	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
62	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(mean);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
63	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(this.standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(this.standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(this.standardDeviation);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
64	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.StandardDeviation)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.StandardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.StandardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.StandardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
65	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.StandardDeviation)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.StandardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.StandardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.StandardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >=    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
67	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
68	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(message);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(message);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(message);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
69	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(msg);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(msg);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(msg);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(message);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
70	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >  mean.doubleValue())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  >  mean.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >  mean.doubleValue())  {	  if    (sd    <    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
71	[BUG]  [BUGGY]  ((  StandardDistributionImpl)s).standardDeviation  =  standardDeviation;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)s).standardDeviation  =  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)s).standardDeviation  =  standardDeviation;	  ((    StandardDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation,  sd;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation,  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation,  sd;	  ((    StandardDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null,  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(null);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(null);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
75	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
76	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
77	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  0.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
79	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
80	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  standardDeviation);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
81	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  1.0);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  1.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  1.0);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
82	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  sd.doubleValue())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  sd.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  >  sd.doubleValue())  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
83	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setMean(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
84	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  standardDeviation);	  ((    StandardDistributionImpl)this.standardDeviation).setMean(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
85	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  0.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  0.0);	  ((    StandardDistributionImpl)this.standardDeviation).setMean(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  standardDeviation  <  0.0)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  standardDeviation  <  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  standardDeviation  <  0.0)  {	  if    (standardDeviation    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
87	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation())  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
88	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
89	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.ZERO)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.ZERO)  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
90	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandard(sd,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandard(sd,  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandard(sd,  mean);	  ((    StandardDistributionImpl)this.standardDeviation).setMean(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
91	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  this.mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  this.mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  this.mean);	  ((    StandardDistributionImpl)this.standardDeviation).setMean(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  if  (standardDeviation  ==  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  ==  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  ==  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
93	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  this.mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  this.mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  this.mean);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
94	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(d);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(d);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(d);	  ((    StandardDistributionImpl)super.setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
95	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.doubleValue())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
96	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
97	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  standardDeviation.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  >  standardDeviation.doubleValue())  {	  if    (sd    <    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
98	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(new  double[]  {  sd  }  );  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(new  double[]  {  sd  }  );  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(new  double[]  {  sd  }  );	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {	  if    (sd    <    =    0.0    ||    sd    >=    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
100	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(null);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
101	[BUG]  [BUGGY]  if  (StandardDeviation  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (StandardDeviation  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (StandardDeviation  <  =  0.0  ||  standardDeviation  >  StandardDistributionImpl.standardDeviation)  {	  if    (StandardDeviation    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
102	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >=  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  >=  standardDeviation.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >=  standardDeviation.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >=    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
103	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  standardDeviation.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >=  standardDeviation.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >=    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
104	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation),  mean);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation),  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  standardDeviation),  mean);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
105	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  normalDeviation);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  normalDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd),  normalDeviation);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
106	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  NormalDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  NormalDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >  NormalDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    NormalDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
107	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  4;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  +  4;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  4;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
108	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  1;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  1;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  sd  +  1;	  ((    StandardDistributionImpl)this).standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
109	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0)  {	  if    (standardDeviation    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
110	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {	  if    (sd    <    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
111	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
112	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(new  double[]  {  sd  }  ));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(new  double[]  {  sd  }  ));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(new  double[]  {  sd  }  ));	  ((    StandardDistributionImpl)super.setStandardDeviation(mean));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
113	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(d));  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(d));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(d));	  ((    StandardDistributionImpl)super.setStandardDeviation(mean));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
114	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[Math.floor(sd)];  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  new  double[Math.floor(sd)];  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double[Math.floor(sd)];	  this.standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
115	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  ==  0.0)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  ==  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  ==  0.0)  {	  if    (sd    <    0.0    ||    standardDeviation    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
116	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >=  0.0)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >=  0.0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  >=  0.0)  {	  if    (sd    <    0.0    ||    standardDeviation    ==    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
117	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  1.0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  1.0);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  1.0);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
118	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(standardDeviation,  sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(standardDeviation,  sd);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
119	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  standardDeviation;	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
120	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  standardDeviation));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  standardDeviation));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  standardDeviation));	  ((    StandardDistributionImpl)super.setStandardDeviation(sd,    mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
121	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(d);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(d);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(d);	  ((    StandardDistributionImpl)this).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
122	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(new  Double(sd));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(new  Double(sd));  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(new  Double(sd));	  ((    StandardDistributionImpl)this).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
123	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >  standardDeviation.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  >  standardDeviation.doubleValue())  {	  if    (standardDeviation    <    =    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
124	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.NONE);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.NONE);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.NONE);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
125	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_SIZE);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_SIZE);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_SIZE);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
126	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.StandardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
127	[BUG]  [BUGGY]  if  (StandardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (StandardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (StandardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.StandardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
128	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  =  standardDeviation;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  =  standardDeviation;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation  =  standardDeviation;	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
129	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  = "standard ";  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  = "standard ";  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation  = "standard ";	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
130	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_SSTANDARD_VIDEO;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_SSTANDARD_VIDEO;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_SSTANDARD_VIDEO;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
131	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(me);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(me);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(me);	  ((    StandardDistributionImpl)this).setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
132	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(mean);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
133	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(standardDeviation);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
134	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(message);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(message);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
135	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  StandardDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >=  StandardDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >=    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
136	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.standardDeviation);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
137	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE,  mean);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE,  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE,  mean);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
138	[BUG]  [BUGGY]  if  (sd  <  =  StandardDistributionImpl.StandardDeviation  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  StandardDistributionImpl.StandardDeviation  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  StandardDistributionImpl.StandardDeviation  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.StandardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
139	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation  +  mean;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  standardDeviation  +  mean;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  standardDeviation  +  mean;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
140	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  standardDeviation  +  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  standardDeviation  +  sd;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  standardDeviation  +  sd;	  ((    StandardDistributionImpl)this).standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
141	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {	  if    (sd    <    =    0.0    ||    sd    >=    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
142	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >=  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  =  0.0  ||  standardDeviation  >=  StandardDistributionImpl.standardDeviation)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  standardDeviation  >=  StandardDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >=    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
143	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(standardDeviation);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(standardDeviation);	  ((    NormalDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
144	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  sd.doubleValue())  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  0.0  ||  sd  >  sd.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0  ||  sd  >  sd.doubleValue())  {	  if    (sd    <    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
145	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  sd.doubleValue())  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >=  sd.doubleValue())  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >=  sd.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >=    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
146	[BUG]  [BUGGY]  this.standardDeviation  =  new  double(sd);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  this.standardDeviation  =  new  double(sd);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double(sd);	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
147	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  -  mean;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  -  mean;  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation  -  mean;	  ((    NormalDistributionImpl)this).standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO  ||  standardDeviation  >  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO  ||  standardDeviation  >  StandardDistributionImpl.ZERO)  {  [BUGGY]      throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO  ||  standardDeviation  >  StandardDistributionImpl.ZERO)  {	  if    (sd    <    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
149	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  standardDeviation,  mean);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd),  standardDeviation,  mean);	  ((    StandardDistributionImpl)super.setStandardDeviation(sd),    mean);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
150	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(message);  [BUGGY]      if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(message);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
