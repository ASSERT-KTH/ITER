bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(sd);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(sd);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setMean(sd);	      ((    StandardDistributionImpl)this.standardDeviation).setMean(mean);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  mean);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setMean(sd,  mean);	      ((    StandardDistributionImpl)this.standardDeviation).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(mean);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  mean;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  mean;	      ((    StandardDistributionImpl)this).standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  standardDeviation;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  standardDeviation;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  standardDeviation;	      ((    StandardDistributionImpl)this).standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  =  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  NormalDistributionImpl)this).standardDeviation  =  mean;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this).standardDeviation  =  mean;	      ((    StandardDistributionImpl)this).standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.StandardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  NormalDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  NormalDistributionImpl.standardDeviation)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >  NormalDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  this.standardDeviation  =  sd  +  mean;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  1;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  this.standardDeviation  =  sd  +  1;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  +  1;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  this.standardDeviation  =  mean;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  this.standardDeviation  =  mean;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
14	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  0.0  ||  sd  >  standardDeviation.doubleValue())  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >  standardDeviation.doubleValue())  {	  if    (sd    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  mean));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  mean));  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  mean));	      ((    StandardDistributionImpl)super.setStandardDeviation(sd));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd),  mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd),  mean);	      ((    StandardDistributionImpl)super.setStandardDeviation(sd));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  +  3));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd  +  3));  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd  +  3));	      ((    StandardDistributionImpl)super.setStandardDeviation(sd));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.ZERO)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.ZERO)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.ZERO)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.doubleValue())  {  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.doubleValue())  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >  StandardDistributionImpl.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  standardDeviation.doubleValue())  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >=  standardDeviation.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  if  (sd  <  =  StandardDistributionImpl.DEFAULT  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  StandardDistributionImpl.DEFAULT  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  StandardDistributionImpl.DEFAULT  ||  sd  >  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  ==  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(sd,  mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd);	      ((    StandardDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  NormalDistributionImpl)super.setStandardDeviation(sd,  mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  NormalDistributionImpl)super.setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
31	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.ZERO)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.ZERO)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(mean));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(mean));  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(mean));	      ((    StandardDistributionImpl)super.setStandardDeviation(sd));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this).standardDeviation  =  sd  +  mean;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).standardDeviation  =  sd  +  mean;	      ((    StandardDistributionImpl)this).standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  if  (standardDeviation  <  0.0)  {  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (standardDeviation  <  0.0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  0.0)  {	  if    (sd    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  if  (sd  <  0.0  ||  standardDeviation  ==  0.0)  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  0.0  ||  standardDeviation  ==  0.0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  0.0  ||  standardDeviation  ==  0.0)  {	  if    (sd    <    0.0)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.standardDeviation)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (sd  <  =  0.0  ||  sd  >=  StandardDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  standardDeviation.doubleValue())  {  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  standardDeviation.doubleValue())  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >  standardDeviation.doubleValue())  {	  if    (sd    <    =    0.0    ||    sd    >    standardDeviation.doubleValue())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)super.setStandardDeviation(mean);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)super.setStandardDeviation(mean);	      ((    StandardDistributionImpl)super.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  this.standardDeviation  =  sd  *  mean;  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  sd  *  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[sd];  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  this.standardDeviation  =  new  double[sd];  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	this.standardDeviation  =  new  double[sd];	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(standardDeviation);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(standardDeviation);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
45	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(message);  [BUGGY]    if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(message);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  if  (StandardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (StandardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (StandardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.standardDeviation)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.standardDeviation)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {    [BUGGY]  if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if  (standardDeviation  <  =  0.0  ||  sd  >  StandardDistributionImpl.DEFAULT)  {	  if    (sd    <    =    0.0    ||    sd    >    StandardDistributionImpl.DEFAULT)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
