bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  setStandardDeviation(null,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(null,  mean);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(null,  mean);	      setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  setStandardDeviation(null,  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(null,  standardDeviation);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(null,  standardDeviation);	      setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  sd  =  Math.max(sd,  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.max(sd,  mean);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  mean);	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  sd  =  Math.min(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.min(sd,  standardDeviation);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(sd,  standardDeviation);	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  sd  =  Math.min(sd,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.min(sd,  mean);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(sd,  mean);	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  sd  =  Math.max(standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.max(standardDeviation,  sd);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(standardDeviation,  sd);	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.standardDeviation  =  sd  +  mean;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  1;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.standardDeviation  =  sd  +  1;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  1;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  this.standardDeviation  =  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.standardDeviation  =  mean;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd),  standardDeviation);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Double(sd),  standardDeviation);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd),  standardDeviation);	  setStandardDeviation(new    Double(sd));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)+  mean);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Double(sd)+  mean);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)+  mean);	  setStandardDeviation(new    Double(sd));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  this.mean  =  sd  +  standardDeviation;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.mean  =  sd  +  standardDeviation;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  standardDeviation;	      this.mean    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  this.mean  =  sd  +  1;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.mean  =  sd  +  1;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  1;	      this.mean    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  standardDeviation);	      setStandardDeviation(new    Mean(sd));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation));  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  standardDeviation));	      setStandardDeviation(new    Mean(sd));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)+  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Mean(sd)+  standardDeviation);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)+  standardDeviation);	      setStandardDeviation(new    Mean(sd));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(sd,  mean);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(sd,  standardDeviation);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  standardDeviation);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
19	[BUG]  [BUGGY]  setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(mean);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(standardDeviation));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Mean(standardDeviation));  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(standardDeviation));	      setStandardDeviation(new    Mean(sd));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  setStandardDeviation(new  Double(standardDeviation));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Double(standardDeviation));  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(standardDeviation));	  setStandardDeviation(new    Double(sd));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)+  standardDeviation);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Double(sd)+  standardDeviation);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)+  standardDeviation);	  setStandardDeviation(new    Double(sd));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  this.mean  =  sd  *  standardDeviation;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.mean  =  sd  *  standardDeviation;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  *  standardDeviation;	      this.mean    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  mean);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  standardDeviation,  mean);	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(standardDeviation);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(standardDeviation);	      setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation  +  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.standardDeviation  =  standardDeviation  +  mean;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  standardDeviation  +  mean;	      this.standardDeviation    =    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  sd  =  Math.min(standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.min(standardDeviation,  sd);  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(standardDeviation,  sd);	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation));  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  standardDeviation));	  sd    =    Math.max(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  setStandardDeviation(sd  +  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(sd  +  mean);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  +  mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  setStandardDeviation(sd  -  mean);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(sd  -  mean);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  -  mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  +  mean));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  setStandardDeviation(new  Double(sd  +  mean));  [BUGGY]      [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  +  mean));	  setStandardDeviation(new    Double(sd));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }  standardDeviation  =  sd;    [BUGGY]  this.standardDeviation  =  sd  *  mean;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  *  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
