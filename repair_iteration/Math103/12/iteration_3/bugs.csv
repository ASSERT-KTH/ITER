bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sd  =  Math.max(sd,  StandardDistributionImpl.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(sd,  StandardDistributionImpl.MAX_VALUE);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  StandardDistributionImpl.MAX_VALUE);	  sd    =    Math.max(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  sd  =  Math.max(sd,  StandardDistributionImpl.standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(sd,  StandardDistributionImpl.standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  StandardDistributionImpl.standardDeviation);	  sd    =    Math.max(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  sd));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd,  sd));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  sd));	  setStandardDeviation(new    Mean(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  mean));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd,  mean));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  mean));	  setStandardDeviation(new    Mean(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation),  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation),  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  standardDeviation),  sd);	  setStandardDeviation(new    Mean(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation,  sd));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation,  sd));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  standardDeviation,  sd));	  setStandardDeviation(new    Mean(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  +  standardDeviation));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd  +  standardDeviation));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  +  standardDeviation));	  setStandardDeviation(new    Double(sd    +    mean));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
8	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  /  mean));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd  /  mean));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  /  mean));	  setStandardDeviation(new    Double(sd    +    mean));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
9	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  *  mean));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd  *  mean));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  *  mean));	  setStandardDeviation(new    Double(sd    +    mean));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
10	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  +  0.5));  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd  +  0.5));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  +  0.5));	  setStandardDeviation(new    Double(sd    +    mean));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
11	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)/  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd)/  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)/  standardDeviation);	  setStandardDeviation(new    Mean(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)+  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd)+  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)+  sd);	  setStandardDeviation(new    Mean(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)+  mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd)+  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)+  mean);	  setStandardDeviation(new    Mean(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)+  standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd)+  standardDeviation,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)+  standardDeviation,  sd);	  setStandardDeviation(new    Mean(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  setStandardDeviation(new  Double(mean));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(mean));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(mean));	  setStandardDeviation(new    Double(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  setStandardDeviation(new  Double(Math.min(sd,  standardDeviation)));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(Math.min(sd,  standardDeviation)));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(Math.min(sd,  standardDeviation)));	  setStandardDeviation(new    Double(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation  +  sd;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  standardDeviation  +  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  standardDeviation  +  sd;	  this.standardDeviation    =    standardDeviation    +    mean;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
18	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation  *  mean;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  standardDeviation  *  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  standardDeviation  *  mean;	  this.standardDeviation    =    standardDeviation    +    mean;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
19	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation  /  mean;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  standardDeviation  /  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  standardDeviation  /  mean;	  this.standardDeviation    =    standardDeviation    +    mean;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
20	[BUG]  [BUGGY]  setStandardDeviation(null,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(null,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(null,  sd);	  setStandardDeviation(null,    mean);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  sd,  mean  }  );  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  double[]  {  sd,  mean  }  );  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  double[]  {  sd,  mean  }  );	  setStandardDeviation(null,    mean);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
22	[BUG]  [BUGGY]  setStandardDeviation(null,  mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(null,  mean,  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(null,  mean,  standardDeviation);	  setStandardDeviation(null,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  +  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  sd;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
24	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  standardDeviation;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  +  standardDeviation;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  standardDeviation;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
25	[BUG]  [BUGGY]  this.standardDeviation  =  sd  /  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  /  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  /  mean;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
26	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  sd;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  *  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  *  sd;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
27	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  standardDeviation;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  *  standardDeviation;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  *  standardDeviation;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
28	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
29	[BUG]  [BUGGY]  sd  =  Math.min(sd,  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(sd,  standardDeviation,  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(sd,  standardDeviation,  mean);	  sd    =    Math.min(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  mean),  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(sd,  mean),  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  mean),  standardDeviation);	  sd    =    Math.min(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  this.standardDeviation  =  StandardDistributionImpl.DEFAULT;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  StandardDistributionImpl.DEFAULT;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  StandardDistributionImpl.DEFAULT;	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  mean));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(sd,  mean));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  mean));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation  +  1));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation  +  1));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  standardDeviation  +  1));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation,  mean));  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation,  mean));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  standardDeviation,  mean));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(standardDeviation,  sd));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(standardDeviation,  sd));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(standardDeviation,  sd));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  setStandardDeviation(mean,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(mean,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(mean,  sd);	  setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
37	[BUG]  [BUGGY]  validateStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  validateStandardDeviation(sd,  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	validateStandardDeviation(sd,  standardDeviation);	  setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  setStandardDeviation(sd  +  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd  +  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  +  standardDeviation);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
39	[BUG]  [BUGGY]  setStandardDeviation(sd  /  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd  /  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  /  mean);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
40	[BUG]  [BUGGY]  setStandardDeviation(sd  *  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd  *  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  *  mean);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
41	[BUG]  [BUGGY]  setStandardDeviation(sd  +  0.5);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd  +  0.5);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  +  0.5);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
42	[BUG]  [BUGGY]  this.mean  =  sd  /  standardDeviation;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  /  standardDeviation;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  /  standardDeviation;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
43	[BUG]  [BUGGY]  this.mean  =  sd  *  sd;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  *  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  *  sd;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
44	[BUG]  [BUGGY]  this.mean  =  sd  *  mean;  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  *  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  *  mean;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
45	[BUG]  [BUGGY]  this.mean  =  mean  *  sd;  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  mean  *  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  mean  *  sd;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
46	[BUG]  [BUGGY]  this.mean  =  mean  +  sd;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  mean  +  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  mean  +  sd;	  this.mean    =    sd    +    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  this.mean  =  sd  +  sd;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  sd;	  this.mean    =    sd    +    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  this.mean  =  sd  +  mean;  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  mean;	  this.mean    =    sd    +    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd),  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  sd);	  setStandardDeviation(new    Mean(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd),  sd,  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  sd,  standardDeviation);	  setStandardDeviation(new    Mean(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  standardDeviation,  sd);	  setStandardDeviation(new    Mean(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
52	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd),  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  mean);	  setStandardDeviation(new    Mean(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
53	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)/  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd)/  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)/  mean);	  setStandardDeviation(new    Double(sd)+    mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
54	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)+  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd)+  sd);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)+  sd);	  setStandardDeviation(new    Double(sd)+    mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
55	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)*  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd)*  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)*  mean);	  setStandardDeviation(new    Double(sd)+    mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
56	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  2;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  +  2;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  2;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  3;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  +  3;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  3;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  this.mean  =  sd  +  2;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  2;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  2;	  this.mean    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  this.mean  =  sd  +  3;  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  3;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  3;	  this.mean    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  this.mean  =  sd  +  4;  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  4;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  4;	  this.mean    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
62	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd),  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd),  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd),  mean);	  setStandardDeviation(new    Double(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
64	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd),  mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd),  mean,  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd),  mean,  standardDeviation);	  setStandardDeviation(new    Double(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
65	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)/  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd)/  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)/  standardDeviation);	  setStandardDeviation(new    Double(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)+  mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd)+  mean,  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)+  mean,  standardDeviation);	  setStandardDeviation(new    Double(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd)*  standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd)*  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd)*  standardDeviation);	  setStandardDeviation(new    Double(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  sd  =  Math.min(sd,  StandardDistributionImpl.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(sd,  StandardDistributionImpl.MAX_VALUE);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(sd,  StandardDistributionImpl.MAX_VALUE);	  sd    =    Math.min(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
69	[BUG]  [BUGGY]  sd  =  Math.min(sd,  StandardDistributionImpl.standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(sd,  StandardDistributionImpl.standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(sd,  StandardDistributionImpl.standardDeviation);	  sd    =    Math.min(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
70	[BUG]  [BUGGY]  sd  =  Math.max(sd,  mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(sd,  mean,  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  mean,  standardDeviation);	  sd    =    Math.max(sd,    standardDeviation,    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
71	[BUG]  [BUGGY]  sd  =  Math.min(sd,  mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(sd,  mean,  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(sd,  mean,  standardDeviation);	  sd    =    Math.max(sd,    standardDeviation,    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
72	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  0.0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  0.0);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  standardDeviation,  0.0);	  sd    =    Math.max(sd,    standardDeviation,    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
73	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  2.0);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  2.0);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  standardDeviation,  2.0);	  sd    =    Math.max(sd,    standardDeviation,    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
74	[BUG]  [BUGGY]  sd  =  Math.max(standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(standardDeviation,  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(standardDeviation,  mean);	  sd    =    Math.max(standardDeviation,    sd);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  standardDeviation  =  Math.max(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  standardDeviation  =  Math.max(sd,  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	standardDeviation  =  Math.max(sd,  standardDeviation);	  sd    =    Math.max(standardDeviation,    sd);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  setStandardDeviation(sd  -  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd  -  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  -  standardDeviation);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
77	[BUG]  [BUGGY]  setStandardDeviation(sd  -  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd  -  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd  -  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
78	[BUG]  [BUGGY]  sd  =  Math.min(standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(standardDeviation,  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(standardDeviation,  mean);	  sd    =    Math.min(standardDeviation,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
79	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  4;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  +  4;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  +  4;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  sd  =  Math.min(mean,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(mean,  sd);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(mean,  sd);	  sd    =    Math.min(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
81	[BUG]  [BUGGY]  sd  =  Math.min(Math.abs(sd),  standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.abs(sd),  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.abs(sd),  standardDeviation);	  sd    =    Math.min(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
82	[BUG]  [BUGGY]  setStandardDeviation(new  Double(standardDeviation)+  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(standardDeviation)+  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(standardDeviation)+  mean);	  setStandardDeviation(new    Double(sd)+    mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_SSTANDARD_VARIABLE;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_SSTANDARD_VARIABLE;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_SSTANDARD_VARIABLE;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
84	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  standardDeviation,  mean);	  setStandardDeviation(new    Mean(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(Mean.valueOf(sd));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(Mean.valueOf(sd));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(Mean.valueOf(sd));	  setStandardDeviation(new    Mean(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
86	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(mean));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(mean));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(mean));	  setStandardDeviation(new    Mean(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
87	[BUG]  [BUGGY]  setStandardDeviation(message,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(message,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(message,  sd);	  setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  this.mean  =  mean  *  standardDeviation;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  mean  *  standardDeviation;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  mean  *  standardDeviation;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
89	[BUG]  [BUGGY]  this.mean  =  sd  *  StandardDistributionImpl.DEFAULT;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  *  StandardDistributionImpl.DEFAULT;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  *  StandardDistributionImpl.DEFAULT;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
90	[BUG]  [BUGGY]  sd  =  Math.max(mean,  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(mean,  sd);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(mean,  sd);	  sd    =    Math.max(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation),  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation),  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  standardDeviation),  mean);	  setStandardDeviation(new    Mean(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
92	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation,  mean));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd,  standardDeviation,  mean));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd,  standardDeviation,  mean));	  setStandardDeviation(new    Mean(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
93	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVIATION);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVIATION);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVIATION);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
94	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVATION);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVATION);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVATION);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
95	[BUG]  [BUGGY]  setStandardDeviation(mean  -  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(mean  -  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(mean  -  sd);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
96	[BUG]  [BUGGY]  setStandardDeviation(standardDeviation  -  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(standardDeviation  -  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(standardDeviation  -  mean);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
97	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation  +  1.0));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation  +  1.0));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  standardDeviation  +  1.0));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
98	[BUG]  [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation  +  0.5));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(Math.max(sd,  standardDeviation  +  0.5));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(Math.max(sd,  standardDeviation  +  0.5));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
99	[BUG]  [BUGGY]  setStandardDeviation(null,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(null,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(null,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);	  setStandardDeviation(null,    mean);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  this.mean  =  sd  +  1L;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  1L;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  1L;	  this.mean    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
101	[BUG]  [BUGGY]  setStandardDeviation(new  Double(standardDeviation  +  sd));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(standardDeviation  +  sd));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(standardDeviation  +  sd));	  setStandardDeviation(new    Double(sd    +    mean));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
102	[BUG]  [BUGGY]  setStandardDeviation(standardDeviation  +  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(standardDeviation  +  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(standardDeviation  +  sd);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
103	[BUG]  [BUGGY]  setStandardDeviation(null,  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(null,  standardDeviation,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(null,  standardDeviation,  mean);	  setStandardDeviation(null,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  setStandardDeviation(new  Double(Math.min(sd,  standardDeviation));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(Math.min(sd,  standardDeviation));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(Math.min(sd,  standardDeviation));	  setStandardDeviation(new    Double(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
105	[BUG]  [BUGGY]  setStandardDeviation(new  Double(mean)+  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(mean)+  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(mean)+  standardDeviation);	  setStandardDeviation(new    Double(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
106	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)+  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd)+  standardDeviation,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)+  standardDeviation,  mean);	  setStandardDeviation(new    Mean(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
107	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd)*  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd)*  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd)*  standardDeviation);	  setStandardDeviation(new    Mean(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
108	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation  -  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(sd),  standardDeviation  -  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(sd),  standardDeviation  -  mean);	  setStandardDeviation(new    Mean(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
109	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  +  mean)+  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd  +  mean)+  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  +  mean)+  standardDeviation);	  setStandardDeviation(new    Double(sd)+    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
110	[BUG]  [BUGGY]  setNormalDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setNormalDeviation(sd,  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setNormalDeviation(sd,  standardDeviation);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDeviation.DEFAULT_STANDARD_VARIABLE);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd,  StandardDeviation.DEFAULT_STANDARD_VARIABLE);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  StandardDeviation.DEFAULT_STANDARD_VARIABLE);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
112	[BUG]  [BUGGY]  this.mean  =  sd  *  standardDeviation  +  1;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  *  standardDeviation  +  1;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  *  standardDeviation  +  1;	  this.mean    =    sd    *    standardDeviation;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
113	[BUG]  [BUGGY]  setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(sd,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(sd,  sd);	  setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
114	[BUG]  [BUGGY]  this.mean  =  sd  +  0.0;  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  0.0;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  0.0;	  this.mean    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  this.mean  =  sd  +  1.0;  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.mean  =  sd  +  1.0;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.mean  =  sd  +  1.0;	  this.mean    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
116	[BUG]  [BUGGY]  setStandardDeviation(new  Mean(Mean(sd));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Mean(Mean(sd));  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Mean(Mean(sd));	  setStandardDeviation(new    Mean(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
117	[BUG]  [BUGGY]  sd  =  Math.max(Math.max(standardDeviation,  sd));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(Math.max(standardDeviation,  sd));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(Math.max(standardDeviation,  sd));	  sd    =    Math.min(Math.max(sd,    standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
118	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd  +  standardDeviation)+  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd  +  standardDeviation)+  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd  +  standardDeviation)+  mean);	  setStandardDeviation(new    Double(sd)+    mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
120	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  1.0);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.max(sd,  standardDeviation,  1.0);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.max(sd,  standardDeviation,  1.0);	  sd    =    Math.max(sd,    standardDeviation,    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
121	[BUG]  [BUGGY]  this.standardDeviation  =  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  this.standardDeviation  =  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	this.standardDeviation  =  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
122	[BUG]  [BUGGY]  sd  =  Math.min(mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  sd  =  Math.min(mean,  standardDeviation);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	sd  =  Math.min(mean,  standardDeviation);	  sd    =    Math.min(standardDeviation,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
123	[BUG]  [BUGGY]  setStandardDeviation(new  Double(sd),  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(sd),  standardDeviation,  mean);  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(sd),  standardDeviation,  mean);	  setStandardDeviation(new    Double(sd),    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
124	[BUG]  [BUGGY]  setStandardDeviation(new  Double(Math.abs(sd)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(new  Double(Math.abs(sd)));  [BUGGY]        [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(new  Double(Math.abs(sd)));	  setStandardDeviation(new    Double(standardDeviation));    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
125	[BUG]  [BUGGY]  setNormalDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setNormalDeviation(standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setNormalDeviation(standardDeviation);	  setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
126	[BUG]  [BUGGY]  setNormalizedDeviation(sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setNormalizedDeviation(sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setNormalizedDeviation(sd);	  setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }  standardDeviation  =  sd;      [BUGGY]  setStandardDeviation(message);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	setStandardDeviation(message);	  setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
