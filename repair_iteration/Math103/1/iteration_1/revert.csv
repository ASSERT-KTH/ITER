projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(x*Math.log(mean)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(mean)/x;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/cumulativeProbability;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(x*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(x*Math.sqrt(1.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(x*Math.sqrt(0.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)/standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)*Math.abs(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-Math.abs(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.log(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.log(x)/2.0,standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.exp(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.cos(Math.log(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x);doublemean=Math.abs(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x);Doublemean=Math.abs(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x);doublemeans=Math.abs(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x);longmean=Math.abs(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/2.0;doublemean=Math.log(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/2.0;Doublemean=Math.log(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/2.0;longmean=Math.log(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/sd;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/StandardDistributionImpl.DEFAULT;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(standardDeviation*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(x*Math.log(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(message*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(standardDeviation*Math.sqrt(1.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(x*Math.log(1.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.abs(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)/2.0,standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.max(Math.abs(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)/sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)/mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)/standardDeviation,sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-Math.abs(standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-Math.abs(sd));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-Math.abs(NormalDistributionImpl.doubleValue(x));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-Math.abs(NormalDistributionImpl.standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(standardDeviation*Math.sqrt(0.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/sd;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/x;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/msg;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(standardDeviation*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublestandardDeviation*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(standardDeviation*Math.sqrt(1.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(sd*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));((x-mean)/(standardDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(mean)/(standardDeviation*Math.log(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(1.0+Erf.erf((x-mean)/(normalDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(mean*Math.log(x)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(message*Math.log(x)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(x*Math.rint(mean)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.cos(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)/Math.abs(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(mean)*Math.abs(x));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)*Math.abs(sd));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.abs(x));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x-standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(sd));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/2.0)/(standardDeviation*Math.log(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(normalDeviation*Math.sqrt(0.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(standardDeviation*Math.sqrt(1)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(mean*Math.pow(10,x)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(normalDeviation*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(standardDeviation*Math.sqrt(2)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null/mean)/(x*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/2.0;Math.log(x)/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/MILLIS;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/dev;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(message-mean)/(standardDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(standardDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(standardDeviation*Math.log(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(Math.abs(x)-Math.abs(standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109Doublemean=Math.abs(Math.abs(x)-Math.abs(standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)-Math.abs(NormalDistributionImpl.DEFAULT_SYNTHETIC));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.random()/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.log(x)/2.0/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/StandardDistributionImpl.DEFAULT_MESSAGE;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.log(x)/StandardDistributionImpl.DEFAULT_SYNTHETIC;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(standardDeviation*Math.sqrt(0.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublestandardDeviation=Math.sqrt(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x)/2.0-standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.min(Math.abs(x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.random()/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(standardDeviation-mean)/(standardDeviation*Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.log(2.0))));(standardDeviation/Math.log(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(x)*Math.abs(standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.pow(10,x)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(x)/mean;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(mean)-Math.abs(x));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(x/Math.log(mean)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(x*Math.log(Math.log(x)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null-mean)/(message*Math.sqrt(1.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(null/mean)/(x*Math.sqrt(1.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109(Math.abs(sd)/standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(sd)/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.abs(Math.abs(x/2.0));
