bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	add	return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));	return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /    (standardDeviation  *  Math.sqrt(2.0))));  	compilable	  [FE]  AssertionFailedError  	1	6	replace
2	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [FE]  AssertionFailedError  [FE]    MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));	return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /    (standardDeviation  *  Math.sqrt(2.0))));  	compilable	  [FE]  AssertionFailedError  	1	6	replace
3	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]      MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	  	return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /    (standardDeviation  *  Math.sqrt(2.0))));  	non-compiled	[CE]  missing  return  statement	1	None	replace
4	[BUG]  [BUGGY]    (x  *  Math.log(mean)));  [CE]  not  a  statement  [FE]    MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    (x  *  Math.log(mean)));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    (x  *  Math.log(mean)));		non-compiled	[CE]  not  a  statement	2	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.abs(x);  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	add	    double  mean  =  Math.abs(x);		compilable	  [FE]  AssertionFailedError  	2	6	add
6	[BUG]  [BUGGY]    double  mean  =  Math.abs(x);  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.abs(x);  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.abs(x);		compilable	  [FE]  AssertionFailedError  	2	6	add
7	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.log(x)/  2.0;  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	add	    double  mean  =  Math.log(x)/  2.0;		compilable	  [FE]  MaxIterationsExceededException  	2	7	add
8	[BUG]  [BUGGY]    double  mean  =  Math.log(x)/  2.0;  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.log(x)/  2.0;  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.log(x)/  2.0;		compilable	  [FE]  MaxIterationsExceededException  	2	7	add
9	[BUG]  [BUGGY]    double  mean  =  Math.abs(mean)/  x;  [CE]  variable  mean  might  not  have  been  initialized  [FE]          MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.abs(mean)/  x;  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.abs(mean)/  x;		non-compiled	[CE]  variable  mean  might  not  have  been  initialized	2	None	add
10	[BUG]  [BUGGY]    double  mean  =  Math.log(x)/  cumulativeProbability;  [CE]  cannot  find  symbol  cumulativeProbability  [FE]            MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.log(x)/  cumulativeProbability;  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.log(x)/  cumulativeProbability;		non-compiled	[CE]  cannot  find  symbol  cumulativeProbability	2	None	add
11	[BUG]  [BUGGY]    (null  -  mean)/(x  *  Math.sqrt(2.0)));  [CE]  not  a  statement  [FE]    MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    (null  -  mean)/(x  *  Math.sqrt(2.0)));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    (null  -  mean)/(x  *  Math.sqrt(2.0)));		non-compiled	[CE]  not  a  statement	2	None	add
12	[BUG]  [BUGGY]    (null  -  mean)/(x  *  Math.sqrt(1.0)));  [CE]  not  a  statement  [FE]      MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    (null  -  mean)/(x  *  Math.sqrt(1.0)));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    (null  -  mean)/(x  *  Math.sqrt(1.0)));		non-compiled	[CE]  not  a  statement	2	None	add
13	[BUG]  [BUGGY]    (null  -  mean)/(x  *  Math.sqrt(0.0)));  [CE]  not  a  statement  [FE]        MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    (null  -  mean)/(x  *  Math.sqrt(0.0)));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    (null  -  mean)/(x  *  Math.sqrt(0.0)));		non-compiled	[CE]  not  a  statement	2	None	add
14	[BUG]  [BUGGY]    (Math.abs(x)/  standardDeviation);  [CE]  not  a  statement  [FE]          MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    (Math.abs(x)/  standardDeviation);  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    (Math.abs(x)/  standardDeviation);		non-compiled	[CE]  not  a  statement	2	None	add
15	[BUG]  [BUGGY]    (Math.abs(x)*  Math.abs(mean));  [CE]  not  a  statement  [FE]            MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    (Math.abs(x)*  Math.abs(mean));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    (Math.abs(x)*  Math.abs(mean));		non-compiled	[CE]  not  a  statement	2	None	add
16	[BUG]  [BUGGY]    double  mean  =  Math.abs(Math.abs(x)-  Math.abs(mean));  [CE]  variable  mean  might  not  have  been  initialized  [FE]    MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.abs(Math.abs(x)-  Math.abs(mean));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.abs(Math.abs(x)-  Math.abs(mean));		non-compiled	[CE]  variable  mean  might  not  have  been  initialized	2	None	add
17	[BUG]  [BUGGY]    double  mean  =  Math.abs(Math.abs(x));  [CE]  illegal  start  of  type  [FE]      MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.abs(Math.abs(x));  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.abs(Math.abs(x));		non-compiled	[CE]  illegal  start  of  type	2	None	add
18	[BUG]  [BUGGY]    double  mean  =  Math.abs(Math.abs(x)/  2.0);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.abs(Math.abs(x)/  2.0);  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.abs(Math.abs(x)/  2.0);		non-compiled	[CE]  illegal  start  of  type	2	None	add
19	[BUG]  [BUGGY]    double  mean  =  Math.sqrt(Math.log(x)/  2.0);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    double  mean  =  Math.sqrt(Math.log(x)/  2.0);  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    double  mean  =  Math.sqrt(Math.log(x)/  2.0);		non-compiled	[CE]  illegal  start  of  type	2	None	add
