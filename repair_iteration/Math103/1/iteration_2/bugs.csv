bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.log(x)/  2.0,  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.log(x)/  2.0,  standardDeviation);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.log(x)/  2.0,  standardDeviation);	      double    mean    =    Math.sqrt(Math.log(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.exp(x)/  2.0);  [CE]  <identifier>  expected  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.exp(x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.exp(x)/  2.0);	      double    mean    =    Math.sqrt(Math.log(x)/    2.0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3	[BUG]  [BUGGY]  double  mean  =  Math.cos(Math.log(x)/  2.0);  [CE]  <identifier>  expected  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.cos(Math.log(x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.cos(Math.log(x)/  2.0);	      double    mean    =    Math.sqrt(Math.log(x)/    2.0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]      double  mean  =  Math.abs(x);  double  mean  =  Math.abs(x);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.abs(x);  double  mean  =  Math.abs(x);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.abs(x);    double  mean  =  Math.abs(x);	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
5	[BUG]  [BUGGY]      double  mean  =  Math.abs(x);  Double  mean  =  Math.abs(x);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.abs(x);  Double  mean  =  Math.abs(x);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.abs(x);    Double  mean  =  Math.abs(x);	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
6	[BUG]  [BUGGY]      double  mean  =  Math.abs(x);  double  means  =  Math.abs(x);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.abs(x);  double  means  =  Math.abs(x);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.abs(x);    double  means  =  Math.abs(x);	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
7	[BUG]  [BUGGY]      double  mean  =  Math.abs(x);  long  mean  =  Math.abs(x);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.abs(x);  long  mean  =  Math.abs(x);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.abs(x);    long  mean  =  Math.abs(x);	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
8	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(x);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(x);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(x);	      double    mean    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  double  mean  =  Math.abs(sd);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(sd);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(sd);	      double    mean    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  double  mean  =  Math.log(x);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.log(x);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.log(x);	      double    mean    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  double  mean  =  Math.abs(x  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x  -  1);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x  -  1);	      double    mean    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]      double  mean  =  Math.log(x)/  2.0;  double  mean  =  Math.log(x)/  2.0;  [CE]  illegal  start  of  type  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.log(x)/  2.0;  double  mean  =  Math.log(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.log(x)/    2.0;    double  mean  =  Math.log(x)/  2.0;	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
13	[BUG]  [BUGGY]      double  mean  =  Math.log(x)/  2.0;  Double  mean  =  Math.log(x)/  2.0;  [CE]  illegal  start  of  type  [FE]      MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.log(x)/  2.0;  Double  mean  =  Math.log(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.log(x)/    2.0;    Double  mean  =  Math.log(x)/  2.0;	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
14	[BUG]  [BUGGY]      double  mean  =  Math.log(x)/  2.0;  long  mean  =  Math.log(x)/  2.0;  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.log(x)/  2.0;  long  mean  =  Math.log(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.log(x)/    2.0;    long  mean  =  Math.log(x)/  2.0;	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
15	[BUG]  [BUGGY]  double  mean  =  Math.log(x)/  sd;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.log(x)/  sd;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.log(x)/  sd;	      double    mean    =    Math.log(x)/    cumulativeProbability;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  double  mean  =  Math.log(x)/  standardDeviation;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.log(x)/  standardDeviation;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.log(x)/  standardDeviation;	      double    mean    =    Math.log(x)/    cumulativeProbability;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT;	      double    mean    =    Math.log(x)/    cumulativeProbability;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(2.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(standardDeviation  *  Math.sqrt(2.0)));	      (null    -    mean)/(x    *    Math.sqrt(2.0)));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  (null  -  mean)/(x  *  Math.log(2.0)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(x  *  Math.log(2.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(x  *  Math.log(2.0)));	      (null    -    mean)/(x    *    Math.sqrt(2.0)));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  (null  -  mean)/(message  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(message  *  Math.sqrt(2.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(message  *  Math.sqrt(2.0)));	      (null    -    mean)/(x    *    Math.sqrt(2.0)));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
21	[BUG]  [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(1.0)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(1.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(standardDeviation  *  Math.sqrt(1.0)));	      (null    -    mean)/(x    *    Math.sqrt(1.0)));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  (null  -  mean)/(x  *  Math.log(1.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(x  *  Math.log(1.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(x  *  Math.log(1.0)));	      (null    -    mean)/(x    *    Math.sqrt(1.0)));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.abs(x)/  2.0);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.abs(x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.abs(x)/  2.0);	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)/  2.0,  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)/  2.0,  standardDeviation);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)/  2.0,  standardDeviation);	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  double  mean  =  Math.max(Math.abs(x)/  2.0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.max(Math.abs(x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.max(Math.abs(x)/  2.0);	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  (Math.abs(x)/  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)/  sd);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)/  sd);	      (Math.abs(x)/    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  (Math.abs(x)/  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)/  mean);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)/  mean);	      (Math.abs(x)/    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  (Math.abs(x)/  standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)/  standardDeviation,  sd);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)/  standardDeviation,  sd);	      (Math.abs(x)/    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(standardDeviation));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(standardDeviation));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  Math.abs(standardDeviation));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(sd));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(sd));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  Math.abs(sd));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.doubleValue(x));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.doubleValue(x));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.doubleValue(x));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.standardDeviation));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.standardDeviation));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.standardDeviation));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
33	[BUG]  [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(0.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(0.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(standardDeviation  *  Math.sqrt(0.0)));	      (null    -    mean)/(x    *    Math.sqrt(0.0)));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
34	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  sd;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  sd;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  x;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  x;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  x;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  standardDeviation;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  standardDeviation;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  standardDeviation;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  msg;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  msg;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  msg;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  (standardDeviation  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (standardDeviation  *  Math.sqrt(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(standardDeviation  *  Math.sqrt(2.0)));	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  double  standardDeviation  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  standardDeviation  *  Math.sqrt(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  standardDeviation  *  Math.sqrt(2.0)));	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  (standardDeviation  *  Math.sqrt(1.0)));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (standardDeviation  *  Math.sqrt(1.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(standardDeviation  *  Math.sqrt(1.0)));	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  (sd  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (sd  *  Math.sqrt(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(sd  *  Math.sqrt(2.0)));	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
43	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  ((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  ((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    ((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
44	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (mean)/  (standardDeviation  *  Math.log(2.0)));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (mean)/  (standardDeviation  *  Math.log(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (mean)/  (standardDeviation  *  Math.log(2.0)));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
45	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (normalDeviation  *  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (normalDeviation  *  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (1.0  +  Erf.erf((  x  -  mean)/  (normalDeviation  *  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
46	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2))));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
47	[BUG]  [BUGGY]  (mean  *  Math.log(x)));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (mean  *  Math.log(x)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(mean  *  Math.log(x)));	      (x    *    Math.log(mean)));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  (message  *  Math.log(x)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (message  *  Math.log(x)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(message  *  Math.log(x)));	      (x    *    Math.log(mean)));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  (x  *  Math.rint(mean)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (x  *  Math.rint(mean)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(x  *  Math.rint(mean)));	      (x    *    Math.log(mean)));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(x)/  2.0;  [CE]  illegal  start  of  type  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(x)/  2.0;	      double    mean    =    Math.log(x)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  2.0;  [CE]  illegal  start  of  type  [FE]      MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  2.0;	      double    mean    =    Math.log(x)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  double  mean  =  Math.cos(x)/  2.0;  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.cos(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.cos(x)/  2.0;	      double    mean    =    Math.log(x)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  (Math.abs(x)/  Math.abs(mean));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)/  Math.abs(mean));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)/  Math.abs(mean));	      (Math.abs(x)*    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  (Math.abs(mean)*  Math.abs(x));  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(mean)*  Math.abs(x));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(mean)*  Math.abs(x));	      (Math.abs(x)*    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  (Math.abs(x)*  Math.abs(sd));  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)*  Math.abs(sd));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)*  Math.abs(sd));	      (Math.abs(x)*    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.abs(x));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.abs(x));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.abs(x));	      double    mean    =    Math.abs(Math.abs(x));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
57	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x  -  standardDeviation));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x  -  standardDeviation));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x  -  standardDeviation));	      double    mean    =    Math.abs(Math.abs(x));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(sd));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(sd));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(sd));	      double    mean    =    Math.abs(Math.abs(x));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
59	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  standardDeviation);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  standardDeviation);	      double    mean    =    Math.abs(Math.abs(x));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  Math.sqrt(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  Math.sqrt(2.0)));	  return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  2.0)/  (standardDeviation  *  Math.log(2.0)));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  2.0)/  (standardDeviation  *  Math.log(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  2.0)/  (standardDeviation  *  Math.log(2.0)));	  return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  (null  -  mean)/(normalDeviation  *  Math.sqrt(0.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(normalDeviation  *  Math.sqrt(0.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(normalDeviation  *  Math.sqrt(0.0)));	      (null    -    mean)/(x    *    Math.sqrt(0.0)));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(1)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(1)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(standardDeviation  *  Math.sqrt(1)));	      (null    -    mean)/(x    *    Math.sqrt(1.0)));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  (mean  *  Math.pow(10,  x)));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (mean  *  Math.pow(10,  x)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(mean  *  Math.pow(10,  x)));	      (x    *    Math.log(mean)));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  (null  -  mean)/(normalDeviation  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(normalDeviation  *  Math.sqrt(2.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(normalDeviation  *  Math.sqrt(2.0)));	      (null    -    mean)/(x    *    Math.sqrt(2.0)));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
66	[BUG]  [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(2)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(standardDeviation  *  Math.sqrt(2)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(standardDeviation  *  Math.sqrt(2)));	      (null    -    mean)/(x    *    Math.sqrt(2.0)));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
67	[BUG]  [BUGGY]  (null  /  mean)/(x  *  Math.sqrt(2.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  /  mean)/(x  *  Math.sqrt(2.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  /  mean)/(x  *  Math.sqrt(2.0)));	      (null    -    mean)/(x    *    Math.sqrt(2.0)));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]      double  mean  =  Math.log(x)/  2.0;  Math.log(x)/  2.0;  [CE]  illegal  start  of  type  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]      double  mean  =  Math.log(x)/  2.0;  Math.log(x)/  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	        double    mean    =    Math.log(x)/    2.0;    Math.log(x)/  2.0;	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
69	[BUG]  [BUGGY]  double  mean  =  Math.abs(x  +  1);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x  +  1);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x  +  1);	      double    mean    =    Math.abs(x);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  MILLIS;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  MILLIS;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  MILLIS;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
71	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  dev;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  dev;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  dev;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (message  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (message  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (message  -  mean)/  (standardDeviation  *  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
73	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  *  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  *  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (standardDeviation  *  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
74	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.sqrt(2.0))));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.sqrt(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.sqrt(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
75	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  *  Math.log(2.0)));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  *  Math.log(2.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (standardDeviation  *  Math.log(2.0)));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
76	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  1);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  1);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  1);	      double    mean    =    Math.abs(Math.abs(x));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
77	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(Math.abs(x)-  Math.abs(standardDeviation));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(Math.abs(x)-  Math.abs(standardDeviation));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(Math.abs(x)-  Math.abs(standardDeviation));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  Double  mean  =  Math.abs(Math.abs(x)-  Math.abs(standardDeviation));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  Double  mean  =  Math.abs(Math.abs(x)-  Math.abs(standardDeviation));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	Double  mean  =  Math.abs(Math.abs(x)-  Math.abs(standardDeviation));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.DEFAULT_SYNTHETIC));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.DEFAULT_SYNTHETIC));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)-  Math.abs(NormalDistributionImpl.DEFAULT_SYNTHETIC));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
80	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.random()  /  2.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.random()  /  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.random()  /  2.0);	      double    mean    =    Math.sqrt(Math.log(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.log(x)/  2.0  /  2.0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.log(x)/  2.0  /  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.log(x)/  2.0  /  2.0);	      double    mean    =    Math.sqrt(Math.log(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
82	[BUG]  [BUGGY]  double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT_MESSAGE;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT_MESSAGE;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT_MESSAGE;	      double    mean    =    Math.log(x)/    cumulativeProbability;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT_SYNTHETIC;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT_SYNTHETIC;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.log(x)/  StandardDistributionImpl.DEFAULT_SYNTHETIC;	      double    mean    =    Math.log(x)/    cumulativeProbability;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  (Math.abs(x)/  2.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)/  2.0);	      (Math.abs(x)/    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
85	[BUG]  [BUGGY]  (standardDeviation  *  Math.sqrt(0.0)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (standardDeviation  *  Math.sqrt(0.0)));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(standardDeviation  *  Math.sqrt(0.0)));	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
86	[BUG]  [BUGGY]  double  standardDeviation  =  Math.sqrt(x);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  standardDeviation  =  Math.sqrt(x);  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  standardDeviation  =  Math.sqrt(x);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
87	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x)/  2.0  -  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x)/  2.0  -  standardDeviation);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x)/  2.0  -  standardDeviation);	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  double  mean  =  Math.min(Math.abs(x)/  2.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.min(Math.abs(x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.min(Math.abs(x)/  2.0);	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  double  mean  =  Math.random()  /  2.0;  [CE]  illegal  start  of  type  [FE]    MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.random()  /  2.0;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.random()  /  2.0;	      double    mean    =    Math.log(x)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
90	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  -  mean)/  (standardDeviation  *  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (standardDeviation  -  mean)/  (standardDeviation  *  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
91	[BUG]  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  /  Math.log(2.0))));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((  x  -  mean)/  (standardDeviation  *  Math.log(2.0))));  (standardDeviation  /  Math.log(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return    0.5    *    (1.0    +    Erf.erf((    x    -    mean)/    (standardDeviation    *    Math.log(2.0))));    (standardDeviation  /  Math.log(2.0))));	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
92	[BUG]  [BUGGY]  (Math.abs(x)*  Math.abs(standardDeviation));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(x)*  Math.abs(standardDeviation));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(x)*  Math.abs(standardDeviation));	      (Math.abs(x)*    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
93	[BUG]  [BUGGY]  double  mean  =  Math.sqrt(Math.pow(10,  x)/  2.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.sqrt(Math.pow(10,  x)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.sqrt(Math.pow(10,  x)/  2.0);	      double    mean    =    Math.sqrt(Math.log(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(mean));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(mean));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(mean));	      double    mean    =    Math.abs(Math.abs(x));    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
95	[BUG]  [BUGGY]  double  mean  =  Math.abs(x)/  mean;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(x)/  mean;  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(x)/  mean;	      double    mean    =    Math.abs(mean)/    x;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
96	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(mean)-  Math.abs(x));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(mean)-  Math.abs(x));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(mean)-  Math.abs(x));	      double    mean    =    Math.abs(Math.abs(x)-    Math.abs(mean));    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
97	[BUG]  [BUGGY]  (x  /  Math.log(mean)));  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (x  /  Math.log(mean)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(x  /  Math.log(mean)));	      (x    *    Math.log(mean)));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
98	[BUG]  [BUGGY]  (x  *  Math.log(Math.log(x)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (x  *  Math.log(Math.log(x)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(x  *  Math.log(Math.log(x)));	      (x    *    Math.log(mean)));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  [BUGGY]    (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(standardDeviation  *  Math.sqrt(2.0))));	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
100	[BUG]  [BUGGY]  (null  -  mean)/(message  *  Math.sqrt(1.0)));  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  -  mean)/(message  *  Math.sqrt(1.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  -  mean)/(message  *  Math.sqrt(1.0)));	      (null    -    mean)/(x    *    Math.sqrt(1.0)));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
101	[BUG]  [BUGGY]  (null  /  mean)/(x  *  Math.sqrt(1.0)));  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (null  /  mean)/(x  *  Math.sqrt(1.0)));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(null  /  mean)/(x  *  Math.sqrt(1.0)));	      (null    -    mean)/(x    *    Math.sqrt(1.0)));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
102	[BUG]  [BUGGY]  (Math.abs(sd)/  standardDeviation);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  (Math.abs(sd)/  standardDeviation);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	(Math.abs(sd)/  standardDeviation);	      (Math.abs(x)/    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
103	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(sd)/  2.0);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(sd)/  2.0);  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(sd)/  2.0);	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
104	[BUG]  [BUGGY]  double  mean  =  Math.abs(Math.abs(x  /  2.0));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  double  cumulativeProbability(double  x)  throws  MathException  {    [BUGGY]  double  mean  =  Math.abs(Math.abs(x  /  2.0));  [BUGGY]    return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	double  mean  =  Math.abs(Math.abs(x  /  2.0));	      double    mean    =    Math.abs(Math.abs(x)/    2.0);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
