projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(0,this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean,this.message);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getValue());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=0L;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=2;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkNotNull(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)<=0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)<=0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkNotNull(message);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)<0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(1,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean,0));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=getMean();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean,1));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean,2));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=3;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=1L;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=getMean()+1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=getMean()-1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=getMean()/2.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)<=1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)==0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean,mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.min(this.mean,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)>0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(message)<0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(message!=null);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(message==null);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkNotNull(this.message);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(2,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(0,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(3,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean,this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean,1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean,0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.message,this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean,this.message-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(0,this.mean+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(0,this.mean-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(1,this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(mean!=null);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkNotNull(this,mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)<0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)<=10.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)==0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getMean()-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getMean(),1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getMean()+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getValue()-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getValue()+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.min(Math.max(this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.min(Math.max(this.mean)+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(this.mean,this.value));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean/2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(this.mean,this.mapping);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.min(this.message,getValue());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(value)<=0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(mean)>=0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkNotNull(this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkNotNull(identifier);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.min(this.mean,this.message);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.min(this.message,getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkArgument(message!=null);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.min(this.mean,this.mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(this.mean!=null);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.min(Math.max(this.mean,this.mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(message)<=0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=getMean()/2;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.message=Math.max(this.message,getMessage());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39Preconditions.checkState(Math.abs(message)<=0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39this.mean=Math.max(Math.max(10,this.mean));
