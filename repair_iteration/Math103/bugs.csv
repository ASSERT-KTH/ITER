bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); [FE] MaxIterationsExceededException [CONTEXT] public double cumulativeProbability(double x) throws MathException { [BUGGY] return 0.5 * (1.0 + Erf.erf((x - mean) /     (standardDeviation * Math.sqrt(2.0)))); [BUGGY] (standardDeviation * Math.sqrt(2.0)))); } [CLASS] NormalDistributionImpl [METHOD] cumulativeProbability [RETURN_TYPE] double  double x [VARIABLES] double mean sd standardDeviation x long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	
2	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public double cumulativeProbability(double x) throws MathException { [BUGGY] [BUGGY] return 0.5 * (1.0 + Erf.erf((x - mean) /     (standardDeviation * Math.sqrt(2.0)))); (standardDeviation * Math.sqrt(2.0)))); } [CLASS] NormalDistributionImpl [METHOD] cumulativeProbability [RETURN_TYPE] double  double x [VARIABLES] double mean sd standardDeviation x long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	add	
3	[BUG] [BUGGY] super(); [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ [BUGGY] super(); [BUGGY] setMean(mean); setStandardDeviation(sd); } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	
4	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ [BUGGY] [BUGGY] super(); setMean(mean); setStandardDeviation(sd); } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	add	
5	[BUG] [BUGGY] private double mean = 0; [FE] MaxIterationsExceededException [CONTEXT] [BUGGY] private double mean = 0; [BUGGY]  [CLASS] NormalDistributionImpl  [VARIABLES] 	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	
6	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] [BUGGY] [BUGGY] private double mean = 0; [CLASS] NormalDistributionImpl  [VARIABLES] 	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	add	
7	[BUG] [BUGGY] private double standardDeviation = 1; [FE] MaxIterationsExceededException [CONTEXT] [BUGGY] private double standardDeviation = 1; [BUGGY]  [CLASS] NormalDistributionImpl  [VARIABLES] 	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	
8	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] [BUGGY] [BUGGY] private double standardDeviation = 1; [CLASS] NormalDistributionImpl  [VARIABLES] 	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	add	
9	[BUG] [BUGGY] setMean(mean); [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ super(); [BUGGY] setMean(mean); [BUGGY] setStandardDeviation(sd); } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	
10	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ super(); [BUGGY] [BUGGY] setMean(mean); setStandardDeviation(sd); } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	add	
11	[BUG] [BUGGY] setStandardDeviation(sd); [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ super(); setMean(mean); [BUGGY] setStandardDeviation(sd); [BUGGY] } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	
12	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ super(); setMean(mean); [BUGGY] [BUGGY] setStandardDeviation(sd); } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	add	
13	[BUG] [BUGGY] } [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ super(); setMean(mean); setStandardDeviation(sd); [BUGGY] } [BUGGY]  [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	
14	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public NormalDistributionImpl(double mean, double sd){ super(); setMean(mean); setStandardDeviation(sd); [BUGGY] [BUGGY] } [CLASS] NormalDistributionImpl [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)  double mean double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	add	
15	[BUG] [BUGGY] this.mean = mean; [FE] MaxIterationsExceededException [CONTEXT] public void setMean(double mean) { [BUGGY] this.mean = mean; [BUGGY] } [CLASS] NormalDistributionImpl [METHOD] setMean [RETURN_TYPE] void  double mean [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	
16	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public void setMean(double mean) { [BUGGY] [BUGGY] this.mean = mean; } [CLASS] NormalDistributionImpl [METHOD] setMean [RETURN_TYPE] void  double mean [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	add	
17	[BUG] [BUGGY] } [FE] MaxIterationsExceededException [CONTEXT] public void setMean(double mean) { this.mean = mean; [BUGGY] } [BUGGY]  [CLASS] NormalDistributionImpl [METHOD] setMean [RETURN_TYPE] void  double mean [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	
18	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public void setMean(double mean) { this.mean = mean; [BUGGY] [BUGGY] } [CLASS] NormalDistributionImpl [METHOD] setMean [RETURN_TYPE] void  double mean [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	add	
19	[BUG] [BUGGY] if (sd <= 0.0) { [FE] MaxIterationsExceededException [CONTEXT] public void setStandardDeviation(double sd) { [BUGGY] if (sd <= 0.0) { [BUGGY] throw new IllegalArgumentException( "Standard deviation must be positive."); } standardDeviation = sd; } [CLASS] NormalDistributionImpl [METHOD] setStandardDeviation [RETURN_TYPE] void  double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	
20	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public void setStandardDeviation(double sd) { [BUGGY] [BUGGY] if (sd <= 0.0) { throw new IllegalArgumentException( "Standard deviation must be positive."); } standardDeviation = sd; } [CLASS] NormalDistributionImpl [METHOD] setStandardDeviation [RETURN_TYPE] void  double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	add	
21	[BUG] [BUGGY] standardDeviation = sd; [FE] MaxIterationsExceededException [CONTEXT] public void setStandardDeviation(double sd) { if (sd <= 0.0) { throw new IllegalArgumentException( "Standard deviation must be positive."); } [BUGGY] standardDeviation = sd; [BUGGY] } [CLASS] NormalDistributionImpl [METHOD] setStandardDeviation [RETURN_TYPE] void  double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	
22	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public void setStandardDeviation(double sd) { if (sd <= 0.0) { throw new IllegalArgumentException( "Standard deviation must be positive."); } [BUGGY] [BUGGY] standardDeviation = sd; } [CLASS] NormalDistributionImpl [METHOD] setStandardDeviation [RETURN_TYPE] void  double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	add	
23	[BUG] [BUGGY] } [FE] MaxIterationsExceededException [CONTEXT] public void setStandardDeviation(double sd) { if (sd <= 0.0) { throw new IllegalArgumentException( "Standard deviation must be positive."); } standardDeviation = sd; [BUGGY] } [BUGGY]  [CLASS] NormalDistributionImpl [METHOD] setStandardDeviation [RETURN_TYPE] void  double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	replace	
24	[BUG] [BUGGY] [FE] MaxIterationsExceededException [CONTEXT] public void setStandardDeviation(double sd) { if (sd <= 0.0) { throw new IllegalArgumentException( "Standard deviation must be positive."); } standardDeviation = sd; [BUGGY] [BUGGY] } [CLASS] NormalDistributionImpl [METHOD] setStandardDeviation [RETURN_TYPE] void  double sd [VARIABLES] double mean sd standardDeviation long serialVersionUID boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	98	98	1	add	
