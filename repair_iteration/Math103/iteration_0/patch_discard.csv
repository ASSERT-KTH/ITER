compilation error,77,replace,[CE] illegal start of expression,} ,setStandardDeviation(standardDeviation);
compilation error,77,replace,[CE] illegal start of expression,} ,super.setMean(mean);
compilation error,77,replace,[CE] illegal start of expression,} ,StandardDeviation.setStandardDeviation(mean);
compilation error,77,replace,[CE] illegal start of expression,} , 
increase failing tests,109,replace, [FE] AssertionFailedError testExtremeValues,return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); ,return 0.5 *(2.0 + Erf.erf(( x - mean)/(standardDeviation * Math.sqrt(2.0))));
increase failing tests,109,replace, [FE] AssertionFailedError testExtremeValues,return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); ,return 1.5 *(1.0 + Erf.erf(( x - mean)/(standardDeviation * Math.sqrt(2.0))));
compilation error,109,replace,[CE] missing return statement,return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); , 
compilation error,76,replace,[CE] cannot find symbol StandardDeviation,this.mean = mean; ,this.mean = mean * StandardDeviation;
increase failing tests,76,replace, [FE] MaxIterationsExceededException testExtremeValues,this.mean = mean; , 
compilation error,39,replace,[CE] cannot find symbol mean,private double mean = 0; , 
compilation error,53,replace,[CE] illegal start of expression,} ,setStandardDeviation(sd);
compilation error,53,replace,[CE] illegal start of expression,} ,setNormalDeviation(standardDeviation);
compilation error,53,replace,[CE] illegal start of expression,} ,setStandardDeviation(sd); normalDeviation = sd;
compilation error,53,replace,[CE] illegal start of expression,} ,setNormalStandardDeviation(sd);
compilation error,53,replace,[CE] illegal start of expression,} , 
compilation error,39,add,[CE] illegal start of type,,  return super.getMean();
compilation error,39,add,[CE] illegal start of type,,  return super.getResult();
compilation error,39,add,[CE] illegal start of type,,  return Math.max(mean, Integer.MAX_VALUE);
compilation error,39,add,[CE] illegal start of type,,  return getMean();
compilation error,39,add,[CE] variable mean is already defined in class NormalDistributionImpl,,  double mean = Math.max(Math.exp(0.0, 0.0));
compilation error,52,replace,[CE] not a statement,setStandardDeviation(sd); ,setStandardDeviation(sd)- 1;
compilation error,52,replace,[CE] not a statement,setStandardDeviation(sd); ,setStandardDeviation(sd)- sd;
compilation error,52,replace,[CE] not a statement,setStandardDeviation(sd); ,setStandardDeviation(sd)+ sd;
increase failing tests,52,replace, [FE] MaxIterationsExceededException testExtremeValues,setStandardDeviation(sd); , 
compilation error,93,add,[CE] cannot find symbol,,  super.setStandardDeviation(sd);
compilation error,93,add,[CE] method sqrt in class Math cannot be applied to given types;,,  standardDeviation = Math.sqrt(getMean(), sd);
compilation error,93,add,[CE] double cannot be dereferenced,,  standardDeviation.setMean(sd);
compilation error,51,add,[CE] cannot find symbol,,  setNormalizedMean(mean); setStandardDeviation(sd);
compilation error,51,add,[CE] cannot find symbol,,  setMean(mean); setNormalDeviation(sd);
compilation error,51,add,[CE] cannot find symbol,,  SetStandardDeviation(sd);
compilation error,51,replace,[CE] method setMean in class NormalDistributionImpl cannot be applied to given types;,setMean(mean); ,setMean(mean, sd);
increase failing tests,51,replace, [FE] MaxIterationsExceededException testExtremeValues,setMean(mean); ,setMean(mean + sd);
compilation error,51,replace,[CE] cannot find symbol,setMean(mean); ,setMethod(mean);
compilation error,53,add,[CE] cannot find symbol,,  setNormalStandardDeviation(standardDeviation);
compilation error,52,add,[CE] cannot find symbol,,  setNormalStandardDeviation(sd);
increase failing tests,109,add, [FE] MaxIterationsExceededException testExtremeValues,,  double mean = Math.sqrt(getMean());
increase failing tests,109,add, [FE] MaxIterationsExceededException testExtremeValues,,  double mean = Math.sqrt(Math.abs(x));
increase failing tests,109,add, [FE] MaxIterationsExceededException testExtremeValues,,  double mean = Math.sqrt(Math.random());
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  double mean = Math.sqrt(x);
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  double mean = Math.sqrt(getMean() / x);
compilation error,42,replace,[CE] cannot find symbol standardDeviation,private double standardDeviation = 1; , 
increase failing tests,93,replace, [FE] IllegalArgumentException testExtremeValues,if (sd <= 0.0) { ,if(sd > 0.0) {
increase failing tests,93,replace, [FE] MaxIterationsExceededException testExtremeValues,if (sd <= 0.0) { ,if(sd < 0.0) {
increase failing tests,93,replace, [FE] IllegalArgumentException testExtremeValues,if (sd <= 0.0) { ,if(sd >= 0.0) {
compilation error,76,add,[CE] cannot find symbol,,  super.setMean(mean);
compilation error,76,add,[CE] cannot find symbol,,  super.setMean(mean); this.standardDeviation = standardDeviation;
compilation error,76,add,[CE] cannot find symbol,,  super.setMean(mean); this.standardDeviation = standardDeviation * getStandardDeviation();
compilation error,76,add,[CE] cannot find symbol,,  super.setMean(mean); this.standardDeviation = StandardDeviation.getStandardDeviation();
compilation error,50,replace,[CE] cannot find symbol StandardDeviation,super(); ,super(StandardDeviation, sd);
compilation error,50,replace,[CE] cannot find symbol StandardDeviation,super(); ,super(StandardDeviation);
compilation error,50,replace,[CE] ';' expected,super(); ,super(), sd;
compilation error,50,add,[CE] call to super must be first statement in constructor,,  setStandardDeviation(sd);
compilation error,50,add,[CE] call to super must be first statement in constructor,,  super(); setStandardDeviation(sd);
compilation error,50,add,[CE] call to super must be first statement in constructor,,  super(); setMean(mean); setStandardDeviation(sd);
compilation error,50,add,[CE] call to super must be first statement in constructor,,  super(); setMean(mean);
compilation error,50,add,[CE] cannot find symbol,,  SetStandardDeviation(sd);
compilation error,42,add,[CE] illegal start of type,,  return normalDeviation * Math.sqrt(getStandardDeviation() - standardDeviation);
compilation error,42,add,[CE] illegal start of type,,  return normalDeviation * Math.sqrt(getStandardDeviation());
compilation error,42,add,[CE] illegal start of type,,  return super.evaluate(standardDeviation);
compilation error,42,add,[CE] illegal start of type,,  return normalDeviation * Math.sqrt(getStandardDeviation(), StandardDistributionImpl.MAX_VALUE);
compilation error,42,add,[CE] illegal start of type,,  return normalDeviation * Math.sqrt(getStandardDeviation(), StandardDeviation.MAX_VALUE);
compilation error,93,add,[CE] cannot find symbol,,  super.setNormalizedDeviation(sd);
compilation error,93,add,[CE] cannot find symbol,,  super.setNormalDeviation(sd);
compilation error,93,add,[CE] cannot find symbol,,  standardDeviation = Math.standard(sd);
compilation error,93,add,[CE] cannot find symbol,,  super.setMean(sd);
increase failing tests,51,replace, [FE] MaxIterationsExceededException testExtremeValues,setMean(mean); ,setMean(mean - mean);
increase failing tests,51,replace, [FE] MaxIterationsExceededException testExtremeValues,setMean(mean); ,setMean(mean / sd);
increase failing tests,52,replace, [FE] IllegalArgumentException testExtremeValues,setStandardDeviation(sd); ,setStandardDeviation(sd - mean);
increase failing tests,52,replace, [FE] MaxIterationsExceededException testExtremeValues,setStandardDeviation(sd); ,setStandardDeviation(sd - 1);
compilation error,52,replace,[CE] method setStandardDeviation in class NormalDistributionImpl cannot be applied to given types;,setStandardDeviation(sd); ,setStandardDeviation(sd, sd);
compilation error,109,replace,[CE] ')' expected,return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); ,return 0.5 *(1.0 + Erf.erf(( x - mean)/(standardDeviation * Math.sqrt(2.0)));
increase failing tests,93,replace, [FE] MaxIterationsExceededException testExtremeValues,if (sd <= 0.0) { ,if(sd <.5) {
increase failing tests,77,add, [FE] MaxIterationsExceededException testExtremeValues,,  standardDeviation = Math.sqrt(standardDeviation); this.mean = standardDeviation;
increase failing tests,77,add, [FE] MaxIterationsExceededException testExtremeValues,,  standardDeviation = Math.sqrt(getStandardDeviation()); this.mean = standardDeviation;
compilation error,77,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(new Double(mean));
compilation error,53,replace,[CE] illegal start of expression,} ,setNormalDeviation(sd);
compilation error,53,replace,[CE] illegal start of expression,} ,setNormalized();
compilation error,53,add,[CE] cannot find symbol,,  setNormalizedDeviation(standardDeviation);
compilation error,53,add,[CE] cannot find symbol,,  setNormalizedDeviation(sd);
compilation error,76,add,[CE] cannot find symbol Preconditions,,  Preconditions.checkNotNull(mean);
compilation error,76,add,[CE] double cannot be dereferenced,,  standardDeviation.setMean(mean);
compilation error,39,add,[CE] variable mean is already defined in class NormalDistributionImpl,,  double mean = Math.max(getMean(), getStandardDeviation());
compilation error,39,add,[CE] variable mean is already defined in class NormalDistributionImpl,,  double mean = Math.max(getMean() / getStandardDeviation());
compilation error,39,add,[CE] variable mean is already defined in class NormalDistributionImpl,,  double mean = Math.max(getMean(), getSlope());
compilation error,39,add,[CE] variable mean is already defined in class NormalDistributionImpl,,  double mean = Math.max(getMean(), getNumber());
compilation error,42,add,[CE] illegal start of type,,  return normalDeviation * Math.sqrt(variance);
compilation error,42,add,[CE] illegal start of type,,  return StandardDistributionImpl.getNormalizedDeviation();
compilation error,42,add,[CE] illegal start of type,,  return StandardDistributionImpl.deviation();
compilation error,42,add,[CE] illegal start of type,,  return StandardDistributionImpl.standardDeviation();
compilation error,42,add,[CE] illegal start of type,,  return super.standardDeviation;
increase failing tests,52,add, [FE] MaxIterationsExceededException testExtremeValues,,  setStandardDeviation(mean);
compilation error,52,add,[CE] cannot find symbol,,  setDefaultDeviation(sd);
compilation error,52,add,[CE] cannot find symbol,,  setNormalDeviation(sd);
compilation error,52,add,[CE] cannot find symbol md,,  setStandardDeviation(md);
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  standardDeviation = Math.sqrt(getMean());
compilation error,109,add,[CE] no suitable method found for max(double),,  standardDeviation = Math.max(standardDeviation);
increase failing tests,109,add, [FE] MaxIterationsExceededException testExtremeValues,,  double mean = Math.ceil(getMean());
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  standardDeviation = Math.max(standardDeviation, x);
compilation error,51,add,[CE] cannot find symbol,,  setMean(mean); setNormalDeviation(standardDeviation);
compilation error,50,add,[CE] call to super must be first statement in constructor,,  setMean(mean); setStandardDeviation(sd);
compilation error,50,replace,[CE] not a statement,super(); ,super() &&(getStandardDeviation() * Math.sqrt(mean));
compilation error,50,replace,[CE] not a statement,super(); ,super() &&(getStandardDeviation() * Math.pow(10, sd));
compilation error,50,replace,[CE] not a statement,super(); ,super() &&(getStandardDeviation() * getStandardDeviation()));
increase failing tests,76,replace, [FE] MaxIterationsExceededException testExtremeValues,this.mean = mean; ,this.mean = mean - standardDeviation;
increase failing tests,76,replace, [FE] MaxIterationsExceededException testExtremeValues,this.mean = mean; ,this.mean = mean * mean;
increase failing tests,76,replace, [FE] MaxIterationsExceededException testExtremeValues,this.mean = mean; ,this.mean = mean + 1;
increase failing tests,93,replace, [FE] MaxIterationsExceededException testExtremeValues,if (sd <= 0.0) { ,if(sd <=.5) {
compilation error,42,add,[CE] illegal start of type,,  return Math.sqrt(variance);
compilation error,42,add,[CE] illegal start of type,,  return Math.sqrt(Math.abs(standardDeviation));
compilation error,42,add,[CE] illegal start of type,,  return Math.sqrt(Math.exp(standardDeviation));
compilation error,42,add,[CE] illegal start of type,,  return Math.sqrt(getMean());
compilation error,42,add,[CE] illegal start of type,,  return Math.sqrt(getMean() / getSquares());
compilation error,52,add,[CE] cannot find symbol,,  setNormalizedStandardDeviation(sd);
compilation error,52,add,[CE] cannot find symbol,,  setNormalizedMean(sd);
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  double standardDeviation = Math.sqrt(getMean());
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  double standardDeviation = Math.sqrt(0.0);
increase failing tests,109,add, [FE] MaxIterationsExceededException testExtremeValues,,  double standardDeviation = Math.sqrt(2.0);
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  standardDeviation = Math.sqrt(0.0);
increase failing tests,109,add, [FE] AssertionFailedError testExtremeValues,,  double standardDeviation = Math.sqrt(2.0); standardDeviation = Math.sqrt(0.0);
compilation error,76,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(standardDeviation);
compilation error,76,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(mean);
compilation error,76,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(getMean());
compilation error,76,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(new Double(mean));
compilation error,76,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setMean(standardDeviation);
compilation error,77,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(standardDeviation);
compilation error,77,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setMean(standardDeviation);
compilation error,77,add,[CE] cannot find symbol StandardDeviation,,  StandardDeviation.setStandardDeviation(getMean());
compilation error,50,replace,[CE] ';' expected,super(); ,super(), sd);
compilation error,50,replace,[CE] cannot find symbol,super(); ,checkInterval(mean);
compilation error,53,add,[CE] cannot return a value from method whose result type is void,,  setStandardDeviation(sd); return new NormalDistributionImpl(new Double(mean));
compilation error,53,add,[CE] cannot return a value from method whose result type is void,,  setStandardDeviation(sd); return new NormalDistributionImpl(this, new Double(mean));
compilation error,53,add,[CE] cannot return a value from method whose result type is void,,  setStandardDeviation(sd); return new NormalDistributionImpl(this, new Double(Mean));
compilation error,50,add,[CE] call to super must be first statement in constructor,,  this(); setStandardDeviation(sd);
compilation error,50,add,[CE] call to super must be first statement in constructor,,  setStandardDeviation(getMean());
compilation error,93,add,[CE] method sqrt in class Math cannot be applied to given types;,,  double mean = Math.sqrt(getMean(), getMean());
increase failing tests,109,replace, [FE] AssertionFailedError testExtremeValues,return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); ,return 0.5 +(1.0 + Erf.erf(( x - mean)/(standardDeviation * Math.sqrt(2.0))));
compilation error,109,replace,[CE] ';' expected,return 0.5 * (1.0 + Erf.erf((x - mean) /  (standardDeviation * Math.sqrt(2.0)))); ,return 0.5 + Erf.erf(( x - mean)/(standardDeviation * Math.sqrt(2.0))));
compilation error,51,add,[CE] cannot find symbol,,  setNormalStandardDeviation(sd);
compilation error,51,add,[CE] cannot find symbol,,  setNormalizedMean(mean);
compilation error,76,replace,[CE] cannot find symbol StandardDeviation,this.mean = mean; ,this.mean = mean / StandardDeviation;
increase failing tests,52,replace, [FE] MaxIterationsExceededException testExtremeValues,setStandardDeviation(sd); ,setStandardDeviation(sd + 1);
compilation error,39,add,[CE] illegal start of type,,  return Math.max(Math.exp(-mean)* getMean());
compilation error,39,add,[CE] illegal start of type,,  return Math.max(Math.abs(getMean(), getMean()));
compilation error,39,add,[CE] illegal start of type,,  return Math.max(Math.abs(getMean(), getMinimumImpl()));
compilation error,39,add,[CE] illegal start of type,,  return Math.max(Math.exp(-mean)* mean);
compilation error,39,add,[CE] illegal start of type,,  return Math.max(Math.exp(-mean)* getStandardDeviation());
