projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77}
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77setStandardDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77super.setMean(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77StandardDeviation.setStandardDeviation(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(2.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return1.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean*standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean/standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean*StandardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=0.5;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=2;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53}
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setStandardDeviation(sd);normalDeviation=sd;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnsuper.getMean();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnsuper.getResult();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnMath.max(mean,Integer.MAX_VALUE);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returngetMean();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39doublemean=Math.max(Math.exp(0.0,0.0));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd)-1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd)-sd;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd)+sd;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93super.setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93standardDeviation=Math.sqrt(getMean(),sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93standardDeviation=Math.sqrt(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93standardDeviation=Math.sqrt(getMean()/sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93standardDeviation.setMean(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean);setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setNormalizedMean(mean);setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean);setNormalDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51SetStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean,sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean+sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMethod(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalStandardDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd);if(sd>0.0){setStandardDeviation(sd);}
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd);if(sd>0.5){setStandardDeviation(sd);}
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd);if(standardDeviation>0){setStandardDeviation(sd);}
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setNormalStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.abs(x));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(Math.random());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.sqrt(getMean()/x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42privatedoublestandardDeviation=1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42privatedoublestandardDeviation=0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42privatedoublestandardDeviation=2;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42privatedoublestandardDeviation=1L;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42privatedoublestandardDeviation=10.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd<=0.0){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd>0.0){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd<0.0){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd>=0.0){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77standardDeviation+=Math.sqrt(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76super.setMean(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76setStandardDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76super.setMean(mean);this.standardDeviation=standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76super.setMean(mean);this.standardDeviation=standardDeviation*getStandardDeviation();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76super.setMean(mean);this.standardDeviation=StandardDeviation.getStandardDeviation();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super(StandardDeviation,sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super(StandardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super(),sd;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super();setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super();setMean(mean);setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super();setMean(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50SetStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnnormalDeviation*Math.sqrt(getStandardDeviation()-standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnnormalDeviation*Math.sqrt(getStandardDeviation());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnsuper.evaluate(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnnormalDeviation*Math.sqrt(getStandardDeviation(),StandardDistributionImpl.MAX_VALUE);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnnormalDeviation*Math.sqrt(getStandardDeviation(),StandardDeviation.MAX_VALUE);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93super.setNormalizedDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93super.setNormalDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93standardDeviation=Math.standard(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93super.setMean(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean-mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean/sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd-mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd-1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd,sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0)));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd<.5){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd==0.0){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42privatedoublestandardDeviation=0.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77standardDeviation=Math.sqrt(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77standardDeviation=Math.sqrt(getStandardDeviation());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77standardDeviation=Math.sqrt(standardDeviation);this.mean=standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77standardDeviation=Math.sqrt(getStandardDeviation());this.mean=standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77StandardDeviation.setStandardDeviation(newDouble(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalized();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalizedDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setNormalizedDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76standardDeviation=Math.sqrt(getStandardDeviation());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76Preconditions.checkNotNull(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76standardDeviation=Math.sqrt(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76standardDeviation.setMean(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39doublemean=Math.max(getMean(),getStandardDeviation());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39doublemean=Math.max(getMean()/getStandardDeviation());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39doublemean=Math.max(getMean(),getSlope());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39doublemean=Math.max(getMean(),getNumber());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnnormalDeviation*Math.sqrt(variance);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnStandardDistributionImpl.getNormalizedDeviation();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnStandardDistributionImpl.deviation();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnStandardDistributionImpl.standardDeviation();
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnsuper.standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setDefaultDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setNormalDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(md);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109standardDeviation=Math.sqrt(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109standardDeviation=Math.max(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublemean=Math.ceil(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109standardDeviation=Math.max(standardDeviation,x);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=0L;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39privatedoublemean=0.0;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setMean(mean);setNormalDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50setMean(mean);setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super()&&(getStandardDeviation()*Math.sqrt(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super()&&(getStandardDeviation()*Math.pow(10,sd));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super()&&(getStandardDeviation()*getStandardDeviation()));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean-standardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean*mean;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean+1;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93if(sd<=.5){
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnMath.sqrt(variance);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnMath.sqrt(Math.abs(standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnMath.sqrt(Math.exp(standardDeviation));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnMath.sqrt(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java42returnMath.sqrt(getMean()/getSquares());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setNormalizedStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setNormalizedMean(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublestandardDeviation=Math.sqrt(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublestandardDeviation=Math.sqrt(0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublestandardDeviation=Math.sqrt(2.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109standardDeviation=Math.sqrt(0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109doublestandardDeviation=Math.sqrt(2.0);standardDeviation=Math.sqrt(0.0);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76StandardDeviation.setStandardDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76StandardDeviation.setStandardDeviation(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76StandardDeviation.setStandardDeviation(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76StandardDeviation.setStandardDeviation(newDouble(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76StandardDeviation.setMean(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77StandardDeviation.setStandardDeviation(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77StandardDeviation.setMean(standardDeviation);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java77StandardDeviation.setStandardDeviation(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50super(),sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50checkInterval(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setStandardDeviation(sd);returnnewNormalDistributionImpl(newDouble(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setStandardDeviation(sd);returnnewNormalDistributionImpl(this,newDouble(mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java53setStandardDeviation(sd);returnnewNormalDistributionImpl(this,newDouble(Mean));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50this();setStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java50setStandardDeviation(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93doublemean=Math.sqrt(getMean(),getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java93doublemean=Math.sqrt(getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5+(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java109return0.5+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0))));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setNormalStandardDeviation(sd);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java51setNormalizedMean(mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java76this.mean=mean/StandardDeviation;
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java52setStandardDeviation(sd+1);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnMath.max(Math.exp(-mean)*getMean());
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnMath.max(Math.abs(getMean(),getMean()));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnMath.max(Math.abs(getMean(),getMinimumImpl()));
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnMath.max(Math.exp(-mean)*mean);
projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java39returnMath.max(Math.exp(-mean)*getStandardDeviation());
