bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]  setStandardDeviation(standardDeviation);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	setStandardDeviation(standardDeviation);	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  super.setMean(mean);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]  super.setMean(mean);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	super.setMean(mean);	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  StandardDeviation.setStandardDeviation(mean);  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]  StandardDeviation.setStandardDeviation(mean);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	StandardDeviation.setStandardDeviation(mean);	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	  	return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /    (standardDeviation  *  Math.sqrt(2.0))));  	non-compiled	[CE]  missing  return  statement	1	None	replace
22	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]  this.mean  =  mean  *  standardDeviation;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	add	this.mean  =  mean  *  standardDeviation;	this.mean  =  mean;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	15	1
23	[BUG]  [BUGGY]  this.mean  =  mean  *  standardDeviation;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]  this.mean  =  mean  *  standardDeviation;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	this.mean  =  mean  *  standardDeviation;	this.mean  =  mean;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	15	1	replace
23	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]  this.mean  =  mean  /  standardDeviation;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	add	this.mean  =  mean  /  standardDeviation;	this.mean  =  mean;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	15	1
24	[BUG]  [BUGGY]  this.mean  =  mean  /  standardDeviation;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]  this.mean  =  mean  /  standardDeviation;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	this.mean  =  mean  /  standardDeviation;	this.mean  =  mean;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	15	1	replace
24	[BUG]  [BUGGY]  this.mean  =  mean  *  StandardDeviation;  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]  this.mean  =  mean  *  StandardDeviation;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	this.mean  =  mean  *  StandardDeviation;	this.mean  =  mean;  	non-compiled	[CE]  cannot  find  symbol  StandardDeviation	15	None	replace
32	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  1;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	add	private  double  mean  =  1;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1
33	[BUG]  [BUGGY]  private  double  mean  =  1;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  1;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	private  double  mean  =  1;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1	replace
33	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  0.5;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	add	private  double  mean  =  0.5;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1
34	[BUG]  [BUGGY]  private  double  mean  =  0.5;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  0.5;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	private  double  mean  =  0.5;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1	replace
34	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  2;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	add	private  double  mean  =  2;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1
35	[BUG]  [BUGGY]  private  double  mean  =  2;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  2;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	private  double  mean  =  2;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1	replace
35	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  mean  [CONTEXT]    [BUGGY]    [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	  	private  double  mean  =  0;  	non-compiled	[CE]  cannot  find  symbol  mean	5	None	replace
41	[BUG]  [BUGGY]  setStandardDeviation(sd);  [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setStandardDeviation(sd);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	setStandardDeviation(sd);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  setNormalDeviation(standardDeviation);  [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setNormalDeviation(standardDeviation);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	setNormalDeviation(standardDeviation);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  setStandardDeviation(sd);  normalDeviation  =  sd;  [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setStandardDeviation(sd);  normalDeviation  =  sd;  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	setStandardDeviation(sd);  normalDeviation  =  sd;	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  setNormalStandardDeviation(sd);  [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setNormalStandardDeviation(sd);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	setNormalStandardDeviation(sd);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]    return  super.getMean();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  super.getMean();  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  super.getMean();		non-compiled	[CE]  illegal  start  of  type	6	None	add
52	[BUG]  [BUGGY]    return  super.getResult();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  super.getResult();  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  super.getResult();		non-compiled	[CE]  illegal  start  of  type	6	None	add
53	[BUG]  [BUGGY]    return  Math.max(mean,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.max(mean,  Integer.MAX_VALUE);  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  Math.max(mean,  Integer.MAX_VALUE);		non-compiled	[CE]  illegal  start  of  type	6	None	add
54	[BUG]  [BUGGY]    return  getMean();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  getMean();  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  getMean();		non-compiled	[CE]  illegal  start  of  type	6	None	add
55	[BUG]  [BUGGY]    double  mean  =  Math.max(Math.exp(0.0,  0.0));  [CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl  [CONTEXT]    [BUGGY]    double  mean  =  Math.max(Math.exp(0.0,  0.0));  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    double  mean  =  Math.max(Math.exp(0.0,  0.0));		non-compiled	[CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl	6	None	add
62	[BUG]  [BUGGY]  setStandardDeviation(sd)-  1;  [CE]  not  a  statement  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]  setStandardDeviation(sd)-  1;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	setStandardDeviation(sd)-  1;	setStandardDeviation(sd);  	non-compiled	[CE]  not  a  statement	11	None	replace
63	[BUG]  [BUGGY]  setStandardDeviation(sd)-  sd;  [CE]  not  a  statement  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]  setStandardDeviation(sd)-  sd;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	setStandardDeviation(sd)-  sd;	setStandardDeviation(sd);  	non-compiled	[CE]  not  a  statement	11	None	replace
64	[BUG]  [BUGGY]  setStandardDeviation(sd)+  sd;  [CE]  not  a  statement  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]  setStandardDeviation(sd)+  sd;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	setStandardDeviation(sd)+  sd;	setStandardDeviation(sd);  	non-compiled	[CE]  not  a  statement	11	None	replace
71	[BUG]  [BUGGY]    super.setStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    super.setStandardDeviation(sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    super.setStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	20	None	add
72	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(getMean(),  sd);  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getMean(),  sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    standardDeviation  =  Math.sqrt(getMean(),  sd);		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	20	None	add
73	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getMean());  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	add	    standardDeviation  =  Math.sqrt(getMean());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	20	1
74	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(getMean());  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getMean());  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    standardDeviation  =  Math.sqrt(getMean());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	20	1	add
74	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getMean()  /  sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	add	    standardDeviation  =  Math.sqrt(getMean()  /  sd);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	20	1
75	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(getMean()  /  sd);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getMean()  /  sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    standardDeviation  =  Math.sqrt(getMean()  /  sd);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	20	1	add
75	[BUG]  [BUGGY]    standardDeviation.setMean(sd);  [CE]  double  cannot  be  dereferenced  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation.setMean(sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    standardDeviation.setMean(sd);		non-compiled	[CE]  double  cannot  be  dereferenced	20	None	add
81	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	add	    setStandardDeviation(sd);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	10	1
82	[BUG]  [BUGGY]    setStandardDeviation(sd);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setStandardDeviation(sd);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	10	1	add
82	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	add	    setMean(mean);  setStandardDeviation(sd);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	10	1
83	[BUG]  [BUGGY]    setMean(mean);  setStandardDeviation(sd);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setMean(mean);  setStandardDeviation(sd);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	10	1	add
83	[BUG]  [BUGGY]    setNormalizedMean(mean);  setStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setNormalizedMean(mean);  setStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setNormalizedMean(mean);  setStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	10	None	add
84	[BUG]  [BUGGY]    setMean(mean);  setNormalDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setMean(mean);  setNormalDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setMean(mean);  setNormalDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	10	None	add
85	[BUG]  [BUGGY]    SetStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    SetStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    SetStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	10	None	add
92	[BUG]  [BUGGY]  setMean(mean,  sd);  [CE]  method  setMean  in  class  NormalDistributionImpl  cannot  be  applied  to  given  types;  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]  setMean(mean,  sd);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	setMean(mean,  sd);	setMean(mean);  	non-compiled	[CE]  method  setMean  in  class  NormalDistributionImpl  cannot  be  applied  to  given  types;	9	None	replace
94	[BUG]  [BUGGY]  setMethod(mean);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]  setMethod(mean);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	setMethod(mean);	setMean(mean);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
105	[BUG]  [BUGGY]    setNormalStandardDeviation(standardDeviation);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    setNormalStandardDeviation(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	    setNormalStandardDeviation(standardDeviation);		non-compiled	[CE]  cannot  find  symbol	14	None	add
112	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(sd);  if(sd  >  0.0)  {  setStandardDeviation(sd);  }  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	add	    setStandardDeviation(sd);  if(sd  >  0.0)  {  setStandardDeviation(sd);  }		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	12	1
113	[BUG]  [BUGGY]    setStandardDeviation(sd);  if(sd  >  0.0)  {  setStandardDeviation(sd);  }  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(sd);  if(sd  >  0.0)  {  setStandardDeviation(sd);  }  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setStandardDeviation(sd);  if(sd  >  0.0)  {  setStandardDeviation(sd);  }		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	12	1	add
113	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(sd);  if(sd  >  0.5)  {  setStandardDeviation(sd);  }  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	add	    setStandardDeviation(sd);  if(sd  >  0.5)  {  setStandardDeviation(sd);  }		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	12	1
114	[BUG]  [BUGGY]    setStandardDeviation(sd);  if(sd  >  0.5)  {  setStandardDeviation(sd);  }  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(sd);  if(sd  >  0.5)  {  setStandardDeviation(sd);  }  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setStandardDeviation(sd);  if(sd  >  0.5)  {  setStandardDeviation(sd);  }		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	12	1	add
114	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(sd);  if(standardDeviation  >  0)  {  setStandardDeviation(sd);  }  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	add	    setStandardDeviation(sd);  if(standardDeviation  >  0)  {  setStandardDeviation(sd);  }		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	12	1
115	[BUG]  [BUGGY]    setStandardDeviation(sd);  if(standardDeviation  >  0)  {  setStandardDeviation(sd);  }  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(sd);  if(standardDeviation  >  0)  {  setStandardDeviation(sd);  }  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setStandardDeviation(sd);  if(standardDeviation  >  0)  {  setStandardDeviation(sd);  }		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	12	1	add
115	[BUG]  [BUGGY]    setNormalStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setNormalStandardDeviation(sd);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setNormalStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	12	None	add
131	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	add	private  double  standardDeviation  =  0;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1
132	[BUG]  [BUGGY]  private  double  standardDeviation  =  0;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	private  double  standardDeviation  =  0;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1	replace
132	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  2;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	add	private  double  standardDeviation  =  2;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1
133	[BUG]  [BUGGY]  private  double  standardDeviation  =  2;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  2;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	private  double  standardDeviation  =  2;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1	replace
133	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  1L;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	add	private  double  standardDeviation  =  1L;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1
134	[BUG]  [BUGGY]  private  double  standardDeviation  =  1L;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  1L;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	private  double  standardDeviation  =  1L;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1	replace
134	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  10.0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	add	private  double  standardDeviation  =  10.0;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1
135	[BUG]  [BUGGY]  private  double  standardDeviation  =  10.0;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  10.0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	private  double  standardDeviation  =  10.0;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1	replace
135	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  standardDeviation  [CONTEXT]    [BUGGY]    [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	  	private  double  standardDeviation  =  1;  	non-compiled	[CE]  cannot  find  symbol  standardDeviation	7	None	replace
154	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    standardDeviation  +=  Math.sqrt(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	add	    standardDeviation  +=  Math.sqrt(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	18	1
155	[BUG]  [BUGGY]    standardDeviation  +=  Math.sqrt(standardDeviation);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    standardDeviation  +=  Math.sqrt(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    standardDeviation  +=  Math.sqrt(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	18	1	add
161	[BUG]  [BUGGY]    super.setMean(mean);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    super.setMean(mean);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    super.setMean(mean);		non-compiled	[CE]  cannot  find  symbol	16	None	add
162	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    setStandardDeviation(standardDeviation);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	add	    setStandardDeviation(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	16	1
163	[BUG]  [BUGGY]    setStandardDeviation(standardDeviation);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    setStandardDeviation(standardDeviation);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    setStandardDeviation(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	16	1	add
163	[BUG]  [BUGGY]    super.setMean(mean);  this.standardDeviation  =  standardDeviation;  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    super.setMean(mean);  this.standardDeviation  =  standardDeviation;  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    super.setMean(mean);  this.standardDeviation  =  standardDeviation;		non-compiled	[CE]  cannot  find  symbol	16	None	add
164	[BUG]  [BUGGY]    super.setMean(mean);  this.standardDeviation  =  standardDeviation  *  getStandardDeviation();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    super.setMean(mean);  this.standardDeviation  =  standardDeviation  *  getStandardDeviation();  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    super.setMean(mean);  this.standardDeviation  =  standardDeviation  *  getStandardDeviation();		non-compiled	[CE]  cannot  find  symbol	16	None	add
165	[BUG]  [BUGGY]    super.setMean(mean);  this.standardDeviation  =  StandardDeviation.getStandardDeviation();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    super.setMean(mean);  this.standardDeviation  =  StandardDeviation.getStandardDeviation();  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    super.setMean(mean);  this.standardDeviation  =  StandardDeviation.getStandardDeviation();		non-compiled	[CE]  cannot  find  symbol	16	None	add
172	[BUG]  [BUGGY]  super(StandardDeviation,  sd);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super(StandardDeviation,  sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super(StandardDeviation,  sd);	super();  	non-compiled	[CE]  cannot  find  symbol  StandardDeviation	3	None	replace
173	[BUG]  [BUGGY]  super(StandardDeviation);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super(StandardDeviation);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super(StandardDeviation);	super();  	non-compiled	[CE]  cannot  find  symbol  StandardDeviation	3	None	replace
174	[BUG]  [BUGGY]  super(),  sd;  [CE]  ';'  expected  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super(),  sd;  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super(),  sd;	super();  	non-compiled	[CE]  ';'  expected	3	None	replace
175	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	add	  	super();  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	3	1
176	[BUG]  [BUGGY]    [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	  	super();  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	3	1	replace
181	[BUG]  [BUGGY]    setStandardDeviation(sd);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    setStandardDeviation(sd);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    setStandardDeviation(sd);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
182	[BUG]  [BUGGY]    super();  setStandardDeviation(sd);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    super();  setStandardDeviation(sd);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    super();  setStandardDeviation(sd);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
183	[BUG]  [BUGGY]    super();  setMean(mean);  setStandardDeviation(sd);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    super();  setMean(mean);  setStandardDeviation(sd);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
184	[BUG]  [BUGGY]    super();  setMean(mean);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    super();  setMean(mean);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    super();  setMean(mean);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
185	[BUG]  [BUGGY]    SetStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    SetStandardDeviation(sd);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    SetStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	4	None	add
191	[BUG]  [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation()  -  standardDeviation);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation()  -  standardDeviation);  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  normalDeviation  *  Math.sqrt(getStandardDeviation()  -  standardDeviation);		non-compiled	[CE]  illegal  start  of  type	8	None	add
192	[BUG]  [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation());  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation());  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  normalDeviation  *  Math.sqrt(getStandardDeviation());		non-compiled	[CE]  illegal  start  of  type	8	None	add
193	[BUG]  [BUGGY]    return  super.evaluate(standardDeviation);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  super.evaluate(standardDeviation);  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  super.evaluate(standardDeviation);		non-compiled	[CE]  illegal  start  of  type	8	None	add
194	[BUG]  [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation(),  StandardDistributionImpl.MAX_VALUE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation(),  StandardDistributionImpl.MAX_VALUE);  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  normalDeviation  *  Math.sqrt(getStandardDeviation(),  StandardDistributionImpl.MAX_VALUE);		non-compiled	[CE]  illegal  start  of  type	8	None	add
195	[BUG]  [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation(),  StandardDeviation.MAX_VALUE);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  normalDeviation  *  Math.sqrt(getStandardDeviation(),  StandardDeviation.MAX_VALUE);  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  normalDeviation  *  Math.sqrt(getStandardDeviation(),  StandardDeviation.MAX_VALUE);		non-compiled	[CE]  illegal  start  of  type	8	None	add
2	[BUG]  [BUGGY]    super.setNormalizedDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    super.setNormalizedDeviation(sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    super.setNormalizedDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	20	None	add
3	[BUG]  [BUGGY]    super.setNormalDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    super.setNormalDeviation(sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    super.setNormalDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	20	None	add
4	[BUG]  [BUGGY]    standardDeviation  =  Math.standard(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    standardDeviation  =  Math.standard(sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    standardDeviation  =  Math.standard(sd);		non-compiled	[CE]  cannot  find  symbol	20	None	add
5	[BUG]  [BUGGY]    super.setMean(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    super.setMean(sd);  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    super.setMean(sd);		non-compiled	[CE]  cannot  find  symbol	20	None	add
44	[BUG]  [BUGGY]  setStandardDeviation(sd,  sd);  [CE]  method  setStandardDeviation  in  class  NormalDistributionImpl  cannot  be  applied  to  given  types;  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]  setStandardDeviation(sd,  sd);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	setStandardDeviation(sd,  sd);	setStandardDeviation(sd);  	non-compiled	[CE]  method  setStandardDeviation  in  class  NormalDistributionImpl  cannot  be  applied  to  given  types;	11	None	replace
62	[BUG]  [BUGGY]  return  0.5  *(1.0  +  Erf.erf((  x  -  mean)/(standardDeviation  *  Math.sqrt(2.0)));  [CE]  ')'  expected  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]  return  0.5  *(1.0  +  Erf.erf((  x  -  mean)/(standardDeviation  *  Math.sqrt(2.0)));  [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return  0.5  *(1.0  +  Erf.erf((  x  -  mean)/(standardDeviation  *  Math.sqrt(2.0)));	return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /    (standardDeviation  *  Math.sqrt(2.0))));  	non-compiled	[CE]  ')'  expected	1	None	replace
84	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]  if(sd  ==  0.0)  {  [BUGGY]  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	add	if(sd  ==  0.0)  {	if  (sd  <=  0.0)  {  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	19	1
85	[BUG]  [BUGGY]  if(sd  ==  0.0)  {  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]  if(sd  ==  0.0)  {  [BUGGY]  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	if(sd  ==  0.0)  {	if  (sd  <=  0.0)  {  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	19	1	replace
104	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  0.0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	add	private  double  standardDeviation  =  0.0;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1
105	[BUG]  [BUGGY]  private  double  standardDeviation  =  0.0;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  standardDeviation  =  0.0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	private  double  standardDeviation  =  0.0;	private  double  standardDeviation  =  1;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	7	1	replace
121	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    standardDeviation  =  Math.sqrt(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	add	    standardDeviation  =  Math.sqrt(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	18	1
122	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(standardDeviation);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    standardDeviation  =  Math.sqrt(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    standardDeviation  =  Math.sqrt(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	18	1	add
122	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    standardDeviation  =  Math.sqrt(getStandardDeviation());  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	add	    standardDeviation  =  Math.sqrt(getStandardDeviation());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	18	1
123	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(getStandardDeviation());  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    standardDeviation  =  Math.sqrt(getStandardDeviation());  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    standardDeviation  =  Math.sqrt(getStandardDeviation());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	18	1	add
125	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(new  Double(mean));  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    StandardDeviation.setStandardDeviation(new  Double(mean));  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    StandardDeviation.setStandardDeviation(new  Double(mean));		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	18	None	add
143	[BUG]  [BUGGY]  setNormalDeviation(sd);  [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setNormalDeviation(sd);  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	setNormalDeviation(sd);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
144	[BUG]  [BUGGY]  setNormalized();  [CE]  illegal  start  of  expression  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]  setNormalized();  [BUGGY]    [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	setNormalized();	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
163	[BUG]  [BUGGY]    setNormalizedDeviation(standardDeviation);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    setNormalizedDeviation(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	    setNormalizedDeviation(standardDeviation);		non-compiled	[CE]  cannot  find  symbol	14	None	add
165	[BUG]  [BUGGY]    setNormalizedDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    setNormalizedDeviation(sd);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	    setNormalizedDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	14	None	add
182	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getStandardDeviation());  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	add	    standardDeviation  =  Math.sqrt(getStandardDeviation());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	16	1
183	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(getStandardDeviation());  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    standardDeviation  =  Math.sqrt(getStandardDeviation());  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    standardDeviation  =  Math.sqrt(getStandardDeviation());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	16	1	add
183	[BUG]  [BUGGY]    Preconditions.checkNotNull(mean);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    Preconditions.checkNotNull(mean);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    Preconditions.checkNotNull(mean);		non-compiled	[CE]  cannot  find  symbol  Preconditions	16	None	add
184	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    standardDeviation  =  Math.sqrt(standardDeviation);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	add	    standardDeviation  =  Math.sqrt(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	16	1
185	[BUG]  [BUGGY]    standardDeviation  =  Math.sqrt(standardDeviation);  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    standardDeviation  =  Math.sqrt(standardDeviation);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    standardDeviation  =  Math.sqrt(standardDeviation);		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	16	1	add
185	[BUG]  [BUGGY]    standardDeviation.setMean(mean);  [CE]  double  cannot  be  dereferenced  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    standardDeviation.setMean(mean);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    standardDeviation.setMean(mean);		non-compiled	[CE]  double  cannot  be  dereferenced	16	None	add
222	[BUG]  [BUGGY]    double  mean  =  Math.max(getMean(),  getStandardDeviation());  [CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl  [CONTEXT]    [BUGGY]    double  mean  =  Math.max(getMean(),  getStandardDeviation());  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    double  mean  =  Math.max(getMean(),  getStandardDeviation());		non-compiled	[CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl	6	None	add
223	[BUG]  [BUGGY]    double  mean  =  Math.max(getMean()  /  getStandardDeviation());  [CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl  [CONTEXT]    [BUGGY]    double  mean  =  Math.max(getMean()  /  getStandardDeviation());  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    double  mean  =  Math.max(getMean()  /  getStandardDeviation());		non-compiled	[CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl	6	None	add
224	[BUG]  [BUGGY]    double  mean  =  Math.max(getMean(),  getSlope());  [CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl  [CONTEXT]    [BUGGY]    double  mean  =  Math.max(getMean(),  getSlope());  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    double  mean  =  Math.max(getMean(),  getSlope());		non-compiled	[CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl	6	None	add
225	[BUG]  [BUGGY]    double  mean  =  Math.max(getMean(),  getNumber());  [CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl  [CONTEXT]    [BUGGY]    double  mean  =  Math.max(getMean(),  getNumber());  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    double  mean  =  Math.max(getMean(),  getNumber());		non-compiled	[CE]  variable  mean  is  already  defined  in  class  NormalDistributionImpl	6	None	add
241	[BUG]  [BUGGY]    return  normalDeviation  *  Math.sqrt(variance);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  normalDeviation  *  Math.sqrt(variance);  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  normalDeviation  *  Math.sqrt(variance);		non-compiled	[CE]  illegal  start  of  type	8	None	add
242	[BUG]  [BUGGY]    return  StandardDistributionImpl.getNormalizedDeviation();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  StandardDistributionImpl.getNormalizedDeviation();  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  StandardDistributionImpl.getNormalizedDeviation();		non-compiled	[CE]  illegal  start  of  type	8	None	add
243	[BUG]  [BUGGY]    return  StandardDistributionImpl.deviation();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  StandardDistributionImpl.deviation();  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  StandardDistributionImpl.deviation();		non-compiled	[CE]  illegal  start  of  type	8	None	add
244	[BUG]  [BUGGY]    return  StandardDistributionImpl.standardDeviation();  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  StandardDistributionImpl.standardDeviation();  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  StandardDistributionImpl.standardDeviation();		non-compiled	[CE]  illegal  start  of  type	8	None	add
245	[BUG]  [BUGGY]    return  super.standardDeviation;  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  super.standardDeviation;  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  super.standardDeviation;		non-compiled	[CE]  illegal  start  of  type	8	None	add
263	[BUG]  [BUGGY]    setDefaultDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setDefaultDeviation(sd);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setDefaultDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	12	None	add
264	[BUG]  [BUGGY]    setNormalDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setNormalDeviation(sd);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setNormalDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	12	None	add
265	[BUG]  [BUGGY]    setStandardDeviation(md);  [CE]  cannot  find  symbol  md  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setStandardDeviation(md);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setStandardDeviation(md);		non-compiled	[CE]  cannot  find  symbol  md	12	None	add
283	[BUG]  [BUGGY]    standardDeviation  =  Math.max(standardDeviation);  [CE]  no  suitable  method  found  for  max(double)  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]    standardDeviation  =  Math.max(standardDeviation);  [BUGGY]  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /      (standardDeviation  *  Math.sqrt(2.0))));  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	    standardDeviation  =  Math.max(standardDeviation);		non-compiled	[CE]  no  suitable  method  found  for  max(double)	2	None	add
301	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  0L;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	add	private  double  mean  =  0L;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1
302	[BUG]  [BUGGY]  private  double  mean  =  0L;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  0L;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	private  double  mean  =  0L;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1	replace
303	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  0.0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	add	private  double  mean  =  0.0;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1
304	[BUG]  [BUGGY]  private  double  mean  =  0.0;  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]    [BUGGY]  private  double  mean  =  0.0;  [BUGGY]    [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	private  double  mean  =  0.0;	private  double  mean  =  0;  	compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	5	1	replace
324	[BUG]  [BUGGY]    setMean(mean);  setNormalDeviation(standardDeviation);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setMean(mean);  setNormalDeviation(standardDeviation);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setMean(mean);  setNormalDeviation(standardDeviation);		non-compiled	[CE]  cannot  find  symbol	10	None	add
344	[BUG]  [BUGGY]    setMean(mean);  setStandardDeviation(sd);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    setMean(mean);  setStandardDeviation(sd);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    setMean(mean);  setStandardDeviation(sd);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
362	[BUG]  [BUGGY]  super()  &&(getStandardDeviation()  *  Math.sqrt(mean));  [CE]  not  a  statement  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super()  &&(getStandardDeviation()  *  Math.sqrt(mean));  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super()  &&(getStandardDeviation()  *  Math.sqrt(mean));	super();  	non-compiled	[CE]  not  a  statement	3	None	replace
363	[BUG]  [BUGGY]  super()  &&(getStandardDeviation()  *  Math.pow(10,  sd));  [CE]  not  a  statement  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super()  &&(getStandardDeviation()  *  Math.pow(10,  sd));  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super()  &&(getStandardDeviation()  *  Math.pow(10,  sd));	super();  	non-compiled	[CE]  not  a  statement	3	None	replace
364	[BUG]  [BUGGY]  super()  &&(getStandardDeviation()  *  getStandardDeviation()));  [CE]  not  a  statement  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super()  &&(getStandardDeviation()  *  getStandardDeviation()));  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super()  &&(getStandardDeviation()  *  getStandardDeviation()));	super();  	non-compiled	[CE]  not  a  statement	3	None	replace
31	[BUG]  [BUGGY]    return  Math.sqrt(variance);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.sqrt(variance);  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  Math.sqrt(variance);		non-compiled	[CE]  illegal  start  of  type	8	None	add
32	[BUG]  [BUGGY]    return  Math.sqrt(Math.abs(standardDeviation));  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.sqrt(Math.abs(standardDeviation));  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  Math.sqrt(Math.abs(standardDeviation));		non-compiled	[CE]  illegal  start  of  type	8	None	add
33	[BUG]  [BUGGY]    return  Math.sqrt(Math.exp(standardDeviation));  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.sqrt(Math.exp(standardDeviation));  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  Math.sqrt(Math.exp(standardDeviation));		non-compiled	[CE]  illegal  start  of  type	8	None	add
34	[BUG]  [BUGGY]    return  Math.sqrt(getMean());  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.sqrt(getMean());  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  Math.sqrt(getMean());		non-compiled	[CE]  illegal  start  of  type	8	None	add
35	[BUG]  [BUGGY]    return  Math.sqrt(getMean()  /  getSquares());  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.sqrt(getMean()  /  getSquares());  [BUGGY]  private  double  standardDeviation  =  1;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	42	42	1	replace	    return  Math.sqrt(getMean()  /  getSquares());		non-compiled	[CE]  illegal  start  of  type	8	None	add
63	[BUG]  [BUGGY]    setNormalizedStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setNormalizedStandardDeviation(sd);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setNormalizedStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	12	None	add
64	[BUG]  [BUGGY]    setNormalizedMean(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  [BUGGY]    setNormalizedMean(sd);  [BUGGY]  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	52	52	1	replace	    setNormalizedMean(sd);		non-compiled	[CE]  cannot  find  symbol	12	None	add
121	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(standardDeviation);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    StandardDeviation.setStandardDeviation(standardDeviation);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    StandardDeviation.setStandardDeviation(standardDeviation);		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	16	None	add
122	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(mean);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    StandardDeviation.setStandardDeviation(mean);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    StandardDeviation.setStandardDeviation(mean);		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	16	None	add
123	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(getMean());  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    StandardDeviation.setStandardDeviation(getMean());  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    StandardDeviation.setStandardDeviation(getMean());		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	16	None	add
124	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(new  Double(mean));  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    StandardDeviation.setStandardDeviation(new  Double(mean));  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    StandardDeviation.setStandardDeviation(new  Double(mean));		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	16	None	add
125	[BUG]  [BUGGY]    StandardDeviation.setMean(standardDeviation);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]    StandardDeviation.setMean(standardDeviation);  [BUGGY]  this.mean  =  mean;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	    StandardDeviation.setMean(standardDeviation);		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	16	None	add
151	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(standardDeviation);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    StandardDeviation.setStandardDeviation(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    StandardDeviation.setStandardDeviation(standardDeviation);		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	18	None	add
154	[BUG]  [BUGGY]    StandardDeviation.setMean(standardDeviation);  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    StandardDeviation.setMean(standardDeviation);  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    StandardDeviation.setMean(standardDeviation);		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	18	None	add
155	[BUG]  [BUGGY]    StandardDeviation.setStandardDeviation(getMean());  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  this.mean  =  mean;  [BUGGY]    StandardDeviation.setStandardDeviation(getMean());  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	77	77	1	replace	    StandardDeviation.setStandardDeviation(getMean());		non-compiled	[CE]  cannot  find  symbol  StandardDeviation	18	None	add
183	[BUG]  [BUGGY]  super(),  sd);  [CE]  ';'  expected  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  super(),  sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	super(),  sd);	super();  	non-compiled	[CE]  ';'  expected	3	None	replace
184	[BUG]  [BUGGY]  checkInterval(mean);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]  checkInterval(mean);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	checkInterval(mean);	super();  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
212	[BUG]  [BUGGY]    setStandardDeviation(sd);  return  new  NormalDistributionImpl(new  Double(mean));  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    setStandardDeviation(sd);  return  new  NormalDistributionImpl(new  Double(mean));  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	    setStandardDeviation(sd);  return  new  NormalDistributionImpl(new  Double(mean));		non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	14	None	add
213	[BUG]  [BUGGY]    setStandardDeviation(sd);  return  new  NormalDistributionImpl(this,  new  Double(mean));  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    setStandardDeviation(sd);  return  new  NormalDistributionImpl(this,  new  Double(mean));  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	    setStandardDeviation(sd);  return  new  NormalDistributionImpl(this,  new  Double(mean));		non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	14	None	add
215	[BUG]  [BUGGY]    setStandardDeviation(sd);  return  new  NormalDistributionImpl(this,  new  Double(Mean));  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  setMean(mean);  setStandardDeviation(sd);  [BUGGY]    setStandardDeviation(sd);  return  new  NormalDistributionImpl(this,  new  Double(Mean));  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	53	53	1	replace	    setStandardDeviation(sd);  return  new  NormalDistributionImpl(this,  new  Double(Mean));		non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	14	None	add
242	[BUG]  [BUGGY]    this();  setStandardDeviation(sd);  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    this();  setStandardDeviation(sd);  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    this();  setStandardDeviation(sd);		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
245	[BUG]  [BUGGY]    setStandardDeviation(getMean());  [CE]  call  to  super  must  be  first  statement  in  constructor  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  [BUGGY]    setStandardDeviation(getMean());  [BUGGY]  super();  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	50	50	1	replace	    setStandardDeviation(getMean());		non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	add
273	[BUG]  [BUGGY]    double  mean  =  Math.sqrt(getMean(),  getMean());  [CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    double  mean  =  Math.sqrt(getMean(),  getMean());  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    double  mean  =  Math.sqrt(getMean(),  getMean());		non-compiled	[CE]  method  sqrt  in  class  Math  cannot  be  applied  to  given  types;	20	None	add
274	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    double  mean  =  Math.sqrt(getMean());  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	add	    double  mean  =  Math.sqrt(getMean());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	20	1
275	[BUG]  [BUGGY]    double  mean  =  Math.sqrt(getMean());  [FE]  MaxIterationsExceededException  testExtremeValues  [CONTEXT]  public  void  setStandardDeviation(double  sd)  {  [BUGGY]    double  mean  =  Math.sqrt(getMean());  [BUGGY]  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(   "Standard  deviation  must  be  positive. ");  }  standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	93	93	1	replace	    double  mean  =  Math.sqrt(getMean());		compilable	  [FE]  MaxIterationsExceededException  testExtremeValues	20	1	add
334	[BUG]  [BUGGY]  return  0.5  +  Erf.erf((  x  -  mean)/(standardDeviation  *  Math.sqrt(2.0))));  [CE]  ';'  expected  [CONTEXT]  public  double  cumulativeProbability(double  x)  throws  MathException  {  [BUGGY]  return  0.5  +  Erf.erf((  x  -  mean)/(standardDeviation  *  Math.sqrt(2.0))));  [BUGGY]  (standardDeviation  *  Math.sqrt(2.0))));  }  [CLASS]  NormalDistributionImpl  [METHOD]  cumulativeProbability  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.3779644730092272	109	110	1	replace	return  0.5  +  Erf.erf((  x  -  mean)/(standardDeviation  *  Math.sqrt(2.0))));	return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /    (standardDeviation  *  Math.sqrt(2.0))));  	non-compiled	[CE]  ';'  expected	1	None	replace
363	[BUG]  [BUGGY]    setNormalStandardDeviation(sd);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setNormalStandardDeviation(sd);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setNormalStandardDeviation(sd);		non-compiled	[CE]  cannot  find  symbol	10	None	add
365	[BUG]  [BUGGY]    setNormalizedMean(mean);  [CE]  cannot  find  symbol  [CONTEXT]  public  NormalDistributionImpl(double  mean,  double  sd){  super();  [BUGGY]    setNormalizedMean(mean);  [BUGGY]  setMean(mean);  setStandardDeviation(sd);  }  [CLASS]  NormalDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  NormalDistributionImpl(double,double)  double  mean  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	51	51	1	replace	    setNormalizedMean(mean);		non-compiled	[CE]  cannot  find  symbol	10	None	add
392	[BUG]  [BUGGY]  this.mean  =  mean  /  StandardDeviation;  [CE]  cannot  find  symbol  StandardDeviation  [CONTEXT]  public  void  setMean(double  mean)  {  [BUGGY]  this.mean  =  mean  /  StandardDeviation;  [BUGGY]  }  [CLASS]  NormalDistributionImpl  [METHOD]  setMean  [RETURN_TYPE]  void  double  mean  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	76	76	1	replace	this.mean  =  mean  /  StandardDeviation;	this.mean  =  mean;  	non-compiled	[CE]  cannot  find  symbol  StandardDeviation	15	None	replace
571	[BUG]  [BUGGY]    return  Math.max(Math.exp(-mean)*  getMean());  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.max(Math.exp(-mean)*  getMean());  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  Math.max(Math.exp(-mean)*  getMean());		non-compiled	[CE]  illegal  start  of  type	6	None	add
572	[BUG]  [BUGGY]    return  Math.max(Math.abs(getMean(),  getMean()));  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.max(Math.abs(getMean(),  getMean()));  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  Math.max(Math.abs(getMean(),  getMean()));		non-compiled	[CE]  illegal  start  of  type	6	None	add
573	[BUG]  [BUGGY]    return  Math.max(Math.abs(getMean(),  getMinimumImpl()));  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.max(Math.abs(getMean(),  getMinimumImpl()));  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  Math.max(Math.abs(getMean(),  getMinimumImpl()));		non-compiled	[CE]  illegal  start  of  type	6	None	add
574	[BUG]  [BUGGY]    return  Math.max(Math.exp(-mean)*  mean);  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.max(Math.exp(-mean)*  mean);  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  Math.max(Math.exp(-mean)*  mean);		non-compiled	[CE]  illegal  start  of  type	6	None	add
575	[BUG]  [BUGGY]    return  Math.max(Math.exp(-mean)*  getStandardDeviation());  [CE]  illegal  start  of  type  [CONTEXT]    [BUGGY]    return  Math.max(Math.exp(-mean)*  getStandardDeviation());  [BUGGY]  private  double  mean  =  0;  [CLASS]  NormalDistributionImpl  [VARIABLES]  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	39	39	1	replace	    return  Math.max(Math.exp(-mean)*  getStandardDeviation());		non-compiled	[CE]  illegal  start  of  type	6	None	add
