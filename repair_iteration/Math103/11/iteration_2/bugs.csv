bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.mean).setStandardDeviation(sd);	      ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation);	      ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  this.standardDeviation.setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  this.standardDeviation.setStandardDeviation(sd);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation.setStandardDeviation(sd);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue());  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue());  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.max(sd,  standardDeviation.doubleValue());	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(sd);	      ((    StandardDistributionImpl)sd).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(sd);	      ((    StandardDistributionImpl)sd).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
8	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd);	      ((    StandardDistributionImpl)sd).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  standardDeviation  =  sd  +  sd;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  =  sd  +  sd;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  +  sd;	  standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  standardDeviation  =  sd  *  mean;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  =  sd  *  mean;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  *  mean;	  standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  standardDeviation  =  sd  +  1;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  =  sd  +  1;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  +  1;	  standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  this.standardDeviation  =  sd  +  mean;  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  this.standardDeviation  =  mean;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  this.standardDeviation  =  mean;  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  1;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  this.standardDeviation  =  sd  +  1;  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  1;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setMean(sd);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)sd).setMean(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setMean(sd);	      ((    StandardDistributionImpl)sd).setMean(mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setMean(sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)sd).setMean(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setMean(sd);	      ((    StandardDistributionImpl)sd).setMean(mean);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  mean);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(mean);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  setStandardDeviation(sd,  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd,  mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
24	[BUG]  [BUGGY]  setStandardDeviation(sd  +  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  setStandardDeviation(sd  +  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  +  mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  setStandardDeviation(mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);	  standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  sd);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  sd);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  sd);	  standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setMean(mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setMean(mean);	      ((    StandardDistributionImpl)this.standardDeviation).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  standardDeviation  =  sd  /  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  =  sd  /  mean;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  /  mean;	  standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
30	[BUG]  [BUGGY]  standardDeviation  =  mean  +  sd;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  =  mean  +  sd;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  mean  +  sd;	  standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  setStandardDeviation(null);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(null);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1);	      ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(standardDeviation);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(standardDeviation);	      ((    StandardDistributionImpl)sd).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(standardDeviation);  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(standardDeviation);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(standardDeviation);	      ((    StandardDistributionImpl)sd).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(null);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(null);	      ((    StandardDistributionImpl)sd).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(sd);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setMean(sd);	      ((    StandardDistributionImpl)this.standardDeviation).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  sd  }  );  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  setStandardDeviation(new  double[]  {  sd  }  );  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(new  double[]  {  sd  }  );	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
39	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd);  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd);	  standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl();  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl();  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl();	  standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  standardDeviation  -=  sd;  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  -=  sd;  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  -=  sd;	  standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  standardDeviation  =  new  double[sd];  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  standardDeviation  =  new  double[sd];  [BUGGY]    }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  new  double[sd];	  standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  mean;  [CE]  illegal  start  of  type  [FE]          MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  this.standardDeviation  =  sd  *  mean;  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  *  mean;	      this.standardDeviation    =    sd;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  setStandardDeviation(sd  -  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  setStandardDeviation(sd  -  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  -  mean);	      setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  mean);	      ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  mean);  [CE]  illegal  start  of  type  [FE]        MaxIterationsExceededException    [CONTEXT]    public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(     "Standard  deviation  must  be  positive.   ");  }    [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  mean);  [BUGGY]    standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd  +  mean);	      ((    StandardDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
