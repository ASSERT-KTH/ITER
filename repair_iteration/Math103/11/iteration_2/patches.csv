bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  /  1);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  /  1);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  /  1);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1.0);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  1,  sd);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setMean(mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setMean(mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setMean(mean);	  ((    NormalDistributionImpl)sd).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setMean(message);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setMean(message);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setMean(message);	  ((    NormalDistributionImpl)sd).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  standardDeviation  =  sd  *  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  *  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  *  sd;	  standardDeviation    =    sd    +    sd;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(mean);	  ((    StandardDistributionImpl)sd).setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
8	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(message);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(message);	  ((    StandardDistributionImpl)sd).setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
9	[BUG]  [BUGGY]  sd  =  Math.max(sd,  mean.doubleValue());  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  sd  =  Math.max(sd,  mean.doubleValue());  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.max(sd,  mean.doubleValue());	  sd    =    Math.max(sd,    standardDeviation.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue()  /  2.0);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue()  /  2.0);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.max(sd,  standardDeviation.doubleValue()  /  2.0);	  sd    =    Math.max(sd,    standardDeviation.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  sd  =  Math.min(sd,  standardDeviation.doubleValue());  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  sd  =  Math.min(sd,  standardDeviation.doubleValue());  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.min(sd,  standardDeviation.doubleValue());	  sd    =    Math.max(sd,    standardDeviation.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
13	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  sd,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  sd,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  sd,  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
14	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(mean,  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(mean,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(mean,  sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
15	[BUG]  [BUGGY]  NormalDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  NormalDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	NormalDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd,  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
16	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  this.standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  this.standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  this.standardDeviation);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
19	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  mean);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(mean);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(this.standardDeviation);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(this.standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(this.standardDeviation);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
23	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  /  mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  /  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  /  mean);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
24	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  *  mean);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  *  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  *  mean);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
25	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  *  this.mean);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  *  this.mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  *  this.mean);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
26	[BUG]  [BUGGY]  setStandardDeviation(sd  +  standardDeviation);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  +  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  +  standardDeviation);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
27	[BUG]  [BUGGY]  setStandardDeviation(sd  +  0.5);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  +  0.5);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  +  0.5);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  setStandardDeviation(sd  +  sd);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  +  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  +  sd);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  setStandardDeviation(sd  +  1.0);  [CE]  illegal  start  of  type  [FE]                            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  +  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  +  1.0);	  setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
30	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(0);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(0);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(1);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(1);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(1);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  this.standardDeviation.setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation.setStandardDeviation(sd,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation.setStandardDeviation(sd,  mean);	  this.standardDeviation.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  this.standardDeviation.setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation.setStandardDeviation(mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation.setStandardDeviation(mean);	  this.standardDeviation.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  this.standardDeviation.setStandardDeviation(sd  -  mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation.setStandardDeviation(sd  -  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation.setStandardDeviation(sd  -  mean);	  this.standardDeviation.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  this.standardDeviation  =  standardDeviation;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  standardDeviation;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  standardDeviation;	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  this.standardDeviation  =  d;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  d;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  d;	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setMean(mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setMean(mean);	  ((    NormalDistributionImpl)this.standardDeviation).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
38	[BUG]  [BUGGY]  setStandardDeviation(null,  sd);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(null,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(null,  sd);	  setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
39	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation);	  ((    NormalDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
40	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.mean).setStandardDeviation(sd,  mean);	  ((    NormalDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
41	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(this.mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(this.mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(this.mean);	  ((    NormalDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  standardDeviation  -=  sd  *  mean;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  -=  sd  *  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  -=  sd  *  mean;	  standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd,  standardDeviation);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
44	[BUG]  [BUGGY]  setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd,  0.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd,  0.0);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
45	[BUG]  [BUGGY]  setStandardDeviation(sd,  1.0);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd,  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd,  1.0);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
46	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_VARIABLE);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
47	[BUG]  [BUGGY]  standardDeviation  -=  sd  +  mean;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  -=  sd  +  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  -=  sd  +  mean;	  standardDeviation    =    mean    +    sd;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
48	[BUG]  [BUGGY]  standardDeviation  +=  sd;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  +=  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  +=  sd;	  standardDeviation    =    mean    +    sd;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
49	[BUG]  [BUGGY]  standardDeviation  =  new  double[sd  -  mean];  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  new  double[sd  -  mean];  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  new  double[sd  -  mean];	  standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
50	[BUG]  [BUGGY]  standardDeviation  =  new  double[sd  +  mean];  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  new  double[sd  +  mean];  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  new  double[sd  +  mean];	  standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
51	[BUG]  [BUGGY]  standardDeviation  =  new  double[Mean];  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  new  double[Mean];  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  new  double[Mean];	  standardDeviation    =    new    double[sd];    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
52	[BUG]  [BUGGY]  standardDeviation  =  sd  /  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  /  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  /  sd;	  standardDeviation    =    sd    /    mean;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
53	[BUG]  [BUGGY]  standardDeviation  =  sd  /  2.0;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  /  2.0;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  /  2.0;	  standardDeviation    =    sd    /    mean;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]  standardDeviation  =  sd  /  2;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  /  2;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  /  2;	  standardDeviation    =    sd    /    mean;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
55	[BUG]  [BUGGY]  setStandardDeviation(sd  -  standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  -  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  -  standardDeviation);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
56	[BUG]  [BUGGY]  setStandardDeviation(sd  /  mean);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  /  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  /  mean);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
57	[BUG]  [BUGGY]  setStandardDeviation(sd  -  sd);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  -  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  -  sd);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
58	[BUG]  [BUGGY]  setStandardDeviation(sd  *  mean);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  *  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  *  mean);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
59	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  2;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  +  2;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  2;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  3;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  +  3;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  3;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
61	[BUG]  [BUGGY]  standardDeviation  -=  mean;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  -=  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  -=  mean;	  standardDeviation    -=    sd;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
62	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  +  sd;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  sd;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
63	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  standardDeviation;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  +  standardDeviation;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  standardDeviation;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
64	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd,  mean);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
65	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(mean);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
66	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd  -  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd  -  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd  -  mean);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
67	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(message);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(message);	  ((    NormalDistributionImpl)sd).setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
68	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(null);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(null);	  ((    NormalDistributionImpl)sd).setStandardDeviation(standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
69	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  *  sd;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  *  sd;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
70	[BUG]  [BUGGY]  this.standardDeviation  =  sd  /  mean;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  /  mean;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  /  mean;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
71	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  standardDeviation;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  *  standardDeviation;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  *  standardDeviation;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
72	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
73	[BUG]  [BUGGY]  StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd,  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd,  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
74	[BUG]  [BUGGY]  StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
75	[BUG]  [BUGGY]  StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  mean>(sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  mean>(sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  mean>(sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
76	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd,  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd,  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd,  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
77	[BUG]  [BUGGY]  standardDeviation  =  sd  +  2;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  +  2;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  +  2;	  standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  standardDeviation  =  sd  +  3;  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  +  3;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  +  3;	  standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd  +  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd  +  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd  +  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
80	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
81	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd  -  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd  -  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(sd  -  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
82	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(null,  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(null,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(null,  mean);	  ((    StandardDistributionImpl)sd).setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
83	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  0.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
84	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  sd,  mean  }  );  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(new  double[]  {  sd,  mean  }  );  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(new  double[]  {  sd,  mean  }  );	  setStandardDeviation(new    double[]    {    sd    }    );    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
85	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  mean  }  );  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(new  double[]  {  mean  }  );  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(new  double[]  {  mean  }  );	  setStandardDeviation(new    double[]    {    sd    }    );    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
86	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  sd  },  mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(new  double[]  {  sd  },  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(new  double[]  {  sd  },  mean);	  setStandardDeviation(new    double[]    {    sd    }    );    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
87	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  sd  },  standardDeviation);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(new  double[]  {  sd  },  standardDeviation);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(new  double[]  {  sd  },  standardDeviation);	  setStandardDeviation(new    double[]    {    sd    }    );    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
88	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null,  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
89	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean,  sd);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
90	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd  +  sd);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
91	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  /  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  /  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd  /  mean);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
92	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd  +  standardDeviation);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
93	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  *  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  *  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd  *  mean);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
94	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd,  standardDeviation);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(sd,  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(sd,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(sd,  mean);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(message,  sd);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(message,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(message,  sd);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
98	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  1.0);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  1.0);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
100	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  standardDeviation);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
101	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  sd);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  0.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
104	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd,  standardDeviation);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
105	[BUG]  [BUGGY]  standardDeviation  =  mean  /  sd;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  mean  /  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  mean  /  sd;	  standardDeviation    =    sd    /    mean;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
106	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  1.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  1.0);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
107	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd  +  mean);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd  +  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd  +  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
108	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd  -  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd  -  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd  -  mean);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
109	[BUG]  [BUGGY]  standardDeviation  =  mean  *  sd;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  mean  *  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  mean  *  sd;	  standardDeviation    =    mean    +    sd;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
110	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setMean(new  Mean(sd));  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setMean(new  Mean(sd));  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setMean(new  Mean(sd));	  ((    StandardDistributionImpl)sd).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
111	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  1.0);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  1.0);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
112	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  0.5;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  +  0.5;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  0.5;	  this.standardDeviation    =    sd    +    mean;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
113	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(d);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(d);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(d);	  ((    StandardDistributionImpl)this).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
114	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(null);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(null);	  ((    StandardDistributionImpl)this).setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
115	[BUG]  [BUGGY]  this.standardDeviation.setStandardDeviation(sd  +  mean);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation.setStandardDeviation(sd  +  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation.setStandardDeviation(sd  +  mean);	  this.standardDeviation.setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
116	[BUG]  [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVIATION);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVIATION);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd,  StandardDistributionImpl.DEFAULT_STANDARD_DEVIATION);	  setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
117	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue()  -  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue()  -  mean);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.max(sd,  standardDeviation.doubleValue()  -  mean);	  sd    =    Math.max(sd,    standardDeviation.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
118	[BUG]  [BUGGY]  this.standardDeviation  =  sd  +  4;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  +  4;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  +  4;	  this.standardDeviation    =    sd    +    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
119	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd,  0.0);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
120	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  0.5);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd  +  0.5);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd  +  0.5);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
121	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(Mean,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(Mean,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(Mean,  sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
122	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  mean>();  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  mean>();  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl  <  mean>();	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
123	[BUG]  [BUGGY]  setStandardDeviation(sd  -  mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(sd  -  mean,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(sd  -  mean,  standardDeviation);	  setStandardDeviation(sd    -    mean);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
124	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  0.5);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  0.5);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd  +  0.5);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
125	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd  +  1);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd  +  1);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.mean).setStandardDeviation(sd  +  1);	  ((    NormalDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
126	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd  +  1.0);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.mean).setStandardDeviation(sd  +  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.mean).setStandardDeviation(sd  +  1.0);	  ((    NormalDistributionImpl)this.mean).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
127	[BUG]  [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD_VIDEO;	  this.standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
128	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(message);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(message);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
129	[BUG]  [BUGGY]  standardDeviation  -=  sd  -  mean;  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  -=  sd  -  mean;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  -=  sd  -  mean;	  standardDeviation    -=    sd;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
130	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setMean(new  Mean(sd));  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setMean(new  Mean(sd));  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setMean(new  Mean(sd));	  ((    NormalDistributionImpl)sd).setMean(sd);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
131	[BUG]  [BUGGY]  setStandardDeviation(null,  mean);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(null,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(null,  mean);	  setStandardDeviation(null);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
132	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(standardDeviation,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(standardDeviation,  sd);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
133	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd  +  1);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd  +  1);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(mean,  sd  +  1);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
134	[BUG]  [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)sd).setStandardDeviation(standardDeviation,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)sd).setStandardDeviation(standardDeviation,  sd);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
135	[BUG]  [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  standardDeviation);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)sd).setStandardDeviation(mean,  standardDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)sd).setStandardDeviation(mean,  standardDeviation);	  ((    StandardDistributionImpl)sd).setStandardDeviation(mean,    sd);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
136	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  0.5);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  0.5);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  0.5);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
137	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  1.0);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  1.0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  1.0);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
138	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  1);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  1);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd  +  1);	  ((    StandardDistributionImpl)this.standardDeviation).setStandardDeviation(sd    +    mean);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
139	[BUG]  [BUGGY]  setMeanDeviation(sd);  [CE]  illegal  start  of  type  [FE]                        MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setMeanDeviation(sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setMeanDeviation(sd);	  setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
140	[BUG]  [BUGGY]  setMean(sd);  [CE]  illegal  start  of  type  [FE]                          MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setMean(sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setMean(sd);	  setStandardDeviation(mean);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
141	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  0);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  0);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  0);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
142	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(null);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(null);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
143	[BUG]  [BUGGY]  standardDeviation  =  sd  *  mean  +  1;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  *  mean  +  1;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  *  mean  +  1;	  standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
144	[BUG]  [BUGGY]  standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD;  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  sd  *  StandardDistributionImpl.DEFAULT_STANDARD;	  standardDeviation    =    sd    *    mean;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
145	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation,  sd);  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation,  sd);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation,  sd);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
146	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation,  mean);  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation,  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this.mean).setStandardDeviation(sd,  standardDeviation,  mean);	  ((    StandardDistributionImpl)this.mean).setStandardDeviation(sd,    standardDeviation);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
147	[BUG]  [BUGGY]  this.standardDeviation  =  new  double[sd];  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  this.standardDeviation  =  new  double[sd];  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	this.standardDeviation  =  new  double[sd];	  this.standardDeviation    =    mean;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
148	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(message);  [CE]  illegal  start  of  type  [FE]                      MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(message);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this.standardDeviation).setStandardDeviation(message);	  ((    NormalDistributionImpl)this.standardDeviation).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
149	[BUG]  [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  normalDeviation);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  StandardDistributionImpl)this).setStandardDeviation(sd,  normalDeviation);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  StandardDistributionImpl)this).setStandardDeviation(sd,  normalDeviation);	  ((    StandardDistributionImpl)this).setStandardDeviation(sd,    mean);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
150	[BUG]  [BUGGY]  standardDeviation  =  standardDeviation  +  sd;  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  standardDeviation  =  standardDeviation  +  sd;  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	standardDeviation  =  standardDeviation  +  sd;	  standardDeviation    =    mean    +    sd;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
151	[BUG]  [BUGGY]  StandardDistributionImpl  <  Double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);  [CE]  illegal  start  of  type  [FE]            MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  <  Double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  <  Double>  standardDeviation  =  new  NormalDistributionImpl  <  double>(sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
152	[BUG]  [BUGGY]  NormalDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  mean>(sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  NormalDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  mean>(sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	NormalDistributionImpl  <  double>  standardDeviation  =  new  NormalDistributionImpl  <  mean>(sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl    <    double>(sd);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
153	[BUG]  [BUGGY]  setStandardDeviation(new  double[]  {  sd,  standardDeviation  }  );  [CE]  illegal  start  of  type  [FE]                MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  setStandardDeviation(new  double[]  {  sd,  standardDeviation  }  );  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	setStandardDeviation(new  double[]  {  sd,  standardDeviation  }  );	  setStandardDeviation(new    double[]    {    sd    }    );    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
154	[BUG]  [BUGGY]  sd  =  Math.max(standardDeviation,  sd.doubleValue());  [CE]  illegal  start  of  type  [FE]                  MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  sd  =  Math.max(standardDeviation,  sd.doubleValue());  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.max(standardDeviation,  sd.doubleValue());	  sd    =    Math.max(sd,    standardDeviation.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
155	[BUG]  [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue()  +  1);  [CE]  illegal  start  of  type  [FE]                    MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  sd  =  Math.max(sd,  standardDeviation.doubleValue()  +  1);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	sd  =  Math.max(sd,  standardDeviation.doubleValue()  +  1);	  sd    =    Math.max(sd,    standardDeviation.doubleValue());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
156	[BUG]  [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd  +  mean);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  ((  NormalDistributionImpl)this).setStandardDeviation(sd  +  mean);  [BUGGY]      standardDeviation  =  sd;  }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	((  NormalDistributionImpl)this).setStandardDeviation(sd  +  mean);	  ((    NormalDistributionImpl)this).setStandardDeviation(sd);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
157	[BUG]  [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(message,  sd);  [CE]  illegal  start  of  type  [FE]              MaxIterationsExceededException      [CONTEXT]      public  void  setStandardDeviation(double  sd)  {  if  (sd  <=  0.0)  {  throw  new  IllegalArgumentException(       "Standard  deviation  must  be  positive.     ");  }      [BUGGY]  StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(message,  sd);  [BUGGY]      }  [CLASS]  NormalDistributionImpl  [METHOD]  setStandardDeviation  [RETURN_TYPE]  void  double  sd  [VARIABLES]  double  mean  sd  standardDeviation  long  serialVersionUID  boolean  	projects/Math103/src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java	0.30151134457776363	97	97	1	replace	StandardDistributionImpl  standardDeviation  =  new  NormalDistributionImpl(message,  sd);	  StandardDistributionImpl    standardDeviation    =    new    NormalDistributionImpl(sd,    sd);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
