bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
2	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
3	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
4	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
5	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
6	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
7	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addValu  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addValu  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addValu	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	68	None	replace
8	[BUG]  [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionError:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	34	None	replace
9	[BUG]  [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	34	None	replace
10	[BUG]  [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	34	None	replace
11	[BUG]  [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	34	None	replace
12	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	39	None	replace
13	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	39	None	replace
14	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	39	None	replace
15	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	39	None	replace
16	[BUG]  [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	39	None	replace
17	[BUG]  [BUGGY]  for(JSType  builder  :  builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  builder  :  builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  builder  :  builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    builders.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
18	[BUG]  [BUGGY]  for(JSType  that  :  builders.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  builders.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  builders.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    builders.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
19	[BUG]  [BUGGY]  for(JSType  builder  :  builders.keySet())  {  if(builder.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  builder  :  builders.keySet())  {  if(builder.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  builder  :  builders.keySet())  {  if(builder.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    builders.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
20	[BUG]  [BUGGY]  builder.addTypedProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
21	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getPropertyType(property),  that.getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
22	[BUG]  [BUGGY]  builder.addTypedProperty(property,  that.getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  that.getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  that.getPropertyType(property),  getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
23	[BUG]  [BUGGY]  builder.addTypedProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
24	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getPropertyNode(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
25	[BUG]  [BUGGY]  builder.setProperty(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.setProperty(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.setProperty(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
26	[BUG]  [BUGGY]  builder.addValue(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
27	[BUG]  [BUGGY]  builder.addError(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addError(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addError(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
28	[BUG]  [BUGGY]  builder.addType(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
29	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
30	[BUG]  [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	51	None	replace
31	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getLeastSupertype(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
32	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getRecordNode(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getRecordNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
33	[BUG]  [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPropert  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPropert  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPropert	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	51	None	replace
34	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getRawNode(property));  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getRawNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getRawNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
35	[BUG]  [BUGGY]  builder.addRecordType(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  getPropertyType(property));	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	72	None	replace
36	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addRecord  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addRecord  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addRecord	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	72	None	replace
37	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	72	None	replace
38	[BUG]  [BUGGY]  Builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	77	None	replace
39	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPro  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPro  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPro	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  not  a  statement	77	None	replace
40	[BUG]  [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addRecordType(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	69	None	replace
41	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addRecordType  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addRecordType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addRecordType	  builder.addRecordType(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	69	None	replace
42	[BUG]  [BUGGY]  AssertionFailedError:  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	42	None	replace
43	[BUG]  [BUGGY]  AssertionFailedError:  expected  =  builder.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  expected  =  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  expected  =  builder.addProperty(property,  getPropertyType(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
44	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
45	[BUG]  [BUGGY]  AssertionFailedError:  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	42	None	replace
46	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
47	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	41	None	replace
48	[BUG]  [BUGGY]  for(JSType  that  :  this.getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	41	None	replace
49	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	41	None	replace
50	[BUG]  [BUGGY]  For(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	41	None	replace
51	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
52	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	11	None	replace
54	[BUG]  [BUGGY]  Builder.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  getPropertyType(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  ';'  expected	11	None	replace
55	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.add  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.add  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.add	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  not  a  statement	11	None	replace
56	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addValue  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addValue  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addValue	  builder.addValue(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	75	None	replace
57	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyTypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyTypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyTypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
59	[BUG]  [BUGGY]  if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
60	[BUG]  [BUGGY]  if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
61	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
62	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
63	[BUG]  [BUGGY]  AssertionFailedError:  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
64	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
65	[BUG]  [BUGGY]  Builder.setProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  getPropertyType(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
66	[BUG]  [BUGGY]  Builder.addProperty(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.getPropertyType(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
67	[BUG]  [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry);  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  new  RecordTypeBuilder(registry);	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
68	[BUG]  [BUGGY]  Builder.setProperty(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  that.getPropertyType(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
69	[BUG]  [BUGGY]  Builder.setProperty(property,  that.isFrozen());  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  that.isFrozen());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  that.isFrozen());	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
70	[BUG]  [BUGGY]  if(that.isFrozen())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	94	None	replace
71	[BUG]  [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
72	[BUG]  [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	94	None	replace
73	[BUG]  [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	94	None	replace
74	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
75	[BUG]  [BUGGY]  AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	8	None	replace
76	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expect:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expect:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expect:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
77	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  number.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expected:  number.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  number.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
78	[BUG]  [BUGGY]  junit.framework.Error:  expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
79	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
80	[BUG]  [BUGGY]  if(!inferred  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
81	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	32	None	replace
82	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  ')'  expected	96	None	replace
83	[BUG]  [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(prop  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(prop	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  ')'  expected	96	None	replace
84	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyName(property));  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyName(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));    	non-compiled	[CE]  ';'  expected	27	None	replace
85	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
86	[BUG]  [BUGGY]  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));    	non-compiled	[CE]  ';'  expected	27	None	replace
87	[BUG]  [BUGGY]  builder.addValue(property,  that.getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.getPropertyType(property),  getPropertyNode(property));	  builder.addValue(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	60	None	replace
88	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyType(property),  that.getPropertyNode(property));	  builder.addValue(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	60	None	replace
89	[BUG]  [BUGGY]  builder.addValue(property,  getLeastSupertype(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getLeastSupertype(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getLeastSupertype(property),  getPropertyNode(property));	  builder.addValue(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	60	None	replace
90	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
91	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getRecordNode(property));  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getRecordNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
92	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
93	[BUG]  [BUGGY]  junit.framework.Error:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
94	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
95	[BUG]  [BUGGY]  for(JSType  that  :  property.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
96	[BUG]  [BUGGY]  for(JSType  iter  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  iter  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  iter  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
97	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	29	None	replace
98	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	63	None	replace
99	[BUG]  [BUGGY]  AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	63	None	replace
100	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expect:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expect:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expect:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	63	None	replace
101	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  number.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expected:  number.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  number.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	63	None	replace
102	[BUG]  [BUGGY]  junit.framework.Error:  expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  expected:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	63	None	replace
103	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  not  a  statement	16	None	replace
104	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(prop  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
105	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  build  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  build  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  build	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  not  a  statement	16	None	replace
106	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
107	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ';'  expected	16	None	replace
108	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
109	[BUG]  [BUGGY]  builder.addProperty(property,  getLeastSupertype(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getLeastSupertype(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getLeastSupertype(property),  that.getPropertyNode(property));	  builder.addProperty(property,    getLeastSupertype(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	79	None	replace
110	[BUG]  [BUGGY]  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	35	None	replace
111	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
112	[BUG]  [BUGGY]  junit.framework.Error:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
113	[BUG]  [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
114	[BUG]  [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
115	[BUG]  [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
116	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyType(property));  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
117	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	56	None	replace
119	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
120	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	24	None	replace
121	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	24	None	replace
122	[BUG]  [BUGGY]  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	24	None	replace
123	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	24	None	replace
124	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getLeastSupertype(property)))  {  builder.  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getLeastSupertype(property)))  {  builder.  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getLeastSupertype(property)))  {  builder.	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
125	[BUG]  [BUGGY]  Builder.addProperty(property,  getPropertyName(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  getPropertyName(property));	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyName(property));    }    	non-compiled	[CE]  ';'  expected	95	None	replace
126	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyName(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyName(property));	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyName(property));    }    	non-compiled	[CE]  ';'  expected	95	None	replace
127	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addPro  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addPro  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addPro	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyName(property));    }    	non-compiled	[CE]  not  a  statement	95	None	replace
128	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addValu  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addValu  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addValu	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	50	None	replace
129	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addValue  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addValue  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addValue	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	50	None	replace
130	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	50	None	replace
131	[BUG]  [BUGGY]  builder.addRecordType(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  getPropertyType(property),  that.getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    that.getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
132	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
133	[BUG]  [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  not  a  statement	82	None	replace
134	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
135	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
136	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
137	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(proper  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(proper  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(proper	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
138	[BUG]  [BUGGY]  for(JSType  that  :  builder.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  builder.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  builder.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    property.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
139	[BUG]  [BUGGY]  for(JSType  that  :  that.getPropertyTypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  that.getPropertyTypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  that.getPropertyTypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    property.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
140	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
141	[BUG]  [BUGGY]  Annotated:  builder.addType(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addType(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addType(property,  getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
142	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
143	[BUG]  [BUGGY]  Annotated:  builder.addRecordType(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addRecordType(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addRecordType(property,  getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
144	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addProperty(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  that.getPropertyType(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
145	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
146	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
147	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
148	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
149	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType()).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType()).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType()).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
150	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	62	None	replace
151	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  not  a  statement	62	None	replace
152	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  number.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  number.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  number.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  not  a  statement	62	None	replace
153	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  number.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  Expected:  number.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  number.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	62	None	replace
154	[BUG]  [BUGGY]  junit.framework.Error:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  not  a  statement	62	None	replace
155	[BUG]  [BUGGY]  builder.addProperty(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.addPropert    	non-compiled	[CE]  ')'  expected	17	None	replace
156	[BUG]  [BUGGY]  builder.addProperty(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.addPropert    	non-compiled	[CE]  ')'  expected	17	None	replace
157	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.addPropert    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
158	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getProperties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	19	None	replace
159	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getProperties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	19	None	replace
160	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getProperties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	19	None	replace
161	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent	  for(JSType    that    :    getProperties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	19	None	replace
162	[BUG]  [BUGGY]  builder.addType(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyType(property));	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
163	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	73	None	replace
164	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyNode(property));  }	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
165	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  ';'  expected	43	None	replace
166	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	43	None	replace
167	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	43	None	replace
168	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyName(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  ';'  expected	43	None	replace
169	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	64	None	replace
170	[BUG]  [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
171	[BUG]  [BUGGY]  builder.addProperty(property,  getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	64	None	replace
172	[BUG]  [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getRecordType().hasProperty(property)&&  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  }	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
173	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    this.properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	20	None	replace
174	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    this.properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	20	None	replace
175	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    this.properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	20	None	replace
176	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent	  for(JSType    that    :    this.properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	20	None	replace
177	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getProperties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	47	None	replace
178	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
179	[BUG]  [BUGGY]  for(JSType  iter  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  iter  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  iter  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
180	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	2	None	replace
181	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	2	None	replace
182	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	2	None	replace
183	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.add  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.add  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.add	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	2	None	replace
184	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	2	None	replace
185	[BUG]  [BUGGY]  builder.addProperty(property,  getType(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getType(property),  that.getPropertyNode(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
186	[BUG]  [BUGGY]  if(inferred)  {  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  For(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	40	None	replace
187	[BUG]  [BUGGY]  For(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  For(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	40	None	replace
188	[BUG]  [BUGGY]  if(inferred)  {  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  }	  For(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	40	None	replace
189	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	12	None	replace
190	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	12	None	replace
191	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	12	None	replace
192	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	12	None	replace
193	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	12	None	replace
194	[BUG]  [BUGGY]  Builder.add(builder,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.add(builder,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.add(builder,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	12	None	replace
195	[BUG]  [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.add(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	12	None	replace
196	[BUG]  [BUGGY]  Annotated:  builder.addError(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addError(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addError(property,  getPropertyType(property));	  Annotated:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	10	None	replace
197	[BUG]  [BUGGY]  Annotated:  builder.addType(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addType(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addType(property,  getPropertyType(property));	  Annotated:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	10	None	replace
198	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	70	None	replace
199	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property))  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property))	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	70	None	replace
200	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertype(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertype(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertype(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
201	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	30	None	replace
202	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  <identifier>  expected	30	None	replace
203	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
204	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	30	None	replace
205	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyType(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	30	None	replace
206	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertype(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertype(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertype(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	30	None	replace
207	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    this.properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	38	None	replace
208	[BUG]  [BUGGY]  if(this.properties!=  null)  {  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(this.properties!=  null)  {  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(this.properties!=  null)  {  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    this.properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	38	None	replace
209	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    this.properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	38	None	replace
210	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
211	[BUG]  [BUGGY]  if(!that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
212	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
213	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	25	None	replace
214	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
215	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
216	[BUG]  [BUGGY]  InferredProperty  <?>,  JSType>  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>,  JSType>  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>,  JSType>  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  not  a  statement	81	None	replace
217	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
218	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
219	[BUG]  [BUGGY]  InferredProperty  <?>,  JSType>  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>,  JSType>  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>,  JSType>  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  not  a  statement	81	None	replace
220	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyName(property));  }  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyName(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyName(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
221	[BUG]  [BUGGY]  Builder.addProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  getPropertyNode(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
222	[BUG]  [BUGGY]  Builder.setProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  getPropertyNode(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
223	[BUG]  [BUGGY]  Builder.addProperty(property,  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.getPropertyNode(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
224	[BUG]  [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
225	[BUG]  [BUGGY]  for(JSType  that  :  getPropertiesList())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertiesList())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertiesList())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
226	[BUG]  [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
227	[BUG]  [BUGGY]  for(JSType  iter  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  iter  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  iter  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
228	[BUG]  [BUGGY]  for(JSType  property  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  property  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  property  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
229	[BUG]  [BUGGY]  For(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	66	None	replace
230	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyNode(property));	  Annotated.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	7	None	replace
231	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));	  Annotated.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	7	None	replace
232	[BUG]  [BUGGY]  Annotated.AssertionError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionError:  Expected:  builder.addProperty(property,  getPropertyType(property));	  Annotated.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	7	None	replace
233	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
234	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
235	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
236	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
237	[BUG]  [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ')'  expected  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ')'  expected	84	None	replace
238	[BUG]  [BUGGY]  For(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ')'  expected  [FE]                                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ')'  expected	84	None	replace
239	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
240	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	83	None	replace
241	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  property.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
242	[BUG]  [BUGGY]  AssertionFailedError:  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
243	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
244	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
245	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProper  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProper  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProper	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  ')'  expected	28	None	replace
246	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)||    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
247	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
248	[BUG]  [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
249	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
250	[BUG]  [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  new  RecordTypeBuilder(registry,  that.toMaybeRecordType().getPropertyType(property));	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
251	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  cannot  find  symbol  Builder  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  cannot  find  symbol  Builder	67	None	replace
252	[BUG]  [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
253	[BUG]  [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ')'  expected	90	None	replace
254	[BUG]  [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	keepProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
255	[BUG]  [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  keepProperty(property,  that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	keepProperty(property,  that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
256	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
257	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
258	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(!isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(!isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(!isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
259	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
260	[BUG]  [BUGGY]  if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
261	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	53	None	replace
262	[BUG]  [BUGGY]  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	53	None	replace
263	[BUG]  [BUGGY]  junit.framework.Error:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	53	None	replace
264	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	53	None	replace
265	[BUG]  [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	53	None	replace
266	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	57	None	replace
267	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	57	None	replace
268	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	57	None	replace
269	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
270	[BUG]  [BUGGY]  for(JSType  iter  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  iter  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  iter  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
271	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	57	None	replace
272	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyNode(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	26	None	replace
273	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	26	None	replace
274	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyNode(property));  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	26	None	replace
275	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
276	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
277	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
278	[BUG]  [BUGGY]  for(JSType  that  :  this.getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
279	[BUG]  [BUGGY]  For(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	46	None	replace
280	[BUG]  [BUGGY]  for(JSType  iter  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  iter  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  iter  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
281	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
282	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  get  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  get  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  get	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  ')'  expected	31	None	replace
283	[BUG]  [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  ';'  expected	91	None	replace
284	[BUG]  [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionError:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionError:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	91	None	replace
285	[BUG]  [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.Error:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.Error:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	91	None	replace
286	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	91	None	replace
287	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
288	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
289	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
290	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
291	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isInferred  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isInferred  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isInferred  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
292	[BUG]  [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	33	None	replace
293	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
294	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
295	[BUG]  [BUGGY]  if(!inferred  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
296	[BUG]  [BUGGY]  if(builder.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(builder.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(builder.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
297	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertypeNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertypeNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertypeNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
298	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	48	None	replace
299	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  builder.getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
300	[BUG]  [BUGGY]  for(JSType  that  :  this.getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
301	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	48	None	replace
302	[BUG]  [BUGGY]  builder.addType(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyType(property),  that.getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
303	[BUG]  [BUGGY]  builder.addType(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
304	[BUG]  [BUGGY]  builder.addType(property,  that.getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  that.getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  that.getPropertyType(property),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
305	[BUG]  [BUGGY]  builder.addType(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  that.toMaybeRecordType().getPropertyType(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
306	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
307	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getRecordNode(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getRecordNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
308	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getLeastSupertype(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getLeastSupertype(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
309	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getNode(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
310	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.getRecordNode(property));  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.getRecordNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
311	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    property.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	76	None	replace
312	[BUG]  [BUGGY]  for(JSType  that  :  property.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    property.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	76	None	replace
313	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    property.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	76	None	replace
314	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  not  a  statement	13	None	replace
315	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ')'  expected	13	None	replace
316	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ')'  expected	13	None	replace
317	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	22	None	replace
318	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	22	None	replace
319	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.addProper    	non-compiled	[CE]  ')'  expected	15	None	replace
320	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.addProper    	non-compiled	[CE]  ')'  expected	15	None	replace
321	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.addProper    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
322	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getPropertyType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
323	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getPropertyNode(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
324	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyName(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyName(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyName(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
325	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType()).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType()).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType()).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
326	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.    	non-compiled	[CE]  <identifier>  expected	5	None	replace
327	[BUG]  [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	5	None	replace
328	[BUG]  [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	6	None	replace
329	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.values())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	37	None	replace
330	[BUG]  [BUGGY]  For(JSType  that  :  properties.values())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  properties.values())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.values())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.values())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	37	None	replace
331	[BUG]  [BUGGY]  builder.addRecordType(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
332	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
333	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
334	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertypeNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertypeNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertypeNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
335	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertypeNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertypeNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertypeNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	57	None	replace
336	[BUG]  [BUGGY]  if(that.getRecordType()!=  null)  {  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getRecordType()!=  null)  {  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getRecordType()!=  null)  {  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  }	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	64	None	replace
337	[BUG]  [BUGGY]  builder.addValue(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	64	None	replace
338	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	64	None	replace
339	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	94	None	replace
340	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( "	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	94	None	replace
341	[BUG]  [BUGGY]  if(that!=  null)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(prop  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that!=  null)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that!=  null)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	94	None	replace
342	[BUG]  [BUGGY]  if(that.isFrozen())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	94	None	replace
343	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	94	None	replace
344	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  Il  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  Il	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	94	None	replace
345	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
346	[BUG]  [BUGGY]  builder.addValue(propertyNode,  getPropertyType(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(propertyNode,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(propertyNode,  getPropertyType(property));	  builder.addValue(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	75	None	replace
347	[BUG]  [BUGGY]  builder.addValue(property,  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getLeastSupertype(property));	  builder.addValue(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	75	None	replace
348	[BUG]  [BUGGY]  builder.addValue(property,  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.getPropertyNode(property));	  builder.addValue(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	75	None	replace
349	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ';'  expected	13	None	replace
350	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ')'  expected	13	None	replace
351	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  not  a  statement	13	None	replace
352	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ')'  expected	13	None	replace
353	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ')'  expected	13	None	replace
354	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  build  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  build  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  build	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  not  a  statement	13	None	replace
355	[BUG]  [BUGGY]  builder.addType(that.toMaybeRecordType(),  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(that.toMaybeRecordType(),  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(that.toMaybeRecordType(),  getPropertyType(property),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
356	[BUG]  [BUGGY]  builder.addType(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
357	[BUG]  [BUGGY]  builder.addType(registry,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(registry,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(registry,  getPropertyType(property),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
358	[BUG]  [BUGGY]  builder.addType(name,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(name,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(name,  getPropertyType(property),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
359	[BUG]  [BUGGY]  builder.addType(that.toMaybeRecordType(),  getPropertyType(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(that.toMaybeRecordType(),  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(that.toMaybeRecordType(),  getPropertyType(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
360	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
361	[BUG]  [BUGGY]  safely())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  safely())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	safely())  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
362	[BUG]  [BUGGY]  InferredProperty  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  not  a  statement	90	None	replace
363	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
364	[BUG]  [BUGGY]  safely())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  safely())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	safely())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
365	[BUG]  [BUGGY]  InferredProperty  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  not  a  statement	90	None	replace
366	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	12	None	replace
367	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ';'  expected	12	None	replace
368	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	12	None	replace
369	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
370	[BUG]  [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyName  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyName  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyName	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	12	None	replace
371	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
372	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(!inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	80	None	replace
373	[BUG]  [BUGGY]  if(inferred)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  builder.addProperty(property,  getPropertyType(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
374	[BUG]  [BUGGY]  Builder.this.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.this.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.this.addProperty(property,  getPropertyType(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
375	[BUG]  [BUGGY]  if(inferred)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
376	[BUG]  [BUGGY]  Builder.this.addProperty(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.this.addProperty(property,  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.this.addProperty(property,  that.getPropertyType(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
377	[BUG]  [BUGGY]  for(JSType  that  :  this.builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    builders.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
378	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.getLeastSupertype(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property),  that.getLeastSupertype(property));	  builder.addProperty(property,    getPropertyType(property),    that.getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
379	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	41	None	replace
380	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isInferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isInferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(isInferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	41	None	replace
381	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isFalse(getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isFalse(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isFalse(getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
382	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
383	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getRecordNode(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getRecordNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
384	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ';'  expected	16	None	replace
385	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
386	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(prop  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
387	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
388	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  not  a  statement	16	None	replace
389	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property))	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
390	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(proper  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(proper  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(proper	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ')'  expected	16	None	replace
391	[BUG]  [BUGGY]  builder.addValue(property,  getTypeNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getTypeNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getTypeNode(property));	  builder.addValue(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	71	None	replace
392	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyName(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyName(property));	  builder.addValue(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	71	None	replace
393	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyNode(property),  that);  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getPropertyNode(property),  that);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyNode(property),  that);	  builder.addValue(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	71	None	replace
394	[BUG]  [BUGGY]  if(junit.framework!=  null)  {  AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  }  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(junit.framework!=  null)  {  AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(junit.framework!=  null)  {  AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  }	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  ';'  expected	91	None	replace
395	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	91	None	replace
396	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property),  that);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property),  that);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property),  that);	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyName(property));    	non-compiled	[CE]  not  a  statement	91	None	replace
397	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.addProper    	non-compiled	[CE]  ';'  expected	15	None	replace
398	[BUG]  [BUGGY]  builder.addRecordType(that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	72	None	replace
399	[BUG]  [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.toMaybeRecordType());	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	72	None	replace
400	[BUG]  [BUGGY]  if(junit.framework!=  null)  {  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(junit.framework!=  null)  {  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(junit.framework!=  null)  {  AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  }	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	55	None	replace
401	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
402	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
403	[BUG]  [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
404	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
405	[BUG]  [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  not  a  statement	82	None	replace
406	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder  [CE]  '('  or  '['  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  '('  or  '['  expected	96	None	replace
407	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(prop  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  ')'  expected	96	None	replace
408	[BUG]  [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder(registr  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder(registr  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder(registr	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  ')'  expected	96	None	replace
409	[BUG]  [BUGGY]  for(JSType  that  :  that.properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  that.properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  that.properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(inferred)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	39	None	replace
410	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  build  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  build  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  build	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.    	non-compiled	[CE]  not  a  statement	5	None	replace
411	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.    	non-compiled	[CE]  <identifier>  expected	5	None	replace
412	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  ')'  expected	2	None	replace
413	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.add    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
414	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property));  }	  builder.addRecordType(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	69	None	replace
415	[BUG]  [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)));	  builder.addRecordType(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	69	None	replace
416	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	34	None	replace
417	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that);  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that);	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	34	None	replace
418	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property),  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property),  getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	52	None	replace
419	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property),  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyNode(property),  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property),  getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	52	None	replace
420	[BUG]  [BUGGY]  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
421	[BUG]  [BUGGY]  Builder.this.addProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.this.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.this.addProperty(property,  getPropertyNode(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
422	[BUG]  [BUGGY]  Builder.this.addProperty(property,  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.this.addProperty(property,  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.this.addProperty(property,  that.getPropertyNode(property));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
423	[BUG]  [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType(),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	59	None	replace
424	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType(),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	59	None	replace
425	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getMaybeRecordType().getPropertyNode(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getMaybeRecordType().getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.getMaybeRecordType().getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	26	None	replace
426	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	26	None	replace
427	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)  [CE]  ')'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ')'  expected	26	None	replace
428	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that.getPropertyType(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that.getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that.getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
429	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyValue(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyValue(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyValue(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
430	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addType(property,  getPropertyNode(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addType(property,  getPropertyNode(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addType(property,  getPropertyNode(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
431	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
432	[BUG]  [BUGGY]  builder.addValue(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
433	[BUG]  [BUGGY]  builder.addProperty(property,  getRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
434	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyName(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));    	non-compiled	[CE]  ';'  expected	27	None	replace
435	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));    	non-compiled	[CE]  ';'  expected	27	None	replace
436	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getPropertyName(property));  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property)).isEquivalentTo(getPropertyName(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));    	non-compiled	[CE]  ';'  expected	27	None	replace
437	[BUG]  [BUGGY]  for(JSType  that  :  this.getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
438	[BUG]  [BUGGY]  builder.addTypedProperty(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
439	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getLeastSupertype(property),  getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
440	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getNodeType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getNodeType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getNodeType(property),  getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
441	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getRecordType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getRecordType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getRecordType(property),  getPropertyNode(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
442	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
443	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	22	None	replace
444	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	22	None	replace
445	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  this.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  this.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  this.toMaybeRecordType().getPropertyType(property));  }	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
446	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  }	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
447	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyNode(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property),  that.toMaybeRecordType());	  builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	49	None	replace
448	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }	  builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	49	None	replace
449	[BUG]  [BUGGY]  builder.addRecordType(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  getPropertyType(property),  that.toMaybeRecordType());	  builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	49	None	replace
450	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property)))  {  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.addPropert    	non-compiled	[CE]  ';'  expected	17	None	replace
451	[BUG]  [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.setProperty(property,  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	11	None	replace
452	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen  &&  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen  &&  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isFrozen  &&  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
453	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
454	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertype(that))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertype(that))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertype(that))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
455	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertype(that))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertype(that))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertype(that))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	30	None	replace
456	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertype(this))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertype(this))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertype(this))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
457	[BUG]  [BUGGY]  Builder  builder  =  builder.build();  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  builder.build();  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  builder.build();	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	92	None	replace
458	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  expected:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	63	None	replace
459	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	53	None	replace
460	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	53	None	replace
461	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  get  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  get  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  get	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
462	[BUG]  [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  not  a  statement	83	None	replace
463	[BUG]  [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
464	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPro  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPro  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPro	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
465	[BUG]  [BUGGY]  builder.addProperty(property,  getNodeType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getNodeType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getNodeType(property),  getPropertyNode(property));	  builder.addProperty(property,    getLeastSupertype(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	79	None	replace
466	[BUG]  [BUGGY]  builder.addProperty(property,  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getLeastSupertype(property));	  builder.addProperty(property,    getLeastSupertype(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	79	None	replace
467	[BUG]  [BUGGY]  builder.addRecordType(property,  that.getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
468	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertypes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	46	None	replace
469	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.fromMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.fromMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.fromMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
470	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
471	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
472	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
473	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
474	[BUG]  [BUGGY]  if(that.toMaybeRecordType()  ==  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()  ==  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()  ==  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
475	[BUG]  [BUGGY]  if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
476	[BUG]  [BUGGY]  if(that.isFrozen()  ||  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen()  ||  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen()  ||  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
477	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(proper  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(proper  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(proper	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
478	[BUG]  [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
479	[BUG]  [BUGGY]  for(JSType  that  :  getLeastSupertypeNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getLeastSupertypeNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getLeastSupertypeNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	48	None	replace
480	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
481	[BUG]  [BUGGY]  if(expected)  {  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(expected)  {  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(expected)  {  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  }	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
482	[BUG]  [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	EndObject()  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
483	[BUG]  [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  not  a  statement	81	None	replace
484	[BUG]  [BUGGY]  safely(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  safely(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	safely(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
485	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.values())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
486	[BUG]  [BUGGY]  if(that!=  null)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that!=  null)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that!=  null)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
487	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
488	[BUG]  [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  EndObject()  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	EndObject()  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
489	[BUG]  [BUGGY]  InferredProperty  <?  ==  (inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  >  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?  ==  (inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?  ==  (inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  >  expected	36	None	replace
490	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  is  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  is  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  is  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
491	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
492	[BUG]  [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property)  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	InferredProperty  <?>  inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property)	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
493	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	62	None	replace
494	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  not  a  statement	62	None	replace
495	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property));  }	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	70	None	replace
496	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	70	None	replace
497	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	70	None	replace
498	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	70	None	replace
499	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
500	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
501	[BUG]  [BUGGY]  if(that.toMaybeRecordType()  ==  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()  ==  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()  ==  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
502	[BUG]  [BUGGY]  if(builder!=  null)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(builder!=  null)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(builder!=  null)  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
503	[BUG]  [BUGGY]  if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	32	None	replace
504	[BUG]  [BUGGY]  AssertionFailedError:  expected(builder,  getPropertyNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  expected(builder,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  expected(builder,  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
505	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getEquivalentNode(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getEquivalentNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getEquivalentNode(property));	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	50	None	replace
506	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getNode(property));	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	50	None	replace
507	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getBaseValue(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getBaseValue(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getBaseValue(property));	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	50	None	replace
508	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
509	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isInferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isInferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(isInferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    this.properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	38	None	replace
510	[BUG]  [BUGGY]  builder.addType(that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
511	[BUG]  [BUGGY]  builder.addType(property,  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getLeastSupertype(property));	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
512	[BUG]  [BUGGY]  builder.addType(property,  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  that.toMaybeRecordType());	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
513	[BUG]  [BUGGY]  builder.addType(that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(that.toMaybeRecordType().getPropertyType(property));	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
514	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyType(property),  that.toMaybeRecordType());	  builder.addValue(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	60	None	replace
515	[BUG]  [BUGGY]  builder.addValue(property,  getType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getType(property),  getPropertyNode(property));	  builder.addValue(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	60	None	replace
516	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)));	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	68	None	replace
517	[BUG]  [BUGGY]  builder.addValue(propertyNode,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(propertyNode,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(propertyNode,  that.toMaybeRecordType().getPropertyType(property));	  builder.addValue(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	68	None	replace
518	[BUG]  [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	24	None	replace
519	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.values())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	37	None	replace
520	[BUG]  [BUGGY]  Annotated:  builder.addValue(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addValue(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addValue(property,  getPropertyType(property));	  Annotated:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	10	None	replace
521	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
522	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
523	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(prop  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
524	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
525	[BUG]  [BUGGY]  For(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  For(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  For(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	40	None	replace
526	[BUG]  [BUGGY]  Annotated:  builder.addValue(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addValue(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addValue(property,  getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
527	[BUG]  [BUGGY]  Annotated:  builder.addTypedProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addTypedProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addTypedProperty(property,  getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
528	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	35	None	replace
529	[BUG]  [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  JSError.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	JSError.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
530	[BUG]  [BUGGY]  builder.addProperty(property,  getType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getType(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
531	[BUG]  [BUGGY]  builder.addType(property,  getType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getType(property),  getPropertyNode(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
532	[BUG]  [BUGGY]  builder.addRecordType(property,  getType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addRecordType(property,  getType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  getType(property),  getPropertyNode(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
533	[BUG]  [BUGGY]  builder.addProperty(property,  getType(property),  getRecordNode(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getType(property),  getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getType(property),  getRecordNode(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
534	[BUG]  [BUGGY]  builder.addError(registry,  getType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addError(registry,  getType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addError(registry,  getType(property),  getPropertyNode(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
535	[BUG]  [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	66	None	replace
536	[BUG]  [BUGGY]  builder.addValue(property,  getNameNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getNameNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getNameNode(property));	  builder.addValue(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	71	None	replace
537	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
538	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	83	None	replace
539	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)  [CE]  ')'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  iter:  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property)	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	83	None	replace
540	[BUG]  [BUGGY]  for(JSType  that  :  property.properties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.properties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.properties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    builders.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
541	[BUG]  [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  Il  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  Il	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	94	None	replace
542	[BUG]  [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	94	None	replace
543	[BUG]  [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	94	None	replace
544	[BUG]  [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addProperty  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addProperty  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addProperty	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	94	None	replace
545	[BUG]  [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  ')'  expected	96	None	replace
546	[BUG]  [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder  [CE]  '('  or  '['  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isUnknownType())  {  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    else    {    return    new    RecordTypeBuilder(registry);    }    	non-compiled	[CE]  '('  or  '['  expected	96	None	replace
547	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
548	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
549	[BUG]  [BUGGY]  for(JSType  it  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  it  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  it  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
550	[BUG]  [BUGGY]  for(JSType  this  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  this  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  this  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodeMap())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  not  a  statement	57	None	replace
551	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	73	None	replace
552	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addType(property,  getPropertyNode  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addType(property,  getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addType(property,  getPropertyNode	  builder.addType(property,    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	73	None	replace
553	[BUG]  [BUGGY]  for(JSType  that  :  properties.entrySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.entrySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.entrySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)||    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
554	[BUG]  [BUGGY]  Constructor  <?>  inferred  =  isFrozen  &&  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Constructor  <?>  inferred  =  isFrozen  &&  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Constructor  <?>  inferred  =  isFrozen  &&  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
555	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
556	[BUG]  [BUGGY]  Constructor  <?>  inferred  =  isFrozen  &&  properties.keySet()  >  0)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Constructor  <?>  inferred  =  isFrozen  &&  properties.keySet()  >  0)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Constructor  <?>  inferred  =  isFrozen  &&  properties.keySet()  >  0)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
557	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyValue(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyValue(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyValue(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	81	None	replace
558	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addTypedProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addTypedProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addTypedProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
559	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getPropertyType(property));	  builder.addTypedProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	58	None	replace
560	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
561	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(Exception  e)  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
562	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(Exception  e)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
563	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
564	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(builder,  property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleFailedError(builder,  property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleFailedError(builder,  property,  getPropertyNode(property));	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
565	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(Throwable  t)  {  builder.addProperty(property,  getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
566	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleMissingName(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleMissingName(property,  that.toMaybeRecordType(),  getPropertyNode(property));	  if(isFrozen)    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	90	None	replace
567	[BUG]  [BUGGY]  if(that.getRecordType()!=  null)  {  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getRecordType()!=  null)  {  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getRecordType()!=  null)  {  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  }	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
568	[BUG]  [BUGGY]  builder.addProperty(property,  getRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getRecordType().getPropertyType(property));	  builder.addProperty(property,    that.getRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	51	None	replace
569	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
570	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
571	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  that.getRawClass())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  that.getRawClass())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AnnotationTraversal.traverse(compiler,  that.getRawClass())  {  builder.addProperty(property,  getPropertyNode(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
572	[BUG]  [BUGGY]  Builder  builder  =  getPropertyBuilder(property);  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  getPropertyBuilder(property);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  getPropertyBuilder(property);	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	93	None	replace
573	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  builder.addProperty(property,  getPropertyType(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
574	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyType(property),  getMemberNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addValue(property,  getPropertyType(property),  getMemberNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyType(property),  getMemberNode(property));	  builder.addValue(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	60	None	replace
575	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  not  a  statement	16	None	replace
576	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder    	non-compiled	[CE]  ';'  expected	16	None	replace
577	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
578	[BUG]  [BUGGY]  for(JSType  it  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  it  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  it  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
579	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
580	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
581	[BUG]  [BUGGY]  for(JSType  that  :  properties.entrySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  properties.entrySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.entrySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	84	None	replace
582	[BUG]  [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.addProperty(prop  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.addProperty(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.addProperty(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	5	None	replace
583	[BUG]  [BUGGY]  if(that.hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.addProperty(prop  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.addProperty(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType(property)))  {  builder.addProperty(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	5	None	replace
584	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
585	[BUG]  [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry,  that.isFunction()?  this  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry,  that.isFunction()?  this  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  new  RecordTypeBuilder(registry,  that.isFunction()?  this  :  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
586	[BUG]  [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry,  that.isFunction()?  this  :  registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  new  RecordTypeBuilder(registry,  that.isFunction()?  this  :  registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  new  RecordTypeBuilder(registry,  that.isFunction()?  this  :  registry.getNativeObjectType(JSTypeNative.OBJECT_TYPE));	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
587	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(that.isFrozen())    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	89	None	replace
588	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)+  1,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)+  1,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)+  1,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	53	None	replace
589	[BUG]  [BUGGY]  Builder.addProperty(property,  getPropertyType(property)),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder.addProperty(property,  getPropertyType(property)),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder.addProperty(property,  getPropertyType(property)),  getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	77	None	replace
590	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.values())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	37	None	replace
591	[BUG]  [BUGGY]  Builder  builder  =  getPropertyBuilder();  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  getPropertyBuilder();  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  getPropertyBuilder();	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	88	None	replace
592	[BUG]  [BUGGY]  Builder  builder  =  getPropertyType(property);  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  getPropertyType(property);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  getPropertyType(property);	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	88	None	replace
593	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
594	[BUG]  [BUGGY]  if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(prop  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen()  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
595	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getType(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
596	[BUG]  [BUGGY]  builder.addType(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  ';'  expected	65	None	replace
597	[BUG]  [BUGGY]  if(!inferred)  {  builder.addProperty(property,  that.getPropertyType(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  builder.addProperty(property,  that.getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  builder.addProperty(property,  that.getPropertyType(property));  }	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
598	[BUG]  [BUGGY]  if(that.getPropertyNode()!=  null)  {  builder.addProperty(property,  that.getPropertyType(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getPropertyNode()!=  null)  {  builder.addProperty(property,  that.getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getPropertyNode()!=  null)  {  builder.addProperty(property,  that.getPropertyType(property));  }	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
599	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  that.getPropertyType(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  that.getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addProperty(property,  that.getPropertyType(property));  }	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
600	[BUG]  [BUGGY]  if(that.getPropertyNode()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.getPropertyNode()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.getPropertyNode()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  }	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  ';'  expected	74	None	replace
601	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getProperties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
602	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyValue(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyValue(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyValue(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	34	None	replace
603	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    property.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
604	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addImplicitProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addImplicitProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addImplicitProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	55	None	replace
605	[BUG]  [BUGGY]  try  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
606	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
607	[BUG]  [BUGGY]  try  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  try  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	try  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyType(property));  }	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
608	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleMissingName(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleMissingName(property,  that.toMaybeRecordType().getPropertyType(property));	  if(isFrozen)    {    for(JSType    that    :    properties.keySet())    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	82	None	replace
609	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
610	[BUG]  [BUGGY]  for(JSType  it  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  it  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  it  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
611	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertyNodes())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
612	[BUG]  [BUGGY]  AssertionFailedError:  builder.addValue(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addValue(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addValue(property,  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
613	[BUG]  [BUGGY]  AssertionFailedError:  builder.addAssertionProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addAssertionProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addAssertionProperty(property,  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
614	[BUG]  [BUGGY]  AssertionFailedError:  builder.addType(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addType(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addType(property,  getPropertyNode(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	42	None	replace
615	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    getProperties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	41	None	replace
616	[BUG]  [BUGGY]  AssertionFailedError:  builder.addAssertionProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AssertionFailedError:  builder.addAssertionProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  builder.addAssertionProperty(property,  getPropertyType(property));	  AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	6	None	replace
617	[BUG]  [BUGGY]  Builder  builder  =  getPropertyNode(property);  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Builder  builder  =  getPropertyNode(property);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Builder  builder  =  getPropertyNode(property);	  if(that.toMaybeRecordType().hasProperty(property))    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	92	None	replace
618	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addValue(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addValue(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addValue(property,  getPropertyType(property));  }	  builder.addValue(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	75	None	replace
619	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addValue(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  builder.addValue(property,  getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addValue(property,  getPropertyType(property));  }	  builder.addValue(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	75	None	replace
620	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  }	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property),    that.toMaybeRecordType());    	non-compiled	[CE]  ';'  expected	62	None	replace
621	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  }	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
622	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
623	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyName(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	24	None	replace
624	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	85	None	replace
625	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected,  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  expected,  builder.addProperty(property,  getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected,  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	8	None	replace
626	[BUG]  [BUGGY]  an.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  an.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	an.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
627	[BUG]  [BUGGY]  a.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  a.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	a.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
628	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  that.getMaybeRecordType().getPropertyType(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	35	None	replace
629	[BUG]  [BUGGY]  for(JSType  that  :  property.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    property.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	76	None	replace
630	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  }	  builder.addProperty(property,    getPropertyType(property),    that.getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
631	[BUG]  [BUGGY]  if(!inferred)  {  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(!inferred)  {  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(!inferred)  {  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  }	  builder.addProperty(property,    getPropertyType(property),    that.getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
632	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.getRecordNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property),  that.getRecordNode(property));	  builder.addProperty(property,    getPropertyType(property),    that.getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
633	[BUG]  [BUGGY]  if(that.isUnknownType()  ||  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isUnknownType()  ||  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isUnknownType()  ||  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
634	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)    	non-compiled	[CE]  ')'  expected	14	None	replace
635	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addRecordType(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addRecordType(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addRecordType(property,  getPropertyNode(property));  }	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	72	None	replace
636	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  getPropertyNode  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  getPropertyNode	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	72	None	replace
637	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  get  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  get  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  get	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	72	None	replace
638	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  getPropertyNode(prop  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  getPropertyNode(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().isEquivalentTo(  getPropertyType(property)))  {  builder.addRecordType(property,  getPropertyNode(prop	  builder.addRecordType(property,    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	72	None	replace
639	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated:  builder.addProperty(property,  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  that.getPropertyNode(property));	  Annotated:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	44	None	replace
640	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  build  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  build  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  build	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  not  a  statement	13	None	replace
641	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  not  a  statement	13	None	replace
642	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder    	non-compiled	[CE]  ';'  expected	13	None	replace
643	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen    ||    isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	33	None	replace
644	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getMemberNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getMemberNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getMemberNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
645	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getLastNode(property));  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getLastNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getLastNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	54	None	replace
646	[BUG]  [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.addProperty(prop  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.addProperty(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.addProperty(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	11	None	replace
647	[BUG]  [BUGGY]  if(that.hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.addProperty(prop  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.addProperty(prop  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode(property)))  {  builder.addProperty(prop	  if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode(property)))    {    builder.    	non-compiled	[CE]  ')'  expected	11	None	replace
648	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(JSType    that    :    getPropertyNode(property))    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	30	None	replace
649	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getLeastSupertype(property));    	non-compiled	[CE]  ')'  expected	52	None	replace
650	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType().getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getLeastSupertype(property));    	non-compiled	[CE]  ';'  expected	52	None	replace
651	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));	  Annotated.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	7	None	replace
652	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  }	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
653	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
654	[BUG]  [BUGGY]  builder.addType(property,  getPropertyType(property),  getRecordNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getPropertyType(property),  getRecordNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyType(property),  getRecordNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
655	[BUG]  [BUGGY]  builder.addType(property,  getRecordType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getRecordType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getRecordType(property),  getPropertyNode(property));	  builder.addType(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	61	None	replace
656	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  }	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
657	[BUG]  [BUGGY]  builder.addType(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
658	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType());  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType());	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
659	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getMemberNode(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getMemberNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getMemberNode(property));	  builder.addProperty(property,    getPropertyType(property)).isEquivalentTo(getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	23	None	replace
660	[BUG]  [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ';'  expected	67	None	replace
661	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().getPropertyType(property)!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().getPropertyType(property)!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().getPropertyType(property)!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ')'  expected	67	None	replace
662	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().getPropertyType(property)  ==  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().getPropertyType(property)  ==  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null  &&  that.toMaybeRecordType().getPropertyType(property)  ==  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType	  if(that.toMaybeRecordType()!=    null)    {    builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    }    	non-compiled	[CE]  ')'  expected	67	None	replace
663	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  }	  builder.addProperty(property,    getLeastSupertype(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	79	None	replace
664	[BUG]  [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen())  {  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  }	  builder.addProperty(property,    getLeastSupertype(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	79	None	replace
665	[BUG]  [BUGGY]  builder.addType(property,  getLeastSupertype(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addType(property,  getLeastSupertype(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getLeastSupertype(property),  getPropertyNode(property));	  builder.addProperty(property,    getLeastSupertype(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	79	None	replace
666	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getType(property),  getPropertyNode(property));  }  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getType(property),  getPropertyNode(property));  }	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
667	[BUG]  [BUGGY]  builder.addProperty(property,  getRecordType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  builder.addProperty(property,  getRecordType(property),  getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getRecordType(property),  getPropertyNode(property));	  builder.addProperty(property,    getType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	78	None	replace
668	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode    	non-compiled	[CE]  ')'  expected	18	None	replace
669	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that.getPropertyNode(property));  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that.getPropertyNode(property));  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  that.getPropertyNode(property));	  junit.framework.AssertionFailedError:    builder.addProperty(property,    getPropertyNode(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	56	None	replace
670	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(property,  that);  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleMissingName(property,  that);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleMissingName(property,  that);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
671	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this).traverse(registry);  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  this).traverse(registry);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AnnotationTraversal.traverse(compiler,  this).traverse(registry);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
672	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(property,  that);  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleMissingClass(property,  that);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleMissingClass(property,  that);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
673	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(property);  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleMissingClass(property);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleMissingClass(property);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
674	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  that);  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  that);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AnnotationTraversal.traverse(compiler,  that);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
675	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(property);  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  aughtExceptionHandler.handleMissingName(property);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	aughtExceptionHandler.handleMissingName(property);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
676	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this);  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  AnnotationTraversal.traverse(compiler,  this);  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AnnotationTraversal.traverse(compiler,  this);	  if(inferred)    {    for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	36	None	replace
677	[BUG]  [BUGGY]  for(JSType  it  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  it  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  it  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
678	[BUG]  [BUGGY]  for(JSType  this  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  this  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  this  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  not  a  statement	66	None	replace
679	[BUG]  [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  this.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    getPropertiesSet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
680	[BUG]  [BUGGY]  for(JSType  j  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  for(JSType  j  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  j  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.values())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
681	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addRecord  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addRecord  [BUGGY]      return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addRecord	  builder.addRecordType(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	69	None	replace
