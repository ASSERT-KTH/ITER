bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property),  that.getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
2	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	3	None	replace
3	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProper  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProper  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProper	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	3	None	replace
5	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	10	None	replace
7	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	10	None	replace
8	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	10	None	replace
9	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	10	None	replace
10	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  getPropertyType(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	10	None	replace
11	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.add  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.add  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.add	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	4	None	replace
13	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ')'  expected	4	None	replace
15	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addProper  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addProper  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyNode(property)))  {  builder.addProper	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
17	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPropert  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPropert  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addPropert	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
18	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyNode	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode    	non-compiled	[CE]  ')'  expected	12	None	replace
19	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode    	non-compiled	[CE]  ')'  expected	12	None	replace
22	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
23	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
24	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
25	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property)).isEquivalentTo(that.toMaybeRecordType().getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
27	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(getPropertyName(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProper  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProper  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProper	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  ')'  expected	13	None	replace
29	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNode(property))  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
31	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPro  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPro  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPro	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  ')'  expected	14	None	replace
32	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ')'  expected	6	None	replace
33	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isFrozen  ||  isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
34	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property));	      	non-compiled	[CE]  not  a  statement	8	None	replace
35	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	      	non-compiled	[CE]  not  a  statement	8	None	replace
36	[BUG]  [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(inferred)  {  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
37	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.values())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
38	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  this.properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
39	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
40	[BUG]  [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	For(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ')'  expected	5	None	replace
41	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
42	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	9	None	replace
43	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
44	[BUG]  [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  Annotated:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	Annotated:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	9	None	replace
45	[BUG]  [BUGGY]  for(JSType  that  :  builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  builders.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getProperties.values())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodes())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyNode    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	6	None	replace
50	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	6	None	replace
51	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	6	None	replace
52	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getLeastSupertype(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	6	None	replace
53	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));	      	non-compiled	[CE]  not  a  statement	8	None	replace
54	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	      	non-compiled	[CE]  not  a  statement	8	None	replace
55	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyType(property));	      	non-compiled	[CE]  not  a  statement	8	None	replace
56	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));	      	non-compiled	[CE]  not  a  statement	8	None	replace
57	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertyNodeMap())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addTypedProperty(property,  getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
59	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType(),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType(),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
60	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addValue(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
61	[BUG]  [BUGGY]  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addType(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
62	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  Expected:  builder.addProperty(property,  getPropertyType(property),  that.toMaybeRecordType());	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	10	None	replace
63	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  expected:  builder.addProperty(property,  getPropertyNode(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
64	[BUG]  [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getRecordType().getPropertyType(property)).isEquivalentTo(getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
65	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getPropertyNode(property)).isEquivalentTo(getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property)).isEquivalentTo(    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	7	None	replace
66	[BUG]  [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  getPropertiesSet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	4	None	replace
68	[BUG]  [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  that.toMaybeRecordType().getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	4	None	replace
69	[BUG]  [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  that.toMaybeRecordType().getPropertyType(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	4	None	replace
70	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property));  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyNode(property));	  builder.addProperty(property,    that.toMaybeRecordType().getPropertyType(property));    	non-compiled	[CE]  ';'  expected	4	None	replace
71	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addValue(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
72	[BUG]  [BUGGY]  builder.addRecordType(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addRecordType(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addRecordType(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
73	[BUG]  [BUGGY]  builder.addType(property,  getPropertyNode(property));  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addType(property,  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addType(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
74	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyType(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  that.getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  that.getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
75	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyType(property));  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addValue(property,  getPropertyType(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addValue(property,  getPropertyType(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	2	None	replace
76	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
77	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
78	[BUG]  [BUGGY]  builder.addProperty(property,  getType(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getType(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getType(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
79	[BUG]  [BUGGY]  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	builder.addProperty(property,  getLeastSupertype(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property),    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	3	None	replace
80	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(!inferred)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(JSType    that    :    properties.keySet())    {    if(isFrozen)    {    builder.addProperty(property,    getPropertyNode(property));    }    	non-compiled	[CE]  ';'  expected	5	None	replace
81	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  getPropertyNode(property));  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
82	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
83	[BUG]  [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  for(JSType  that  :  properties.keySet())  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property),  getPropertyNode(property));  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
84	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
85	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(isFrozen)  {  builder.addProperty(property,  getPropertyNode(property),  getPropertyNode(property));  }	      	non-compiled	[CE]  ';'  expected	8	None	replace
86	[BUG]  [BUGGY]  for(JSType  that  :  property.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  property.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  property.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  for(JSType  that  :  properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	for(JSType  that  :  properties.keySet())  {  if(that.toMaybeRecordType().hasProperty(property)||  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(JSType    that    :    properties.keySet())    {    if(that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  }	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	2	None	replace
89	[BUG]  [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen())  {  builder.addProperty(property,  getPropertyType(property));  }	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	2	None	replace
90	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  }	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  ';'  expected	2	None	replace
91	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	junit.framework.AssertionFailedError:  builder.addProperty(property,  getPropertyName(property));	  junit.framework.AssertionFailedError:    Expected:    builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
92	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
93	[BUG]  [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.isFrozen())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.isFrozen())  {  builder.addProperty(property,  getPropertyNode(property));  }	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
94	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
95	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyName(property));  }  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyName(property));  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyName(property));  }	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
96	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder(registry);  }  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }    [BUGGY]  if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder(registry);  }  [BUGGY]    return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	153	153	3	replace	if(that.toMaybeRecordType().hasProperty(property))  {  builder.addProperty(property,  getPropertyNode(property));  }  else  {  return  new  RecordTypeBuilder(registry);  }	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  ';'  expected	1	None	replace
