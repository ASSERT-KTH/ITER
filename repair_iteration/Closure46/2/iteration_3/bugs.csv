bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  property  :  that.propertyType.getPropertyType(property))  {  [CE]  cannot  find  symbol  propertyType  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyType.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyType.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol  propertyType	50	None	replace
2	[BUG]  [BUGGY]  for(JSType  property  :  that.getPropertyType(property))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
3	[BUG]  [BUGGY]  for(String  property  :  that.property.getPropertyType(property))  {  [CE]  cannot  find  symbol  property  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.property.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.property.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol  property	50	None	replace
4	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(property))  {  [CE]  for-each  not  applicable  to  expression  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	50	None	replace
5	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyType(property))  {  [CE]  cannot  find  symbol  properties  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol  properties	50	None	replace
6	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
7	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
8	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
9	[BUG]  [BUGGY]  For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  ')'  expected	22	None	replace
10	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  ')'  expected	22	None	replace
11	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
12	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNode(property))  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
13	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyType(properties))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyType(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyType(properties))  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
14	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(properties),  builder)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNode(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNode(properties),  builder)  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	56	None	replace
15	[BUG]  [BUGGY]  for(JSType  js  :  getPropertyNode(properties))  {  [CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  js  :  getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  js  :  getPropertyNode(properties))  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)	56	None	replace
16	[BUG]  [BUGGY]  for(JSType  that  :  properties)  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  properties)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  properties)  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
17	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
18	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
19	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
20	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
21	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
22	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
23	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
24	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
25	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
26	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
27	[BUG]  [BUGGY]  For(String  property  :  that.properties.getPropertyNames())  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.getPropertyNames())  {	  for(String    property    :    this.properties.getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	76	None	replace
28	[BUG]  [BUGGY]  for(JSType  property  :  that.properties.getPropertyTypes())  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  properties	35	None	replace
29	[BUG]  [BUGGY]  for(String  property  :  this.properties.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
30	[BUG]  [BUGGY]  for(String  property  :  that.owners.getPropertyTypes())  {  [CE]  cannot  find  symbol  owners  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.owners.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.owners.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  owners	35	None	replace
31	[BUG]  [BUGGY]  for(String  property  :  that.registry.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registry.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registry.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
32	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
34	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
35	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  >>  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  >>  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  >>  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
36	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  >=  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  >=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  >=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
37	[BUG]  [BUGGY]  for(String  property  :  that.property.getPropertyNames())  {  [CE]  cannot  find  symbol  property  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.property.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.property.getPropertyNames())  {	  for(String    property    :    properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  property	83	None	replace
38	[BUG]  [BUGGY]  for(String  property  :  that.owners.getPropertyNames())  {  [CE]  cannot  find  symbol  owners  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.owners.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.owners.getPropertyNames())  {	  for(String    property    :    properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  owners	83	None	replace
39	[BUG]  [BUGGY]  for(String  property  :  that.propertyNames)  {  [CE]  cannot  find  symbol  propertyNames  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNames)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNames)  {	  for(String    property    :    properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	83	None	replace
40	[BUG]  [BUGGY]  For(String  property  :  getPropertyNode(property))  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNode(property))  {	  For(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
41	[BUG]  [BUGGY]  For(String  property  :  this.properties.values())  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.values())  {	  For(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
42	[BUG]  [BUGGY]  For(String  property  :  getPropertyNode(this.properties))  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNode(this.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNode(this.properties))  {	  For(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
43	[BUG]  [BUGGY]  For(String  property  :  properties.keySet())  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  properties.keySet())  {	  For(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
44	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyTypes())  {	  for(String    property    :    getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
45	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyTypes())  {	  for(String    property    :    getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	53	None	replace
46	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyTypes())  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyTypes())  {	  for(String    property    :    getPropertyTypes())    {    	non-compiled	[CE]  ')'  expected	53	None	replace
47	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  ')'  expected	23	None	replace
48	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	23	None	replace
49	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	23	None	replace
50	[BUG]  [BUGGY]  for(String  property  :  that.propertyNames.keySet())  {  [CE]  cannot  find  symbol  propertyNames  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNames.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNames.keySet())  {	  for(String    property    :    that.owners.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	15	None	replace
51	[BUG]  [BUGGY]  for(String  property  :  that.propertyMap.keySet())  {  [CE]  cannot  find  symbol  propertyMap  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyMap.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyMap.keySet())  {	  for(String    property    :    that.owners.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  propertyMap	15	None	replace
52	[BUG]  [BUGGY]  for(String  property  :  that.owners.values())  {  [CE]  cannot  find  symbol  owners  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.owners.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.owners.values())  {	  for(String    property    :    that.owners.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  owners	15	None	replace
53	[BUG]  [BUGGY]  for(String  property  :  that.propertyList.keySet())  {  [CE]  cannot  find  symbol  propertyList  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyList.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyList.keySet())  {	  for(String    property    :    that.owners.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  propertyList	15	None	replace
54	[BUG]  [BUGGY]  for(String  property  :  that.names.keySet())  {  [CE]  cannot  find  symbol  names  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.names.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.names.keySet())  {	  for(String    property    :    that.owners.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  names	15	None	replace
55	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
56	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
57	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
58	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
59	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
60	[BUG]  [BUGGY]  For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  ')'  expected	18	None	replace
61	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNodeNames())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNodeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
62	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNodeNames())  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNodeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  ')'  expected	38	None	replace
63	[BUG]  [BUGGY]  for(String  property  :  this.getPropertyNodeNames())  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.getPropertyNodeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
64	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNodeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	38	None	replace
65	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNodeNames())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNodeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
66	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(properties),  builder)  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(properties),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
67	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType(property),  builder)  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyType(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType(property),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
68	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(properties),  builder)  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyType(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(properties),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
69	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(properties),  builder)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyName(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(properties),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
70	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName(),  builder)  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName(),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName(),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
71	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames(properties))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames(properties))  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
72	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNames(properties))  {  [CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNames(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNames(properties))  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;	103	None	replace
73	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(property),  that)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames(property),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(property),  that)  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  ')'  expected	103	None	replace
74	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(properties,  that))  {  [CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames(properties,  that))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(properties,  that))  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;	103	None	replace
75	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(properties),  that)  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames(properties),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(properties),  that)  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  ')'  expected	103	None	replace
76	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(properties),  builder)  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(properties),  builder)  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  ')'  expected	103	None	replace
77	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
78	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
79	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  ==  getPropertyNames())  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
80	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
81	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (series  {  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (series  {  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (series  {  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
82	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
83	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
84	[BUG]  [BUGGY]  For(String  property  :  that.properties.get(0))  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.get(0))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.get(0))  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
85	[BUG]  [BUGGY]  For(String  property  :  that.properties.getPropertyType(property))  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.getPropertyType(property))  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
86	[BUG]  [BUGGY]  For(String  property  :  that.properties.getPropertyName())  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.getPropertyName())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.getPropertyName())  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
87	[BUG]  [BUGGY]  For(String  property  :  that.properties.iterator().next())  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.iterator().next())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.iterator().next())  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
88	[BUG]  [BUGGY]  For(JSType  that.properties  :  properties.values())  {  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(JSType  that.properties  :  properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(JSType  that.properties  :  properties.values())  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
89	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  <identifier>  expected	88	None	replace
90	[BUG]  [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPro  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPro  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPro	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  ')'  expected	88	None	replace
91	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isE  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isE  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isE	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  ')'  expected	88	None	replace
92	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
93	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
94	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEqui	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  ')'  expected	88	None	replace
95	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).is  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).is  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).is	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPro    	non-compiled	[CE]  ')'  expected	88	None	replace
96	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNames())  {  [CE]  incompatible  types  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNames())  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  incompatible  types	40	None	replace
97	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(that))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNode(that))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNode(that))  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	40	None	replace
98	[BUG]  [BUGGY]  for(JSType  js  :  getPropertyNames())  {  [CE]  incompatible  types  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  js  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  js  :  getPropertyNames())  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  incompatible  types	40	None	replace
99	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNode())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNode())  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	40	None	replace
100	[BUG]  [BUGGY]  for(JSType  property  :  that.getPropertyNode(property))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(property))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
101	[BUG]  [BUGGY]  for(String  property  :  that.property.getPropertyNode(property))  {  [CE]  cannot  find  symbol  property  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.property.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.property.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(property))    {    	non-compiled	[CE]  cannot  find  symbol  property	5	None	replace
102	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName(property))  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName(property))  {	  for(String    property    :    that.getPropertyNode(property))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
103	[BUG]  [BUGGY]  for(String  property  :  this.getPropertyNode(property))  {  [CE]  for-each  not  applicable  to  expression  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(property))    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	5	None	replace
104	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property).names())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property).names())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property).names())  {	  for(String    property    :    that.names())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
105	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property),  that.names())  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property),  that.names())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property),  that.names())  {	  for(String    property    :    that.names())    {    	non-compiled	[CE]  ')'  expected	54	None	replace
106	[BUG]  [BUGGY]  For(String  property  :  that.names())  {  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.names())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.names())  {	  for(String    property    :    that.names())    {    	non-compiled	[CE]  ')'  expected	54	None	replace
107	[BUG]  [BUGGY]  for(String  property  :  this.properties.get(property))  {  [CE]  for-each  not  applicable  to  expression  type  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.get(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.get(property))  {	  for(String    property    :    that.properties.get(property))    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	79	None	replace
108	[BUG]  [BUGGY]  for(JSType  property  :  that.properties.get(property))  {  [CE]  cannot  find  symbol  properties  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties.get(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties.get(property))  {	  for(String    property    :    that.properties.get(property))    {    	non-compiled	[CE]  cannot  find  symbol  properties	79	None	replace
109	[BUG]  [BUGGY]  For(String  property  :  that.properties.get(property))  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.get(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.get(property))  {	  for(String    property    :    that.properties.get(property))    {    	non-compiled	[CE]  ')'  expected	79	None	replace
110	[BUG]  [BUGGY]  for(String  property  :  registry.properties.get(property))  {  [CE]  cannot  find  symbol  properties  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.properties.get(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.properties.get(property))  {	  for(String    property    :    that.properties.get(property))    {    	non-compiled	[CE]  cannot  find  symbol  properties	79	None	replace
111	[BUG]  [BUGGY]  JSType  thatMaybe  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybe  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybe  =  getPropertyType(property);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
112	[BUG]  [BUGGY]  JSType  toMaybe  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybe  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  getPropertyType(property);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
113	[BUG]  [BUGGY]  JSType  toMaybe  =  getLeastSupertype(property);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybe  =  getLeastSupertype(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  getLeastSupertype(property);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
114	[BUG]  [BUGGY]  JSType  toMaybe  =  getLeastSupertype(that);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybe  =  getLeastSupertype(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  getLeastSupertype(that);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
115	[BUG]  [BUGGY]  JSType  that  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getPropertyType(property);	  JSType    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
116	[BUG]  [BUGGY]  JSType  that  =  getLeastSupertype(property);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getLeastSupertype(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getLeastSupertype(property);	  JSType    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
117	[BUG]  [BUGGY]  JSType  that  =  getLeastSupertype(that);  [CE]  illegal  start  of  type  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getLeastSupertype(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getLeastSupertype(that);	  JSType    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
118	[BUG]  [BUGGY]  JSType  that  =  getRecordType(property);  [CE]  illegal  start  of  type  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getRecordType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getRecordType(property);	  JSType    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
119	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  (  {  a:  number  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
120	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
121	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  not  a  statement	63	None	replace
122	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  (  {  a:  number  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Annotated.AssertionFailedError:  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Annotated.AssertionFailedError:  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  not  a  statement	63	None	replace
123	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
124	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
125	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
126	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
127	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
128	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
129	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
130	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
131	[BUG]  [BUGGY]  For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  ')'  expected	87	None	replace
132	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(property),  that)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyType(property),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(property),  that)  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
133	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(property),  getPropertyType(property))  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(property),  getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(property),  getPropertyType(property))  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
134	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(property),  that)  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyName(property),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(property),  that)  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
135	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(property),  this)  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(property),  this)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(property),  this)  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
136	[BUG]  [BUGGY]  for(JSType  property  :  that.properties)  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties)  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  properties	7	None	replace
137	[BUG]  [BUGGY]  for(JSType  property  :  this.properties.values())  {  [CE]  no  suitable  method  found  for  hasProperty(JSType)  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  this.properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  this.properties.values())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  no  suitable  method  found  for  hasProperty(JSType)	7	None	replace
138	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.values())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  this.properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  this.properties.values())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	7	None	replace
139	[BUG]  [BUGGY]  for(JSType  property  :  that.properties).values())  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties).values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties).values())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
140	[BUG]  [BUGGY]  for(JSType  prop  :  that.properties.values())  {  [CE]  cannot  find  symbol  properties  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  prop  :  that.properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  prop  :  that.properties.values())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  properties	7	None	replace
141	[BUG]  [BUGGY]  for(JSType  property  :  that.property.values())  {  [CE]  cannot  find  symbol  property  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.property.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.property.values())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  property	7	None	replace
142	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  ')'  expected	30	None	replace
143	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
144	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  ==  getPropertyNames());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
145	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  ')'  expected	30	None	replace
146	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
147	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  ')'  expected	30	None	replace
148	[BUG]  [BUGGY]  for(JSType  property  :  that.propertyTypes())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.propertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.propertyTypes())  {	  for(JSType    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
149	[BUG]  [BUGGY]  for(JSType  property  :  this.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  this.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  this.getPropertyTypes())  {	  for(JSType    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
150	[BUG]  [BUGGY]  for(String  property  :  that.keySet())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.keySet())  {	  for(String    property    :    names.keySet())    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
151	[BUG]  [BUGGY]  for(String  name  :  names.keySet())  {  [CE]  cannot  find  symbol  names  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  name  :  names.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  name  :  names.keySet())  {	  for(String    property    :    names.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  names	82	None	replace
152	[BUG]  [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyNode(property);  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.MaybeRecordType  =  getPropertyNode(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  ';'  expected	96	None	replace
153	[BUG]  [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyNode(property);  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.toMaybeRecordType  =  getPropertyNode(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  ';'  expected	96	None	replace
154	[BUG]  [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyType(property);  [CE]  ';'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.MaybeRecordType  =  getPropertyType(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  ';'  expected	96	None	replace
155	[BUG]  [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyType(property);  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.toMaybeRecordType  =  getPropertyType(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  ';'  expected	96	None	replace
156	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    	non-compiled	[CE]  ')'  expected	66	None	replace
157	[BUG]  [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProper  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProper  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProper	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  ')'  expected	90	None	replace
158	[BUG]  [BUGGY]  for(JSType  property  :  that.propertyNames())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.propertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.propertyNames())  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
159	[BUG]  [BUGGY]  for(JSType  property  :  that.properties.getPropertyNames())  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties.getPropertyNames())  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  properties	3	None	replace
160	[BUG]  [BUGGY]  for(JSType  property  :  that.propertyNames)  {  [CE]  cannot  find  symbol  propertyNames  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.propertyNames)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.propertyNames)  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	3	None	replace
161	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
162	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  properties)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  properties)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  properties)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
163	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
164	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  this.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  this.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  this.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
165	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  this.properties)  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  this.properties)  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  this.properties)  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
166	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  that.getPropertyNames())  {  builder.addProperty(property);  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  that.getPropertyNames())  {  builder.addProperty(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  property  :  that.getPropertyNames())  {  builder.addProperty(property);  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
167	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
168	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	26	None	replace
169	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	26	None	replace
170	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	26	None	replace
171	[BUG]  [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getPropertyType	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType    	non-compiled	[CE]  ')'  expected	91	None	replace
172	[BUG]  [BUGGY]  for(String  property  :  that.registry.properties.keySet())  {  [CE]  cannot  find  symbol  properties  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registry.properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registry.properties.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  properties	80	None	replace
173	[BUG]  [BUGGY]  for(String  property  :  that.registry.keySet())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registry.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registry.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
174	[BUG]  [BUGGY]  for(String  property  :  this.registry.properties.keySet())  {  [CE]  cannot  find  symbol  properties  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.registry.properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.registry.properties.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  properties	80	None	replace
175	[BUG]  [BUGGY]  for(String  property  :  that.datasets.keySet())  {  [CE]  cannot  find  symbol  datasets  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.datasets.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.datasets.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  datasets	80	None	replace
176	[BUG]  [BUGGY]  for(String  property  :  that.registry.names.keySet())  {  [CE]  cannot  find  symbol  names  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registry.names.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registry.names.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  names	80	None	replace
177	[BUG]  [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(get  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(get  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(get	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    get    	non-compiled	[CE]  ')'  expected	93	None	replace
178	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    get    	non-compiled	[CE]  not  a  statement	93	None	replace
179	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    get    	non-compiled	[CE]  <identifier>  expected	93	None	replace
180	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode())  {	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
181	[BUG]  [BUGGY]  System.arraycopy(property,  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(property,  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(property,  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(that,  0,  builder,  1,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(that,  0,  builder,  1,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(that,  0,  builder,  1,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(that,  0,  builder,  0,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(that,  0,  builder,  0,  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(that,  0,  builder,  0,  getPropertyNode(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(registry,  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(registry,  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(registry,  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(this.property,  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(this.property,  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(this.property,  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(this,  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(this,  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(this,  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
187	[BUG]  [BUGGY]  builder.addType(getPropertyType(property),  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(getPropertyType(property),  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(getPropertyType(property),  getPropertyNode(property));	  builder.addType(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
188	[BUG]  [BUGGY]  builder.addType(getLeastSupertype(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(getLeastSupertype(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(getLeastSupertype(property));	  builder.addType(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
189	[BUG]  [BUGGY]  builder.addType(getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(getPropertyNode(property));	  builder.addType(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
190	[BUG]  [BUGGY]  builder.addType(getLeastSupertype(that));  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(getLeastSupertype(that));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(getLeastSupertype(that));	  builder.addType(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
191	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    For(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	25	None	replace
192	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  For(String  property  :  getPropertyNames())  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  For(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  For(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    For(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	25	None	replace
193	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyNode(property))  {  [CE]  cannot  find  symbol  properties  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol  properties	48	None	replace
194	[BUG]  [BUGGY]  for(String  property  :  this.properties.getPropertyNode(property))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
195	[BUG]  [BUGGY]  for(JSType  property  :  that.getPropertyNode(properties))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.getPropertyNode(properties))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
196	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyNode(that))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.getPropertyNode(that))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyNode(that))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
197	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType(properties))  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyType(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType(properties))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
198	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number!=  getPropertyNames())  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	31	None	replace
199	[BUG]  [BUGGY]  for(String  property  :  this.propertyTypes())  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.propertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.propertyTypes())  {	  for(String    property    :    that.propertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
200	[BUG]  [BUGGY]  For(String  property  :  that.propertyTypes())  {  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.propertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.propertyTypes())  {	  for(String    property    :    that.propertyTypes())    {    	non-compiled	[CE]  ')'  expected	36	None	replace
201	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  that.getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  that.getPropertyNode(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
202	[BUG]  [BUGGY]  builder.addType(property,  that.getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(property,  that.getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
203	[BUG]  [BUGGY]  builder.addRecordType(property,  that.getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addRecordType(property,  that.getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addRecordType(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
204	[BUG]  [BUGGY]  builder.setProperty(property,  that.getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.setProperty(property,  that.getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.setProperty(property,  that.getPropertyType(property));	  builder.addProperty(property,    that.getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
205	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [CE]  ')'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(prop    	non-compiled	[CE]  ')'  expected	47	None	replace
206	[BUG]  [BUGGY]  if(!inferred)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [CE]  ')'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(!inferred)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(!inferred)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(prop    	non-compiled	[CE]  ')'  expected	47	None	replace
207	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [CE]  ')'  expected  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(prop    	non-compiled	[CE]  ')'  expected	47	None	replace
208	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [CE]  <identifier>  expected  [FE]                                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(prop    	non-compiled	[CE]  <identifier>  expected	47	None	replace
209	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [CE]  not  a  statement  [FE]                                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(prop    	non-compiled	[CE]  not  a  statement	47	None	replace
210	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropert  [CE]  not  a  statement  [FE]                                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropert  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropert	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(prop    	non-compiled	[CE]  not  a  statement	47	None	replace
211	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
212	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
213	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
214	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
215	[BUG]  [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
216	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  ')'  expected	92	None	replace
217	[BUG]  [BUGGY]  for(String  property  :  this.properties())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties())  {	  for(String    property    :    that.properties())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
218	[BUG]  [BUGGY]  for(JSType  property  :  that.properties())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties())  {	  for(String    property    :    that.properties())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
219	[BUG]  [BUGGY]  For(String  property  :  that.properties())  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties())  {	  for(String    property    :    that.properties())    {    	non-compiled	[CE]  ')'  expected	9	None	replace
220	[BUG]  [BUGGY]  for(String  property  :  that.registry.getProperties())  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registry.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registry.getProperties())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
221	[BUG]  [BUGGY]  for(String  property  :  this.registry.getProperties())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.registry.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.registry.getProperties())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
222	[BUG]  [BUGGY]  for(String  property  :  that.registeredMap.getProperties())  {  [CE]  cannot  find  symbol  registeredMap  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registeredMap.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registeredMap.getProperties())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  registeredMap	81	None	replace
223	[BUG]  [BUGGY]  for(String  property  :  that.registers.getProperties())  {  [CE]  cannot  find  symbol  registers  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registers.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registers.getProperties())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  registers	81	None	replace
224	[BUG]  [BUGGY]  for(String  property  :  that.compiler.getProperties())  {  [CE]  cannot  find  symbol  compiler  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.compiler.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.compiler.getProperties())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  compiler	81	None	replace
225	[BUG]  [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(getProperty	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProperty    	non-compiled	[CE]  ')'  expected	89	None	replace
226	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(this.properties),  builder)  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(this.properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(this.properties),  builder)  {	  for(String    property    :    getPropertyNode(this.properties))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
227	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(this.properties))  {  [CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(this.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(this.properties))  {	  for(String    property    :    getPropertyNode(this.properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)	12	None	replace
228	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(this.properties))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(this.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(this.properties))  {	  for(String    property    :    getPropertyNode(this.properties))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
229	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(this.properties,  builder))  {  [CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>,RecordTypeBuilder)  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(this.properties,  builder))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(this.properties,  builder))  {	  for(String    property    :    getPropertyNode(this.properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>,RecordTypeBuilder)	12	None	replace
230	[BUG]  [BUGGY]  Constructor  <?>  that  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getPropertyType(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
231	[BUG]  [BUGGY]  Constructor  <?>  that  =  getLeastSupertype(property);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getLeastSupertype(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getLeastSupertype(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
232	[BUG]  [BUGGY]  Constructor  <?>  that  =  getConstructorNode(property);  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getConstructorNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getConstructorNode(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
233	[BUG]  [BUGGY]  Constructor  <?>  that  =  getLeastSupertype(that);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getLeastSupertype(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getLeastSupertype(that);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
234	[BUG]  [BUGGY]  Constructor  <?>  that  =  getTypeNode(property);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getTypeNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getTypeNode(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
235	[BUG]  [BUGGY]  Constructor  <?>  that  =  getProperty(property);  [CE]  illegal  start  of  type  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getProperty(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getProperty(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
236	[BUG]  [BUGGY]  for(String  property  :  that.propertyMap())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyMap())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyMap())  {	  for(String    property    :    that.propertySet())    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
237	[BUG]  [BUGGY]  for(String  property  :  that.propertyList())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyList())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyList())  {	  for(String    property    :    that.propertySet())    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
238	[BUG]  [BUGGY]  for(String  property  :  this.propertySet())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.propertySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.propertySet())  {	  for(String    property    :    that.propertySet())    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
239	[BUG]  [BUGGY]  for(String  property  :  that.propertyArray())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyArray())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyArray())  {	  for(String    property    :    that.propertySet())    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
240	[BUG]  [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyNode(that);  [CE]  ';'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyNode(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.MaybeRecordType  =  getPropertyNode(that);	  JSType    toMaybeRecordType    =    getPropertyNode(that);    	non-compiled	[CE]  ';'  expected	100	None	replace
241	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getLeastSupertype(that);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybeRecordType  =  getLeastSupertype(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getLeastSupertype(that);	  JSType    toMaybeRecordType    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
242	[BUG]  [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyNode(that);  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyNode(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.toMaybeRecordType  =  getPropertyNode(that);	  JSType    toMaybeRecordType    =    getPropertyNode(that);    	non-compiled	[CE]  ';'  expected	100	None	replace
243	[BUG]  [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyType(that);  [CE]  ';'  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyType(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.MaybeRecordType  =  getPropertyType(that);	  JSType    toMaybeRecordType    =    getPropertyNode(that);    	non-compiled	[CE]  ';'  expected	100	None	replace
244	[BUG]  [BUGGY]  JSType  thatMaybeRecordType  =  getLeastSupertype(that);  [CE]  illegal  start  of  type  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybeRecordType  =  getLeastSupertype(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybeRecordType  =  getLeastSupertype(that);	  JSType    toMaybeRecordType    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
245	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName(properties))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName(properties))  {	  for(String    property    :    getPropertyName(properties))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
246	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(property))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyName(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(property))  {	  for(String    property    :    getPropertyName(properties))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
247	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName())  {	  for(String    property    :    getPropertyName(properties))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
248	[BUG]  [BUGGY]  for(String  property  :  that.properties.getProperties())  {  [CE]  cannot  find  symbol  properties  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getProperties())  {	  for(String    property    :    properties.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  properties	78	None	replace
249	[BUG]  [BUGGY]  for(String  property  :  that.properties.getProperty())  {  [CE]  cannot  find  symbol  properties  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getProperty())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getProperty())  {	  for(String    property    :    properties.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  properties	78	None	replace
250	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  For(String  property  :  this.properties.keySet())  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  For(String  property  :  this.properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  For(String  property  :  this.properties.keySet())  {	  for(String    property    :    this.properties.keySet())    {    For(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	17	None	replace
251	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  For(String  property  :  properties.keySet())  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  For(String  property  :  properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  For(String  property  :  properties.keySet())  {	  for(String    property    :    this.properties.keySet())    {    For(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	17	None	replace
252	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyType(properties))  {  [CE]  no  suitable  method  found  for  getPropertyType(SortedMap<String,JSType>)  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyType(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyType(properties))  {	  for(String    property    :    getPropertyType(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyType(SortedMap<String,JSType>)	55	None	replace
253	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that.getPropertyType()))  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that.getPropertyType()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that.getPropertyType()))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
254	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(that.properties))  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(that.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(that.properties))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  cannot  find  symbol  properties	69	None	replace
255	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that.getPropertyName()))  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that.getPropertyName()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that.getPropertyName()))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
256	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  (  {  a:  number  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
257	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  }  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  ')'  expected	67	None	replace
258	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
259	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  }  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  ')'  expected	67	None	replace
260	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
261	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  Expected:  (  {  a:  number  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Annotated.AssertionFailedError:  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Annotated.AssertionFailedError:  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  not  a  statement	67	None	replace
262	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  }  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  {  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  ')'  expected	67	None	replace
263	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	add	AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	27	9	replace
264	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	27	9	replace
265	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  for(String  property  :  that.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  Expected:  for(String  property  :  that.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  Expected:  for(String  property  :  that.getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
266	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	add	for(String  property  :  this.getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	27	9	replace
267	[BUG]  [BUGGY]  for(String  property  :  this.getPropertyNames())  {  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	27	9	replace
268	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
269	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	non-compiled	[CE]  ')'  expected	64	None	replace
270	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Annotated.AssertionFailedError:  Expected:  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Annotated.AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Annotated.AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	non-compiled	[CE]  not  a  statement	64	None	replace
271	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
272	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	add	for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  	64	9	replace
273	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  	64	9	replace
274	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
275	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
276	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
277	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(proper  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(proper  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(proper	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  ')'  expected	58	None	replace
278	[BUG]  [BUGGY]  for(String  property  :  that.getProperties.values())  {  [CE]  cannot  find  symbol  getProperties  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getProperties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getProperties.values())  {	  for(String    property    :    that.getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  getProperties	32	None	replace
279	[BUG]  [BUGGY]  for(String  property  :  that.getPropertiesSet())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertiesSet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertiesSet())  {	  for(String    property    :    that.getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
280	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProperty    	non-compiled	[CE]  not  a  statement	85	None	replace
281	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
282	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
283	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  }  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  ')'  expected	60	None	replace
284	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  ==  not  a  statement  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  ==  not  a  statement  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  ==  not  a  statement	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  ')'  expected	60	None	replace
285	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
286	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
287	[BUG]  [BUGGY]  for(String  namespace  :  that.namespaces())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  namespace  :  that.namespaces())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  namespace  :  that.namespaces())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
288	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property),  that.namespaces())  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property),  that.namespaces())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property),  that.namespaces())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  ')'  expected	94	None	replace
289	[BUG]  [BUGGY]  For(String  property  :  that.namespaces())  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.namespaces())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.namespaces())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  ')'  expected	94	None	replace
290	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property).namespaces())  {  [CE]  cannot  find  symbol  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property).namespaces())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property).namespaces())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
291	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(property))  {  [CE]  no  suitable  method  found  for  getPropertyNode(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(property))  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(JSType)	49	None	replace
292	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(properties),  builder)  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(properties),  builder)  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	49	None	replace
293	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(property),  builder)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(property),  builder)  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	49	None	replace
294	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(property),  that)  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(property),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(property),  that)  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	49	None	replace
295	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(properties,  that))  {  [CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>,JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(properties,  that))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(properties,  that))  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>,JSType)	49	None	replace
296	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
297	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
298	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
299	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
300	[BUG]  [BUGGY]  builder.addType(property,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(property,  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
301	[BUG]  [BUGGY]  builder.addRecordType(property,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addRecordType(property,  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addRecordType(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
302	[BUG]  [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  that.toMaybeRecordType().getPropertyType(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
303	[BUG]  [BUGGY]  builder.addProperty(property,  getLeastSupertype(property));  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  getLeastSupertype(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getLeastSupertype(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
304	[BUG]  [BUGGY]  for(String  property  :  that.propertyNode.getProperties())  {  [CE]  cannot  find  symbol  propertyNode  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNode.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNode.getProperties())  {	  for(String    property    :    that.propertyMap.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNode	10	None	replace
305	[BUG]  [BUGGY]  for(String  property  :  that.propertyNodes.getProperties())  {  [CE]  cannot  find  symbol  propertyNodes  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNodes.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNodes.getProperties())  {	  for(String    property    :    that.propertyMap.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNodes	10	None	replace
306	[BUG]  [BUGGY]  for(String  property  :  that.propertyNodeMap.getProperties())  {  [CE]  cannot  find  symbol  propertyNodeMap  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNodeMap.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNodeMap.getProperties())  {	  for(String    property    :    that.propertyMap.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNodeMap	10	None	replace
307	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyName())  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getPropertyName())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyName())  {	  for(String    property    :    that.propertyMap.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  properties	10	None	replace
308	[BUG]  [BUGGY]  for(JSType  that  :  this.property.getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  this.property.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  this.property.getPropertyTypes())  {	  for(JSType    that    :    property.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	37	None	replace
309	[BUG]  [BUGGY]  for(JSType  that  :  properties.getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  properties.getPropertyTypes())  {	  for(JSType    that    :    property.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	37	None	replace
310	[BUG]  [BUGGY]  for(JSType  that  :  that.getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  that.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  that.getPropertyTypes())  {	  for(JSType    that    :    property.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	37	None	replace
311	[BUG]  [BUGGY]  for(JSType  that  :  property.getPropertyNode(property))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  property.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  property.getPropertyNode(property))  {	  for(JSType    that    :    property.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	37	None	replace
312	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(property.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(property.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(property.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
313	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(that.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode(that.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(that.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
314	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(property).getProperties())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(property).getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(property).getProperties())  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
315	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that,  that.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that,  that.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that,  that.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
316	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  method  addProperty  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  method  addProperty  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;	59	None	replace
317	[BUG]  [BUGGY]  AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
318	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
319	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addPropert  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addPropert  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addPropert	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
320	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProper  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProper  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProper	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
321	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
322	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
323	[BUG]  [BUGGY]  for(String  property  :  that.property)  {  [CE]  cannot  find  symbol  property  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.property)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.property)  {	  for(String    property    :    that.properties)    {    	non-compiled	[CE]  cannot  find  symbol  property	8	None	replace
324	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames)  {  [CE]  cannot  find  symbol  getPropertyNames  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames)  {	  for(String    property    :    that.properties)    {    	non-compiled	[CE]  cannot  find  symbol  getPropertyNames	8	None	replace
325	[BUG]  [BUGGY]  for(String  property  :  that.names)  {  [CE]  cannot  find  symbol  names  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.names)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.names)  {	  for(String    property    :    that.properties)    {    	non-compiled	[CE]  cannot  find  symbol  names	8	None	replace
326	[BUG]  [BUGGY]  for(String  property  :  that.propertyNode(property))  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNode(property))  {	  for(String    property    :    getPropertyNode(property))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
327	[BUG]  [BUGGY]  for(JSType  property  :  that.computePropertyNames())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.computePropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.computePropertyNames())  {	  for(String    property    :    that.computePropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
328	[BUG]  [BUGGY]  for(JSType  that  :  property.computePropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  property.computePropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  property.computePropertyNames())  {	  for(String    property    :    that.computePropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	84	None	replace
329	[BUG]  [BUGGY]  for(String  property  :  that.computePropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.computePropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.computePropertyTypes())  {	  for(String    property    :    that.computePropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
330	[BUG]  [BUGGY]  for(String  property  :  that.computePropertyNodeNames())  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.computePropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.computePropertyNodeNames())  {	  for(String    property    :    that.computePropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
331	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
332	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
333	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
334	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
335	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
336	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
337	[BUG]  [BUGGY]  for(JSType  that  :  this.property.getPropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  this.property.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  this.property.getPropertyNames())  {	  for(JSType    that    :    property.getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	4	None	replace
338	[BUG]  [BUGGY]  for(JSType  that  :  properties.getPropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  properties.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  properties.getPropertyNames())  {	  for(JSType    that    :    property.getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	4	None	replace
339	[BUG]  [BUGGY]  for(JSType  that  :  that.getPropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  that.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  that.getPropertyNames())  {	  for(JSType    that    :    property.getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	4	None	replace
340	[BUG]  [BUGGY]  for(String  property  :  this.properties.getPropertyName())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.getPropertyName())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getPropertyName())  {	  for(String    property    :    this.properties.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
341	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo    	non-compiled	[CE]  ')'  expected	44	None	replace
342	[BUG]  [BUGGY]  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo    	non-compiled	[CE]  not  a  statement	44	None	replace
343	[BUG]  [BUGGY]  if(!that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [CE]  ')'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(!that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(!that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo    	non-compiled	[CE]  ')'  expected	44	None	replace
344	[BUG]  [BUGGY]  for(String  property  :  this.propertyNames())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.propertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.propertyNames())  {	  for(String    property    :    that.propertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
345	[BUG]  [BUGGY]  For(String  property  :  that.propertyNames())  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.propertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.propertyNames())  {	  for(String    property    :    that.propertyNames())    {    	non-compiled	[CE]  ')'  expected	2	None	replace
346	[BUG]  [BUGGY]  for(String  property  :  that.types.getPropertyNames())  {  [CE]  cannot  find  symbol  types  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.types.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.types.getPropertyNames())  {	  for(String    property    :    that.types.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  types	77	None	replace
347	[BUG]  [BUGGY]  for(String  property  :  that.owners.getProperties())  {  [CE]  cannot  find  symbol  owners  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.owners.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.owners.getProperties())  {	  for(String    property    :    that.types.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  owners	77	None	replace
348	[BUG]  [BUGGY]  for(String  property  :  that.propertyNames.getProperties())  {  [CE]  cannot  find  symbol  propertyNames  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNames.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNames.getProperties())  {	  for(String    property    :    that.types.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	77	None	replace
349	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode())  {  [CE]  no  suitable  method  found  for  getPropertyNode()  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNode())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode())  {	  for(String    property    :    getPropertyNode())    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode()	39	None	replace
350	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType())  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyType())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType())  {	  for(String    property    :    getPropertyNode())    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
351	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNodes())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNodes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNodes())  {	  for(String    property    :    getPropertyNode())    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
352	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
353	[BUG]  [BUGGY]  builder.addType(property,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(property,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(property,  getPropertyType(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
354	[BUG]  [BUGGY]  builder.addRecordType(property,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addRecordType(property,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addRecordType(property,  getPropertyType(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
355	[BUG]  [BUGGY]  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
356	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
357	[BUG]  [BUGGY]  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  &&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	&&  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
358	[BUG]  [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyNode(null);  [CE]  ';'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.MaybeRecordType  =  getPropertyNode(null);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.MaybeRecordType  =  getPropertyNode(null);	  JSType    toMaybeRecordType    =    getPropertyNode(null);    	non-compiled	[CE]  ';'  expected	101	None	replace
359	[BUG]  [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyNode(null);  [CE]  ';'  expected  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that.toMaybeRecordType  =  getPropertyNode(null);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that.toMaybeRecordType  =  getPropertyNode(null);	  JSType    toMaybeRecordType    =    getPropertyNode(null);    	non-compiled	[CE]  ';'  expected	101	None	replace
360	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNodeTypes())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNodeTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNodeTypes())  {	  for(String    property    :    getPropertyNodeTypes())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
361	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNodeTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNodeTypes())  {	  for(String    property    :    getPropertyNodeTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	95	None	replace
362	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNodeTypes())  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  getPropertyNodeTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNodeTypes())  {	  for(String    property    :    getPropertyNodeTypes())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
363	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNodeTypes())  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNodeTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNodeTypes())  {	  for(String    property    :    getPropertyNodeTypes())    {    	non-compiled	[CE]  ')'  expected	95	None	replace
364	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  not  a  statement  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  not  a  statement  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  number  ==  not  a  statement	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
365	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  not  a  statement  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  not  a  statement  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  not  a  statement	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
366	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  not  a  statement  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  not  a  statement  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  ==  not  a  statement	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
367	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  Number  {  a:  number  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  Number  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  Number  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
368	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  not  a  statement  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  not  a  statement  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  not  a  statement	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
369	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
370	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  not  a  statement  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  not  a  statement  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number!=  not  a  statement	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
371	[BUG]  [BUGGY]  for(String  property  :  that.propertyNode.getPropertyNames())  {  [CE]  cannot  find  symbol  propertyNode  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNode.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNode.getPropertyNames())  {	  for(String    property    :    that.properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNode	1	None	replace
372	[BUG]  [BUGGY]  JSType  that  =  getPropertyType(that);  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getPropertyType(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getPropertyType(that);	  JSType    that    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
373	[BUG]  [BUGGY]  JSType  that  =  getRecordType(that);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getRecordType(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getRecordType(that);	  JSType    that    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
374	[BUG]  [BUGGY]  For(JSType  that.properties  :  properties.keySet())  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(JSType  that.properties  :  properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(JSType  that.properties  :  properties.keySet())  {	  For(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	14	None	replace
375	[BUG]  [BUGGY]  For(String  property  :  that.properties.entrySet())  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.entrySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.entrySet())  {	  For(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	14	None	replace
376	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  this.properties.iterator();  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  this.properties.iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  this.properties.iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
377	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  that.properties.iterator();  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  that.properties.iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  that.properties.iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
378	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  getProperties().iterator();  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  getProperties().iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  getProperties().iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
379	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  allProperties.iterator();  [CE]  illegal  start  of  type  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  allProperties.iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  allProperties.iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
380	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  propertyNodes.iterator();  [CE]  illegal  start  of  type  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  propertyNodes.iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  propertyNodes.iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
381	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  getPropertyNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  getPropertyNode(property);	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
382	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(property),  builder)  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(property),  builder)  {	  for(String    property    :    getPropertyNode(property),    builder)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
383	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(property),  builder)  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyType(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(property),  builder)  {	  for(String    property    :    getPropertyNode(property),    builder)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
384	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(property),  builder)  {  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyName(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(property),  builder)  {	  for(String    property    :    getPropertyNode(property),    builder)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
385	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName(property),  builder)  {  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName(property),  builder)  {	  for(String    property    :    getPropertyNode(property),    builder)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
386	[BUG]  [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(isFrozen)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  not  a  statement	46	None	replace
387	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.add	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  not  a  statement	46	None	replace
388	[BUG]  [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  <identifier>  expected	46	None	replace
389	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProperty    	non-compiled	[CE]  not  a  statement	85	None	replace
390	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProperty    	non-compiled	[CE]  not  a  statement	85	None	replace
391	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProperty    	non-compiled	[CE]  not  a  statement	85	None	replace
392	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProperty    	non-compiled	[CE]  not  a  statement	85	None	replace
393	[BUG]  [BUGGY]  for(String  property  :  that.compiler.getPropertyNames())  {  [CE]  cannot  find  symbol  compiler  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.compiler.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.compiler.getPropertyNames())  {	  for(String    property    :    properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  compiler	83	None	replace
394	[BUG]  [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyNode(that);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyNode(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybeRecordType  =  getPropertyNode(that);	  JSType    toMaybeRecordType    =    getPropertyNode(null);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
395	[BUG]  [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyNode(null);  [CE]  illegal  start  of  type  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyNode(null);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybeRecordType  =  getPropertyNode(null);	  JSType    toMaybeRecordType    =    getPropertyNode(null);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
396	[BUG]  [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybeRecordType  =  getPropertyNode(property);	  JSType    toMaybeRecordType    =    getPropertyNode(null);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
397	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  properties.values().iterator();  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  properties.values().iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  properties.values().iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
398	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  getProperties.iterator();  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  getProperties.iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  getProperties.iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
399	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
400	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  Expected:  (this.properties  ==  null)  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  Expected:  (this.properties  ==  null)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  Expected:  (this.properties  ==  null)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
401	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
402	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(that.properties))  {  [CE]  cannot  find  symbol  properties  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyName(that.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(that.properties))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  cannot  find  symbol  properties	69	None	replace
403	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that))  {  [CE]  no  suitable  method  found  for  getPropertyNode(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(JSType)	69	None	replace
404	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that.getProperty))  {  [CE]  cannot  find  symbol  getProperty  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that.getProperty))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that.getProperty))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  cannot  find  symbol  getProperty	69	None	replace
405	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that.name))  {  [CE]  cannot  find  symbol  name  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that.name))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that.name))  {	  for(String    property    :    getPropertyNode(that.properties))    {    	non-compiled	[CE]  cannot  find  symbol  name	69	None	replace
406	[BUG]  [BUGGY]  For(String  property  :  getPropertyNode(properties))  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNode(properties))  {	  For(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	14	None	replace
407	[BUG]  [BUGGY]  For(String  property  :  getProperties.keySet())  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getProperties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getProperties.keySet())  {	  For(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	14	None	replace
408	[BUG]  [BUGGY]  JSType  toMaybe  =  getMaybe(property);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybe  =  getMaybe(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  getMaybe(property);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
409	[BUG]  [BUGGY]  JSType  thatMaybe  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybe  =  getPropertyNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybe  =  getPropertyNode(property);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
410	[BUG]  [BUGGY]  JSType  toMaybe  =  getMaybe(that);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybe  =  getMaybe(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  getMaybe(that);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
411	[BUG]  [BUGGY]  JSType  thatMaybe  =  getLeastSupertype(that);  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybe  =  getLeastSupertype(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybe  =  getLeastSupertype(that);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
412	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
413	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  not  a  statement	30	None	replace
414	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  not  a  statement	30	None	replace
415	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  not  a  statement	30	None	replace
416	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  a  {  a:  number  ==  getPropertyNames());  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  a  {  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  a  {  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  ')'  expected	30	None	replace
417	[BUG]  [BUGGY]  for(JSType  that  :  this.properties.getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  this.properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  this.properties.getPropertyTypes())  {	  for(JSType    that    :    property.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	37	None	replace
418	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  ==  getPropertyNames())  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	26	None	replace
419	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (number  ==  getPropertyNames())  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  AssertionFailedError:  Expected:  (number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	26	None	replace
420	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (number  ==  getPropertyNames())  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	26	None	replace
421	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isE  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isE  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isE	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo    	non-compiled	[CE]  not  a  statement	44	None	replace
422	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  property  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  variable  property  is  already  defined  in  method  getLeastSupertype(JSType)	90	None	replace
423	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
424	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
425	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
426	[BUG]  [BUGGY]  for(String  property  :  that.names.getProperties())  {  [CE]  cannot  find  symbol  names  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.names.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.names.getProperties())  {	  for(String    property    :    that.types.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  names	77	None	replace
427	[BUG]  [BUGGY]  for(String  property  :  that.properties),  builder)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
428	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName(properties),  builder)  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName(properties),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
429	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType(properties),  builder)  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyType(properties),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType(properties),  builder)  {	  for(String    property    :    getPropertyNode(properties),    builder)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
430	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	add	for(String  property  :  getPropertyNames())  {  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	64	9	replace
431	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	64	9	replace
432	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	add	for(String  property  :  getPropertyNames())  {  expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	64	9	replace
433	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}  	64	9	replace
434	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Annotated.AssertionFailedError:  Expected:  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Annotated.AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Annotated.AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	non-compiled	[CE]  not  a  statement	64	None	replace
435	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    get    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
436	[BUG]  [BUGGY]  For(String  property  :  that.properties.getPropertyTypes())  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  ')'  expected	35	None	replace
437	[BUG]  [BUGGY]  for(String  property  :  that.namespaces.getPropertyTypes())  {  [CE]  cannot  find  symbol  namespaces  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.namespaces.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.namespaces.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  namespaces	35	None	replace
438	[BUG]  [BUGGY]  for(String  property  :  that.names.getPropertyTypes())  {  [CE]  cannot  find  symbol  names  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.names.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.names.getPropertyTypes())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  names	35	None	replace
439	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyTypeNames())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyTypeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyTypeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
440	[BUG]  [BUGGY]  for(String  property  :  that.propertyNodeNames())  {  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNodeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
441	[BUG]  [BUGGY]  for(String  property  :  that.registerProperties())  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.registerProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.registerProperties())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
442	[BUG]  [BUGGY]  for(String  property  :  registry.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.getPropertyNames())  {	  for(String    property    :    registry.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
443	[BUG]  [BUGGY]  for(String  property  :  that.properties.get(property),  builder)  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.get(property),  builder)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.get(property),  builder)  {	  for(String    property    :    that.properties.get(property))    {    	non-compiled	[CE]  ')'  expected	79	None	replace
444	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames.get(property))  {  [CE]  cannot  find  symbol  getPropertyNames  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames.get(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames.get(property))  {	  for(String    property    :    that.properties.get(property))    {    	non-compiled	[CE]  cannot  find  symbol  getPropertyNames	79	None	replace
445	[BUG]  [BUGGY]  For(JSType  property  :  that.properties.values())  {  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(JSType  property  :  that.properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(JSType  property  :  that.properties.values())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	7	None	replace
446	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
447	[BUG]  [BUGGY]  JSType  that  =  getLeastSupertype(getPropertyNode(that));  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getLeastSupertype(getPropertyNode(that));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getLeastSupertype(getPropertyNode(that));	  JSType    that    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
448	[BUG]  [BUGGY]  JSType  that  =  getPropertyNode(getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getPropertyNode(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getPropertyNode(getPropertyType(property));	  JSType    that    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
449	[BUG]  [BUGGY]  JSType  that  =  getLeastSupertype(getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getLeastSupertype(getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getLeastSupertype(getPropertyNode(property));	  JSType    that    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
450	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalent	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getPropertyType    	non-compiled	[CE]  ')'  expected	91	None	replace
451	[BUG]  [BUGGY]  for(String  property  :  this.namespaces())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.namespaces())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.namespaces())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
452	[BUG]  [BUGGY]  for(JSType  that  :  this.getPropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  this.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  this.getPropertyNames())  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	40	None	replace
453	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNodes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNodes())  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	40	None	replace
454	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
455	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  that.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  that.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  that.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
456	[BUG]  [BUGGY]  for(String  property  :  properties.values())  {  [CE]  incompatible  types  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.values())  {	  for(String    property    :    this.properties.values())    {    	non-compiled	[CE]  incompatible  types	6	None	replace
457	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
458	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.add  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.add  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.add	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
459	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
460	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet());    }    	non-compiled	[CE]  not  a  statement	59	None	replace
461	[BUG]  [BUGGY]  builder.addValue(property,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addValue(property,  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addValue(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
462	[BUG]  [BUGGY]  builder.addProperty(property,  getType(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  getType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getType(property));	  builder.addProperty(property,    getPropertyNode(property));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
463	[BUG]  [BUGGY]  for(String  property  :  that.properties())  {  For(String  property  :  getPropertyNames())  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties())  {  For(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties())  {  For(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    For(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	25	None	replace
464	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(that.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(that.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(that.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
465	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(this.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(this.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(this.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
466	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that,  registry.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(that,  registry.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that,  registry.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
467	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(that.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyName(that.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(that.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
468	[BUG]  [BUGGY]  for(String  property  :  that.propertyNodeTypes())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNodeTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNodeTypes())  {	  for(String    property    :    getPropertyNodeTypes())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
469	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected:  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
470	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames())  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  not  a  statement	28	None	replace
471	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames())  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  not  a  statement	28	None	replace
472	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
473	[BUG]  [BUGGY]  for(String  property  :  registry.propertyNames())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.propertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.propertyNames())  {	  for(String    property    :    that.propertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
474	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames());  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
475	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
476	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
477	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames();  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(String  property  :  getPropertyNames();	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  ')'  expected	65	None	replace
478	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  JSType  that  =  getPropertyNames();  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  JSType  that  =  getPropertyNames();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  JSType  that  =  getPropertyNames();	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
479	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  this.properties())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(String  property  :  this.properties())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(String  property  :  this.properties())  {  builder.addProperty(property,  getPropertyType(property));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
480	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  JSType  that  =  getPropertyNode();  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  JSType  that  =  getPropertyNode();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  JSType  that  =  getPropertyNode();	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
481	[BUG]  [BUGGY]  for(String  property  :  that.namespaces)  {  [CE]  cannot  find  symbol  namespaces  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.namespaces)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.namespaces)  {	  for(String    property    :    that.properties)    {    	non-compiled	[CE]  cannot  find  symbol  namespaces	8	None	replace
482	[BUG]  [BUGGY]  for(JSType  that  :  getProperties(property))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getProperties(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getProperties(property))  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
483	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames(properties))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames(properties))  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
484	[BUG]  [BUGGY]  for(String  property  :  registry.names.keySet())  {  [CE]  cannot  find  symbol  names  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.names.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.names.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  names	80	None	replace
485	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	23	None	replace
486	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	23	None	replace
487	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	31	None	replace
488	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AnsertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AnsertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AnsertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
489	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
490	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
491	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getProperty  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getProperty  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getProperty	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  not  a  statement	46	None	replace
492	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPro  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPro  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPro	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  not  a  statement	46	None	replace
493	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().get  [CE]  not  a  statement  [FE]                                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().get  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().get	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  not  a  statement	46	None	replace
494	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  AssertionFailedError:  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
495	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
496	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  }  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  ')'  expected	67	None	replace
497	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  }  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  ')'  expected	67	None	replace
498	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  Number  {  a:  number  }  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  Number  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  Number  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  ')'  expected	67	None	replace
499	[BUG]  [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addTypedProperty(property,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addTypedProperty(property,  getPropertyType(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
500	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  getPropertyType(property),  that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property),  that);	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
501	[BUG]  [BUGGY]  for(JSType  property  :  registry.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  registry.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  registry.getPropertyTypes())  {	  for(JSType    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
502	[BUG]  [BUGGY]  JSType  that  =  getLeastSupertype(null);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getLeastSupertype(null);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getLeastSupertype(null);	  JSType    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
503	[BUG]  [BUGGY]  System.arraycopy(that,  0,  builder,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(that,  0,  builder,  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(that,  0,  builder,  getPropertyNode(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
504	[BUG]  [BUGGY]  System.arraycopy(properties,  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(properties,  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(properties,  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
505	[BUG]  [BUGGY]  System.arraycopy(that,  0,  builder,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(that,  0,  builder,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(that,  0,  builder,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
506	[BUG]  [BUGGY]  for(String  property  :  that.propertyNode())  {  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.propertyNode())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNode())  {	  for(String    property    :    getPropertyNode())    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
507	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
508	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
509	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
510	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
511	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
512	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
513	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  a:  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  a:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  a:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
514	[BUG]  [BUGGY]  for(JSType  property  :  this.getPropertyNames())  {  [CE]  incompatible  types  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  this.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  this.getPropertyNames())  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  incompatible  types	3	None	replace
515	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(this.properties))  {  [CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames(this.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(this.properties))  {	  for(String    property    :    getPropertyNode(this.properties))    {    	non-compiled	[CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;	12	None	replace
516	[BUG]  [BUGGY]  builder.addType(getRecordType(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addType(getRecordType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(getRecordType(property));	  builder.addType(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
517	[BUG]  [BUGGY]  builder.addRecordType(getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addRecordType(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addRecordType(getPropertyType(property));	  builder.addType(getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
518	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property),  that.properties())  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property),  that.properties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property),  that.properties())  {	  for(String    property    :    that.properties())    {    	non-compiled	[CE]  ')'  expected	9	None	replace
519	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property).properties())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property).properties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property).properties())  {	  for(String    property    :    that.properties())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
520	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
521	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyNode(properties))  {  [CE]  cannot  find  symbol  properties  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyNode(properties))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol  properties	48	None	replace
522	[BUG]  [BUGGY]  Constructor  <?>  that  =  getType(property);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getType(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
523	[BUG]  [BUGGY]  Constructor  <?>  that  =  getNode(property);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  that  =  getNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getNode(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
524	[BUG]  [BUGGY]  for(String  property  :  that.names.getPropertyNames())  {  [CE]  cannot  find  symbol  names  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.names.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.names.getPropertyNames())  {	  for(String    property    :    that.properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  names	1	None	replace
525	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
526	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  ')'  expected	61	None	replace
527	[BUG]  [BUGGY]  for(String  property  :  this.properties.values())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.values())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.values())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
528	[BUG]  [BUGGY]  For(String  property  :  that.properties.toArray(new  String[properties.size()  ]))  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.toArray(new  String[properties.size()  ]))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.toArray(new  String[properties.size()  ]))  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
529	[BUG]  [BUGGY]  For(String  property  :  that.properties.toArray(new  String[property.size()  ]))  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.toArray(new  String[property.size()  ]))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.toArray(new  String[property.size()  ]))  {	  For(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	68	None	replace
530	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    	non-compiled	[CE]  ')'  expected	66	None	replace
531	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    	non-compiled	[CE]  ')'  expected	66	None	replace
532	[BUG]  [BUGGY]  for(String  property  :  registry.getPropertyNode(property))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(property))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
533	[BUG]  [BUGGY]  for(String  property  :  registry.getPropertyType(property))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
534	[BUG]  [BUGGY]  for(String  property  :  this.names())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.names())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.names())  {	  for(String    property    :    that.names())    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
535	[BUG]  [BUGGY]  for(String  property  :  that.properties())  {  Expected:  for(String  property  :  getPropertyNames())  {  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties())  {  Expected:  for(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties())  {  Expected:  for(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  ';'  expected	27	None	replace
536	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  for(String  property  :  getPropertyNames())  {  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  for(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  for(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  ';'  expected	27	None	replace
537	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
538	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (expected:  expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
539	[BUG]  [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  thatMaybeRecordType  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  thatMaybeRecordType  =  getPropertyType(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
540	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getMaybeRecordType(property);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybeRecordType  =  getMaybeRecordType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getMaybeRecordType(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
541	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType(property),  this)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyType(property),  this)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType(property),  this)  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
542	[BUG]  [BUGGY]  for(String  property  :  this.names.keySet())  {  [CE]  cannot  find  symbol  names  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.names.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.names.keySet())  {	  for(String    property    :    names.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  names	82	None	replace
543	[BUG]  [BUGGY]  for(String  property  :  getPropertyTypeNames())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyTypeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyTypeNames())  {	  for(String    property    :    getPropertyNodeNames())    {    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
544	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  not  a  statement	92	None	replace
545	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }  [CE]  variable  property  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  that.getPropertyNames())  {  builder.addProperty(property,  getPropertyType(property));  }	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  variable  property  is  already  defined  in  method  getLeastSupertype(JSType)	92	None	replace
546	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo    	non-compiled	[CE]  ')'  expected	44	None	replace
547	[BUG]  [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.toMaybeRecordType()!=  null)  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo    	non-compiled	[CE]  <identifier>  expected	44	None	replace
548	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyName(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.addProperty(property,  getPropertyName(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyName(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
549	[BUG]  [BUGGY]  builder.setProperty(property,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.setProperty(property,  getPropertyNode(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.setProperty(property,  getPropertyNode(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
550	[BUG]  [BUGGY]  builder.setProperty(property,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  builder.setProperty(property,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.setProperty(property,  getPropertyType(property));	  builder.addProperty(property,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
551	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyNode(that.getProperties()))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.getPropertyNode(that.getProperties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyNode(that.getProperties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
552	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(properties()))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNode(properties()))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(properties()))  {	  for(String    property    :    getPropertyNode(that.getProperties()))    {    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
553	[BUG]  [BUGGY]  for(String  property  :  this.properties,  that.getProperties())  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties,  that.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties,  that.getProperties())  {	  for(String    property    :    this.properties.getProperties())    {    	non-compiled	[CE]  ')'  expected	75	None	replace
554	[BUG]  [BUGGY]  for(String  property  :  that.properties.computePropertyNames())  {  [CE]  cannot  find  symbol  properties  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.computePropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.computePropertyNames())  {	  for(String    property    :    that.computePropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  properties	84	None	replace
555	[BUG]  [BUGGY]  for(String  property  :  properties.computePropertyNames())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.computePropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.computePropertyNames())  {	  for(String    property    :    that.computePropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
556	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
557	[BUG]  [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
558	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  a:  number  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  ')'  expected	62	None	replace
559	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
560	[BUG]  [BUGGY]  for(String  property  :  that.getNamespaces())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getNamespaces())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getNamespaces())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
561	[BUG]  [BUGGY]  for(String  property  :  that.domains())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.domains())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.domains())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
562	[BUG]  [BUGGY]  for(String  property  :  that.types())  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.types())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.types())  {	  for(String    property    :    that.namespaces())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
563	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
564	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  >>  getPropertyNames())  {  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  >>  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  >>  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	31	None	replace
565	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  >>  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  >>  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  >>  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
566	[BUG]  [BUGGY]  AssertionFailedError:  (  {  a:  number  >>  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  (  {  a:  number  >>  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  (  {  a:  number  >>  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
567	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number!=    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	31	None	replace
568	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType(property),  that)  {  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyType(property),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType(property),  that)  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
569	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyName(property),  this)  {  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyName(property),  this)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyName(property),  this)  {	  for(String    property    :    getPropertyNode(property),    that)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
570	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyNode(properties))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyNode(properties))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
571	[BUG]  [BUGGY]  for(String  property  :  this.properties.getPropertyNode(properties))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getPropertyNode(properties))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
572	[BUG]  [BUGGY]  for(String  property  :  props.getPropertyNode(properties))  {  [CE]  cannot  find  symbol  props  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  props.getPropertyNode(properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  props.getPropertyNode(properties))  {	  for(String    property    :    that.getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol  props	48	None	replace
573	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
574	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames())  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  not  a  statement	28	None	replace
575	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
576	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
577	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (calling  a:  number  ==  getPropertyNames())  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (calling  a:  number  ==  getPropertyNames())  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (calling  a:  number  ==  getPropertyNames())	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    	non-compiled	[CE]  ')'  expected	28	None	replace
578	[BUG]  [BUGGY]  for(JSType  property  :  that.properties.keySet())  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.properties.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties.keySet())  {	  for(JSType    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  properties	7	None	replace
579	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [CE]  >  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    get    	non-compiled	[CE]  >  expected	93	None	replace
580	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [CE]  variable  property  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(property));  }	  for(String    property    :    getPropertyNames())    {    for(String    property    :    getPropertyNames())    <    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    getProper    	non-compiled	[CE]  variable  property  is  already  defined  in  method  getLeastSupertype(JSType)	90	None	replace
581	[BUG]  [BUGGY]  For(String  property  :  that.getProperties())  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.getProperties())  {	  for(String    property    :    properties.getProperties())    {    	non-compiled	[CE]  ')'  expected	78	None	replace
582	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	27	None	replace
583	[BUG]  [BUGGY]  Annotated.for(String  property  :  getPropertyNames())  {  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Annotated.for(String  property  :  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Annotated.for(String  property  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
584	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  for(String  property  :  that.getPropertyNames())  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  for(String  property  :  that.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  for(String  property  :  that.getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	27	None	replace
585	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  ')'  expected	23	None	replace
586	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	23	None	replace
587	[BUG]  [BUGGY]  for(String  property  :  attributes.getPropertyNames())  {  [CE]  cannot  find  symbol  attributes  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  attributes.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  attributes.getPropertyNames())  {	  for(String    property    :    this.properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  attributes	76	None	replace
588	[BUG]  [BUGGY]  for(String  property  :  names.getPropertyNames())  {  [CE]  cannot  find  symbol  names  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  names.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  names.getPropertyNames())  {	  for(String    property    :    this.properties.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  names	76	None	replace
589	[BUG]  [BUGGY]  for(String  property  :  registry.types.keySet())  {  [CE]  cannot  find  symbol  types  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.types.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.types.keySet())  {	  for(String    property    :    registry.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  types	80	None	replace
590	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(properties),  that)  {  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyType(properties),  that)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(properties),  that)  {	  for(String    property    :    getPropertyType(properties))    {    	non-compiled	[CE]  ')'  expected	55	None	replace
591	[BUG]  [BUGGY]  for(String  property  :  that.values())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.values())  {	  for(String    property    :    names.keySet())    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
592	[BUG]  [BUGGY]  for(String  property  :  this.properties)  {  [CE]  for-each  not  applicable  to  expression  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties)  {	  for(String    property    :    that.properties)    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	8	None	replace
593	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(this.properties))  {  [CE]  no  suitable  method  found  for  getPropertyType(SortedMap<String,JSType>)  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyType(this.properties))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(this.properties))  {	  for(String    property    :    getPropertyNode(this.properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyType(SortedMap<String,JSType>)	12	None	replace
594	[BUG]  [BUGGY]  AssertionFailedError:  (  {  a:  number  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  (  {  a:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  (  {  a:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
595	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
596	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (expected:  number  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (expected:  number  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (expected:  number	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    	non-compiled	[CE]  ')'  expected	63	None	replace
597	[BUG]  [BUGGY]  For(String  property  :  getPropertyNodeNames())  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNodeNames())  {	  for(String    property    :    getPropertyNames())    {    For(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	25	None	replace
598	[BUG]  [BUGGY]  for(JSType  property  :  this.properties.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  this.properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  this.properties.getPropertyTypes())  {	  for(JSType    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
599	[BUG]  [BUGGY]  for(JSType  property  :  properties.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  properties.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  properties.getPropertyTypes())  {	  for(JSType    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
600	[BUG]  [BUGGY]  for(String  property  :  this.getPropertyNodeTypes())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.getPropertyNodeTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.getPropertyNodeTypes())  {	  for(String    property    :    getPropertyNodeTypes())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
601	[BUG]  [BUGGY]  System.arraycopy(getPropertyNode(property),  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(getPropertyNode(property),  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(getPropertyNode(property),  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
602	[BUG]  [BUGGY]  System.arraycopy(getPropertyType(property),  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  System.arraycopy(getPropertyType(property),  0,  builder,  0,  getPropertyType(property));  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(getPropertyType(property),  0,  builder,  0,  getPropertyType(property));	  System.arraycopy(that,    0,    builder,    0,    getPropertyType(property));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
603	[BUG]  [BUGGY]  For(String  property  :  that.properties.getProperties())  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  that.properties.getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.getProperties())  {	  for(String    property    :    that.types.getProperties())    {    	non-compiled	[CE]  ')'  expected	77	None	replace
604	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    	non-compiled	[CE]  not  a  statement	64	None	replace
605	[BUG]  [BUGGY]  Constructor  <?>  it  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Constructor  <?>  it  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  it  =  getPropertyType(property);	  Constructor    <?>    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
606	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
607	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property));  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
608	[BUG]  [BUGGY]  JSType  toMaybe  =  that.getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybe  =  that.getPropertyNode(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  that.getPropertyNode(property);	  JSType    toMaybe    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
609	[BUG]  [BUGGY]  for(JSType  property  :  properties)  {  [CE]  for-each  not  applicable  to  expression  type  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  properties)  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  properties)  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	49	None	replace
610	[BUG]  [BUGGY]  for(JSType  property  :  properties.values())  {  [CE]  no  suitable  method  found  for  hasProperty(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  properties.values())  {	  for(JSType    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  hasProperty(JSType)	49	None	replace
611	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  return  builder.build();  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  return  builder.build();  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  return  builder.build();  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
612	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(that));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(that));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(property,  getPropertyNode(that));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
613	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(null,  getPropertyNode(that));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(null,  getPropertyNode(that));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(null,  getPropertyNode(that));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
614	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames());  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames());  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames());  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
615	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(this,  getPropertyNode(that));  }  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(this,  getPropertyNode(that));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {  for(JSType  that  :  getPropertyNames())  {  builder.addProperty(this,  getPropertyNode(that));  }	  for(String    property    :    getPropertyNames())    {    JSType    that    =    getPropertyNames();    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	65	None	replace
616	[BUG]  [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  getPropertyNames())  {  Expected:  (expected:  number  ==	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    	non-compiled	[CE]  ')'  expected	66	None	replace
617	[BUG]  [BUGGY]  for(String  property  :  that.props.keySet())  {  [CE]  cannot  find  symbol  props  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.props.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.props.keySet())  {	  for(String    property    :    that.owners.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  props	15	None	replace
618	[BUG]  [BUGGY]  for(String  property  :  that.types.keySet())  {  [CE]  cannot  find  symbol  types  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.types.keySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.types.keySet())  {	  for(String    property    :    that.getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
619	[BUG]  [BUGGY]  for(String  property  :  properties.propertySet())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.propertySet())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.propertySet())  {	  for(String    property    :    that.propertySet())    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
620	[BUG]  [BUGGY]  for(String  property  :  that.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
621	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getProperty  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getProperty  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getProperty	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
622	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
623	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(get  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(get  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(get	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProper    	non-compiled	[CE]  not  a  statement	58	None	replace
624	[BUG]  [BUGGY]  for(JSType  that  :  registry.getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  registry.getPropertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  registry.getPropertyTypes())  {	  for(JSType    that    :    property.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	37	None	replace
625	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property).getProperties())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNode(property).getProperties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property).getProperties())  {	  for(String    property    :    that.propertyMap.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
626	[BUG]  [BUGGY]  for(JSType  that  :  properties.values())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  properties.values())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  properties.values())  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
627	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(properties,  builder))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNode(properties,  builder))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNode(properties,  builder))  {	  for(JSType    that    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	56	None	replace
628	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyName(property))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.getPropertyName(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyName(property))  {	  for(String    property    :    getPropertyName(properties))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
629	[BUG]  [BUGGY]  JSType  that  =  getProperty(property);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  that  =  getProperty(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getProperty(property);	  JSType    that    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
630	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  }	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    }    	non-compiled	[CE]  not  a  statement	67	None	replace
631	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (expected  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  not  a  statement	30	None	replace
632	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  not  a  statement	30	None	replace
633	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (calling  a:  number  ==  getPropertyNames());  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (calling  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (calling  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  ')'  expected	30	None	replace
634	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames());  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  ')'  expected	30	None	replace
635	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (calling  a:  number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (calling  a:  number  ==  getPropertyNames());  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (calling  a:  number  ==  getPropertyNames());	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames());    	non-compiled	[CE]  not  a  statement	30	None	replace
636	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  ')'  expected	60	None	replace
637	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)    {    if(this.properties!=    null)    {    builder.addProperty(property,    this.properties.keySet()    	non-compiled	[CE]  not  a  statement	60	None	replace
638	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
639	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  ')'  expected	86	None	replace
640	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property))  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    {    	non-compiled	[CE]  not  a  statement	86	None	replace
641	[BUG]  [BUGGY]  if(that.hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.hasProperty(property))  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(    	non-compiled	[CE]  <identifier>  expected	43	None	replace
642	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyType(property))  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
643	[BUG]  [BUGGY]  for(String  property  :  this.properties.getPropertyType(property))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.getPropertyType(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getPropertyType(property))  {	  for(String    property    :    that.getPropertyType(property))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
644	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.values().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
645	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
646	[BUG]  [BUGGY]  for(String  property  :  this.properties.values())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.values())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.values())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property))	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property))    	non-compiled	[CE]  not  a  statement	22	None	replace
647	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  not  a  statement	19	None	replace
648	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property));    	non-compiled	[CE]  ')'  expected	19	None	replace
649	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  propertyNames.iterator();  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  propertyNames.iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  propertyNames.iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
650	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  properties.keySet().iterator();  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  Iterator  <  JSType>  it  =  properties.keySet().iterator();  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  properties.keySet().iterator();	  Iterator    <    JSType>    it    =    properties.iterator();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
651	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getPropertyType(property);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybeRecordType  =  getPropertyType(property);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getPropertyType(property);	  JSType    toMaybeRecordType    =    getPropertyNode(property);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
652	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyTypeNames())  {  [CE]  cannot  find  symbol  properties  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getPropertyTypeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyTypeNames())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  properties	35	None	replace
653	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyValues())  {  [CE]  cannot  find  symbol  properties  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.properties.getPropertyValues())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyValues())  {	  for(String    property    :    that.properties.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  properties	35	None	replace
654	[BUG]  [BUGGY]  for(String  property  :  properties.propertyNames())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.propertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.propertyNames())  {	  for(String    property    :    that.propertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
655	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	20	None	replace
656	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties!=    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
657	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getPropertyType(that);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  JSType  toMaybeRecordType  =  getPropertyType(that);  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getPropertyType(that);	  JSType    toMaybeRecordType    =    getPropertyNode(that);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
658	[BUG]  [BUGGY]  for(JSType  that  :  property.getPropertyNodeNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  property.getPropertyNodeNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  property.getPropertyNodeNames())  {	  for(JSType    that    :    property.getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	4	None	replace
659	[BUG]  [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property  [CE]  ')'  expected  [FE]                                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	if(that.isRecordType())  {  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property	  builder.addProperty(property,    getPropertyType(property));    that.toMaybeRecordType().hasProperty(property)&&    that.toMaybeRecordType().getPropertyType(property).    	non-compiled	[CE]  ')'  expected	46	None	replace
660	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  not  a  statement	21	None	replace
661	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
662	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  >=  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  >=  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  >=  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
663	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [Delete]  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [Delete]  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (  {  a:  number  [Delete]  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    [Delete]    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
664	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	26	None	replace
665	[BUG]  [BUGGY]  AssertionFailedError:  (  {  a:  number  ==  getPropertyNames())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  AssertionFailedError:  (  {  a:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	AssertionFailedError:  (  {  a:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
666	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames())  {  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  Expected:  (number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	26	None	replace
667	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  that.getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNames())  {  Expected:  (expected  a:  number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  ')'  expected	26	None	replace
668	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames())  {  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames())  {  expected:  (number  ==  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:    Expected:    (    {    a:    number    ==    getPropertyNames())    {    	non-compiled	[CE]  not  a  statement	26	None	replace
669	[BUG]  [BUGGY]  for(String  property  :  properties.properties())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.properties())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.properties())  {	  for(String    property    :    that.properties())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
670	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null  ||  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
671	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)));  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)));    	non-compiled	[CE]  not  a  statement	87	None	replace
672	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(properties,  builder))  {  [CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  getPropertyNames(properties,  builder))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(properties,  builder))  {	  for(String    property    :    getPropertyNames(properties))    {    	non-compiled	[CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;	103	None	replace
673	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNodeList())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  that  :  getPropertyNodeList())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNodeList())  {	  for(JSType    that    :    getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	40	None	replace
674	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyNode(property))  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.getPropertyNode(property))  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyNode(property))  {	  for(String    property    :    that.getPropertyNode(property))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
675	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(getPropertyType(property)))  {  builder.add	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().isEquivalentTo(    getPropertyType(property)))    {    builder.addProperty    	non-compiled	[CE]  not  a  statement	85	None	replace
676	[BUG]  [BUGGY]  for(JSType  property  :  that.propertyMap.getPropertyNames())  {  [CE]  cannot  find  symbol  propertyMap  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  that.propertyMap.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.propertyMap.getPropertyNames())  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  propertyMap	3	None	replace
677	[BUG]  [BUGGY]  for(JSType  property  :  this.properties.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  this.properties.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  this.properties.getPropertyNames())  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
678	[BUG]  [BUGGY]  for(JSType  property  :  properties.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(JSType  property  :  properties.getPropertyNames())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  properties.getPropertyNames())  {	  for(JSType    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
679	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.values().contains(property);  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.values().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.values().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  not  a  statement	61	None	replace
680	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  }	  for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:    Expected:    (this.properties    ==    null)&&    this.properties.keySet().contains(property);    	non-compiled	[CE]  ')'  expected	61	None	replace
681	[BUG]  [BUGGY]  for(String  property  :  properties.propertyTypes())  {  [CE]  cannot  find  symbol  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  properties.propertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.propertyTypes())  {	  for(String    property    :    that.propertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
682	[BUG]  [BUGGY]  for(String  property  :  registry.propertyTypes())  {  [CE]  cannot  find  symbol  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number      [CONTEXT]      public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);      [BUGGY]  for(String  property  :  registry.propertyTypes())  {  [BUGGY]      if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.propertyTypes())  {	  for(String    property    :    that.propertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
