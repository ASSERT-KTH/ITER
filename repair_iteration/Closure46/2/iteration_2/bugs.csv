bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyNames())  {  [CE]  cannot  find  symbol  properties  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.properties.getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol  properties	5	None	replace
2	[BUG]  [BUGGY]  for(String  property  :  that.propertyNames())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.propertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
3	[BUG]  [BUGGY]  for(JSType  property  :  that.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  property  :  that.getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.getPropertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
4	[BUG]  [BUGGY]  for(JSType  that  :  property.getPropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  that  :  property.getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  property.getPropertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	5	None	replace
5	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(property))  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.getPropertyNode(property))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(property))  {	  for(String    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
6	[BUG]  [BUGGY]  for(String  property  :  this.properties.values())  {  [CE]  incompatible  types  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.values())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.values())  {	  for(String    property    :    that.properties.values())    {    	non-compiled	[CE]  incompatible  types	6	None	replace
7	[BUG]  [BUGGY]  for(JSType  property  :  that.properties.values())  {  [CE]  cannot  find  symbol  properties  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  property  :  that.properties.values())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.properties.values())  {	  for(String    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  properties	6	None	replace
8	[BUG]  [BUGGY]  for(String  property  :  that.properties)  {  [CE]  cannot  find  symbol  properties  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.properties)  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties)  {	  for(String    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  properties	6	None	replace
9	[BUG]  [BUGGY]  for(String  property  :  that.properties())  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.properties())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties())  {	  for(String    property    :    that.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
10	[BUG]  [BUGGY]  for(String  property  :  that.propertyMap.getProperties())  {  [CE]  cannot  find  symbol  propertyMap  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.propertyMap.getProperties())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyMap.getProperties())  {	  for(String    property    :    that.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  propertyMap	4	None	replace
11	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property))  {  [CE]  for-each  not  applicable  to  expression  type  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(property))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property))  {	  for(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  for-each  not  applicable  to  expression  type	3	None	replace
12	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(this.properties))  {  [CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)  [FE]      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(this.properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(this.properties))  {	  for(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)	3	None	replace
13	[BUG]  [BUGGY]  For(String  property  :  this.properties.keySet())  {  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  For(String  property  :  this.properties.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  this.properties.keySet())  {	  for(String    property    :    this.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
14	[BUG]  [BUGGY]  For(String  property  :  that.properties.keySet())  {  [CE]  ')'  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  For(String  property  :  that.properties.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.keySet())  {	  for(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  ')'  expected	1	None	replace
15	[BUG]  [BUGGY]  for(String  property  :  that.owners.keySet())  {  [CE]  cannot  find  symbol  owners  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.owners.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.owners.keySet())  {	  for(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  owners	1	None	replace
16	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  for(String  property  :  this.properties.keySet())  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  for(String  property  :  this.properties.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    for(String  property  :  this.properties.keySet())  {	  	non-compiled	[CE]  ';'  expected	2	None	add
17	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  For(String  property  :  this.properties.keySet())  {  [CE]  ')'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  For(String  property  :  this.properties.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    For(String  property  :  this.properties.keySet())  {	  	non-compiled	[CE]  ')'  expected	2	None	add
18	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property));  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property));	  	non-compiled	[CE]  not  a  statement	2	None	add
19	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property));  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property));	  	non-compiled	[CE]  not  a  statement	2	None	add
20	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {	  	non-compiled	[CE]  not  a  statement	2	None	add
21	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {	  	non-compiled	[CE]  not  a  statement	2	None	add
22	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property))  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property))  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property))	  	non-compiled	[CE]  not  a  statement	2	None	add
23	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties!=  null)&&  this.properties.keySet().contains(property);	  	non-compiled	[CE]  not  a  statement	2	None	add
24	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  {	  	non-compiled	[CE]  ';'  expected	11	None	add
25	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  For(String  property  :  getPropertyNames())  {  [CE]  ')'  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  For(String  property  :  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    For(String  property  :  getPropertyNames())  {	  	non-compiled	[CE]  ')'  expected	11	None	add
26	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  {	  	non-compiled	[CE]  not  a  statement	11	None	add
27	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  for(String  property  :  getPropertyNames())  {	  	non-compiled	[CE]  not  a  statement	11	None	add
28	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames())	  	non-compiled	[CE]  not  a  statement	11	None	add
29	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [Delete]  getPropertyNames())  {  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [Delete]  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [Delete]  getPropertyNames())  {	  	non-compiled	[CE]  not  a  statement	11	None	add
30	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  getPropertyNames());	  	non-compiled	[CE]  not  a  statement	11	None	add
31	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number!=  getPropertyNames())  {	  	non-compiled	[CE]  not  a  statement	11	None	add
32	[BUG]  [BUGGY]  for(String  property  :  that.getProperties.keySet())  {  [CE]  cannot  find  symbol  getProperties  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.getProperties.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getProperties.keySet())  {	  for(String    property    :    getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  getProperties	9	None	replace
33	[BUG]  [BUGGY]  for(String  property  :  that.propertySet())  {  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.propertySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertySet())  {	  for(String    property    :    getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
34	[BUG]  [BUGGY]  for(JSType  property  :  that.getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  property  :  that.getPropertyTypes())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  that.getPropertyTypes())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
35	[BUG]  [BUGGY]  for(String  property  :  that.properties.getPropertyTypes())  {  [CE]  cannot  find  symbol  properties  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.properties.getPropertyTypes())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.getPropertyTypes())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol  properties	7	None	replace
36	[BUG]  [BUGGY]  for(String  property  :  that.propertyTypes())  {  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.propertyTypes())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.propertyTypes())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
37	[BUG]  [BUGGY]  for(JSType  that  :  property.getPropertyTypes())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  that  :  property.getPropertyTypes())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  property.getPropertyTypes())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	7	None	replace
38	[BUG]  [BUGGY]  for(String  property  :  getPropertyNodeNames())  {  [CE]  cannot  find  symbol  [FE]    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNodeNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNodeNames())  {	  for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
39	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode())  {  [CE]  no  suitable  method  found  for  getPropertyNode()  [FE]      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode())  {	  for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode()	12	None	replace
40	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNames())  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  that  :  getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNames())  {	  for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	12	None	replace
41	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  getPropertyType(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyNode(property));  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  getPropertyNode(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyNode(property));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo	      	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  JSType  that  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  JSType  that  =  getPropertyNode(property);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getPropertyNode(property);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  getPropertyType(property));  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(prop	      	non-compiled	[CE]  ')'  expected	8	None	replace
48	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyNode(properties))  {  [CE]  cannot  find  symbol  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.getPropertyNode(properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyNode(properties))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
49	[BUG]  [BUGGY]  for(JSType  property  :  getPropertyNode(properties))  {  [CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  property  :  getPropertyNode(properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  property  :  getPropertyNode(properties))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode(SortedMap<String,JSType>)	10	None	replace
50	[BUG]  [BUGGY]  for(String  property  :  that.getPropertyType(property))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.getPropertyType(property))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.getPropertyType(property))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
51	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property),  that)  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(property),  that)  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property),  that)  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
52	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(property),  builder)  {  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(property),  builder)  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(property),  builder)  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
53	[BUG]  [BUGGY]  for(String  property  :  getPropertyTypes())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyTypes())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyTypes())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
54	[BUG]  [BUGGY]  for(String  property  :  that.names())  {  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.names())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.names())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
55	[BUG]  [BUGGY]  for(String  property  :  getPropertyType(properties))  {  [CE]  no  suitable  method  found  for  getPropertyType(SortedMap<String,JSType>)  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyType(properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyType(properties))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  no  suitable  method  found  for  getPropertyType(SortedMap<String,JSType>)	10	None	replace
56	[BUG]  [BUGGY]  for(JSType  that  :  getPropertyNode(properties))  {  [CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(JSType  that  :  getPropertyNode(properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(JSType  that  :  getPropertyNode(properties))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  variable  that  is  already  defined  in  method  getLeastSupertype(JSType)	10	None	replace
57	[BUG]  [BUGGY]  for(String  property  :  getPropertyName(properties))  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyName(properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyName(properties))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
58	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  builder.addProper  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  builder.addProper  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  builder.addProper	  	non-compiled	[CE]  not  a  statement	2	None	add
59	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet());  }	  	non-compiled	[CE]  not  a  statement	2	None	add
60	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)  {  if(this.properties!=  null)  {  builder.addProperty(property,  this.properties.keySet()	  	non-compiled	[CE]  not  a  statement	2	None	add
61	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().contains(property);	  	non-compiled	[CE]  not  a  statement	2	None	add
62	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number	  	non-compiled	[CE]  not  a  statement	11	None	add
63	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [Delete]  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [Delete]  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  [Delete]	  	non-compiled	[CE]  not  a  statement	11	None	add
64	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:	  	non-compiled	[CE]  not  a  statement	11	None	add
65	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  JSType  that  =  getPropertyNames();  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  JSType  that  =  getPropertyNames();  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    JSType  that  =  getPropertyNames();	  	non-compiled	[CE]  ';'  expected	11	None	add
66	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  ==	  	non-compiled	[CE]  not  a  statement	11	None	add
67	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  }  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    junit.framework.AssertionFailedError:  Expected:  (  {  a:  number  }	  	non-compiled	[CE]  not  a  statement	11	None	add
68	[BUG]  [BUGGY]  For(String  property  :  that.properties.values())  {  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  For(String  property  :  that.properties.values())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	For(String  property  :  that.properties.values())  {	  for(String    property    :    that.properties.values())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
69	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that.properties))  {  [CE]  cannot  find  symbol  properties  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(that.properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that.properties))  {	  for(String    property    :    that.properties.values())    {    	non-compiled	[CE]  cannot  find  symbol  properties	6	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(that,  0,  builder,  0,  getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  System.arraycopy(that,  0,  builder,  0,  getPropertyType(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	System.arraycopy(that,  0,  builder,  0,  getPropertyType(property));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  builder.addType(getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addType(getPropertyType(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addType(getPropertyType(property));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  builder.addProperty(property,  that.getPropertyType(property));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  builder.addProperty(property,  that.getPropertyType(property));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	builder.addProperty(property,  that.getPropertyType(property));	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
73	[BUG]  [BUGGY]  JSType  that  =  getPropertyNode(that);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  JSType  that  =  getPropertyNode(that);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  that  =  getPropertyNode(that);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(that.getProperties()))  {  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(that.getProperties()))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(that.getProperties()))  {	  for(String    property    :    that.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
75	[BUG]  [BUGGY]  for(String  property  :  this.properties.getProperties())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.getProperties())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getProperties())  {	  for(String    property    :    that.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
76	[BUG]  [BUGGY]  for(String  property  :  this.properties.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  this.properties.getPropertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
77	[BUG]  [BUGGY]  for(String  property  :  that.types.getProperties())  {  [CE]  cannot  find  symbol  types  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.types.getProperties())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.types.getProperties())  {	  for(String    property    :    that.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol  types	4	None	replace
78	[BUG]  [BUGGY]  for(String  property  :  properties.getProperties())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  properties.getProperties())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getProperties())  {	  for(String    property    :    that.getProperties())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
79	[BUG]  [BUGGY]  for(String  property  :  that.properties.get(property))  {  [CE]  cannot  find  symbol  properties  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.properties.get(property))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.properties.get(property))  {	  for(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  properties	1	None	replace
80	[BUG]  [BUGGY]  for(String  property  :  registry.properties.keySet())  {  [CE]  cannot  find  symbol  properties  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  registry.properties.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.properties.keySet())  {	  for(String    property    :    that.properties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  properties	1	None	replace
81	[BUG]  [BUGGY]  for(String  property  :  registry.getProperties())  {  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  registry.getProperties())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  registry.getProperties())  {	  for(String    property    :    getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
82	[BUG]  [BUGGY]  for(String  property  :  names.keySet())  {  [CE]  cannot  find  symbol  names  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  names.keySet())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  names.keySet())  {	  for(String    property    :    getProperties.keySet())    {    	non-compiled	[CE]  cannot  find  symbol  names	9	None	replace
83	[BUG]  [BUGGY]  for(String  property  :  properties.getPropertyNames())  {  [CE]  cannot  find  symbol  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  properties.getPropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  properties.getPropertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
84	[BUG]  [BUGGY]  for(String  property  :  that.computePropertyNames())  {  [CE]  cannot  find  symbol  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.computePropertyNames())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.computePropertyNames())  {	  for(String    property    :    that.getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
85	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty  [CE]  not  a  statement  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty	  	non-compiled	[CE]  not  a  statement	2	None	add
86	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property))  {  [CE]  not  a  statement  [FE]      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property))  {	  	non-compiled	[CE]  not  a  statement	2	None	add
87	[BUG]  [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)));  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  this.properties.keySet())  {  junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)));  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    this.properties.keySet())    {    junit.framework.AssertionFailedError:  Expected:  (this.properties  ==  null)&&  this.properties.keySet().isEquivalentTo(  getPropertyType(property)));	  	non-compiled	[CE]  not  a  statement	2	None	add
88	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPro  [CE]  >  expected  [FE]    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPro  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPro	  	non-compiled	[CE]  >  expected	11	None	add
89	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty  [CE]  >  expected  [FE]      junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProperty	  	non-compiled	[CE]  >  expected	11	None	add
90	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProper  [CE]  >  expected  [FE]        junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProper  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getProper	  	non-compiled	[CE]  >  expected	11	None	add
91	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType  [CE]  >  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType	  	non-compiled	[CE]  >  expected	11	None	add
92	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [CE]  >  expected  [FE]            junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(	  	non-compiled	[CE]  >  expected	11	None	add
93	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  get  [CE]  >  expected  [FE]              junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames())  {  for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  get  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String    property    :    getPropertyNames())    {    for(String  property  :  getPropertyNames())  <  that.toMaybeRecordType().hasProperty(property)&&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  get	  	non-compiled	[CE]  >  expected	11	None	add
94	[BUG]  [BUGGY]  for(String  property  :  that.namespaces())  {  [CE]  cannot  find  symbol  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  that.namespaces())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  that.namespaces())  {	  for(String    property    :    that.getPropertyTypes())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
95	[BUG]  [BUGGY]  for(String  property  :  getPropertyNodeTypes())  {  [CE]  cannot  find  symbol  [FE]    junit.framework.AssertionFailedError:  Expected:  {loop:  {...}    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNodeTypes())  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNodeTypes())  {	  for(String    property    :    getPropertyNames())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
96	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  JSType  toMaybeRecordType  =  getPropertyNode(property);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getPropertyNode(property);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  Constructor  <?>  that  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  Constructor  <?>  that  =  getPropertyNode(property);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Constructor  <?>  that  =  getPropertyNode(property);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
98	[BUG]  [BUGGY]  JSType  toMaybe  =  getPropertyNode(property);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  JSType  toMaybe  =  getPropertyNode(property);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybe  =  getPropertyNode(property);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  Iterator  <  JSType>  it  =  properties.iterator();  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  Iterator  <  JSType>  it  =  properties.iterator();  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	Iterator  <  JSType>  it  =  properties.iterator();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getPropertyNode(that);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  JSType  toMaybeRecordType  =  getPropertyNode(that);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getPropertyNode(that);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  JSType  toMaybeRecordType  =  getPropertyNode(null);  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  JSType  toMaybeRecordType  =  getPropertyNode(null);  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	JSType  toMaybeRecordType  =  getPropertyNode(null);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  for(String  property  :  getPropertyNode(properties),  builder)  {  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNode(properties),  builder)  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNode(properties),  builder)  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
103	[BUG]  [BUGGY]  for(String  property  :  getPropertyNames(properties))  {  [CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number    [CONTEXT]    public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);    [BUGGY]  for(String  property  :  getPropertyNames(properties))  {  [BUGGY]    if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	146	146	3	replace	for(String  property  :  getPropertyNames(properties))  {	  for(String    property    :    getPropertyNode(properties))    {    	non-compiled	[CE]  method  getPropertyNames  in  class  ObjectType  cannot  be  applied  to  given  types;	10	None	replace
