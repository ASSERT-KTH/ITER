bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this.registry);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	add	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this.registry);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  	1	3	replace
2	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this.registry);  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this.registry);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this.registry);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  	1	3	replace
3	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that);  [CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;  [FE]      junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;	1	None	replace
4	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this);  [CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;  [FE]        junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;	1	None	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that.registry);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	add	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that.registry);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  	1	3	replace
6	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that.registry);  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [FE]          junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that.registry);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(that.registry);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected:  ({a:  number  	1	3	replace
7	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry,  that);  [CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;  [FE]            junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry,  that);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry,  that);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;	1	None	replace
8	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this,  registry);  [CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;  [FE]              junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this,  registry);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(this,  registry);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;	1	None	replace
9	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(property);  [CE]  cannot  find  symbol  property  [FE]                junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(property);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(property);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  cannot  find  symbol  property	1	None	replace
10	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  builder  [FE]                  junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]    [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	  	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  cannot  find  symbol  builder	1	None	replace
11	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(properties);  [CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(properties);  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(properties);	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  constructor  RecordTypeBuilder  in  class  RecordTypeBuilder  cannot  be  applied  to  given  types;	1	None	replace
12	[BUG]  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(getPropertyNode());  [CE]  no  suitable  method  found  for  getPropertyNode()  [FE]    junit.framework.AssertionFailedError:  Expected:  ({a:  number  [CONTEXT]  public  JSType  getLeastSupertype(JSType  that)  {  if  (!that.isRecordType())  {  return  super.getLeastSupertype(that);  }  [BUGGY]  RecordTypeBuilder  builder  =  new  RecordTypeBuilder(getPropertyNode());  [BUGGY]  for  (String  property  :  properties.keySet())  {  if  (that.toMaybeRecordType().hasProperty(property)  &&  that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(  getPropertyType(property)))  {  builder.addProperty(property,  getPropertyType(property),  getPropertyNode(property));  }  }  return  builder.build();  }  [CLASS]  RecordType  [METHOD]  getLeastSupertype  [RETURN_TYPE]  JSType  JSType  that  [VARIABLES]  boolean  inferred  isFrozen  JSType  that  String  property  RecordTypeBuilder  builder  long  serialVersionUID  SortedMap  properties  	projects/Closure46/src/com/google/javascript/rhino/jstype/RecordType.java	0.5477225575051661	145	145	3	replace	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(getPropertyNode());	RecordTypeBuilder  builder  =  new  RecordTypeBuilder(registry);  	non-compiled	[CE]  no  suitable  method  found  for  getPropertyNode()	1	None	replace
