bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TextAnchor  labelFont  =  getLabelFont();  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  TextAnchor  labelFont  =  getLabelFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	TextAnchor  labelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    TextAnchor    labelFont    =    getLabelFont();    	non-compiled	[CE]  incompatible  types	23	None	replace
2	[BUG]  [BUGGY]  g2.setPaint(getLabelFont());  [CE]  method  setPaint  in  class  Graphics2D  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.setPaint(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.setPaint(getLabelFont());	          g2.setFont(getLabelFont());    g2.setPaint(getLabelFont());    	non-compiled	[CE]  method  setPaint  in  class  Graphics2D  cannot  be  applied  to  given  types;	14	None	replace
3	[BUG]  [BUGGY]  Font  labelFont  =  rotationdLabelBounds.getLabelFont();  [CE]  cannot  find  symbol  rotationdLabelBounds  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  rotationdLabelBounds.getLabelFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  rotationdLabelBounds.getLabelFont();	  Font    labelFont    =    rotatedLabelBounds.getLabelFont();    	non-compiled	[CE]  cannot  find  symbol  rotationdLabelBounds	29	None	replace
4	[BUG]  [BUGGY]  Font  labelFont  =  rotationdLabelBounds.getFont();  [CE]  cannot  find  symbol  rotationdLabelBounds  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  rotationdLabelBounds.getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  rotationdLabelBounds.getFont();	  Font    labelFont    =    rotatedLabelBounds.getFont();    	non-compiled	[CE]  cannot  find  symbol  rotationdLabelBounds	1	None	replace
5	[BUG]  [BUGGY]  Font  labelFont  =  fm.getFontRegistry();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  fm.getFontRegistry();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  fm.getFontRegistry();	  Font    labelFont    =    g2.getFontRegistry();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.fill(rotatedLabelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	g2.fill(rotatedLabelBounds);    g2.fill(rotatedLabelBounds);	  	compilable	  [FE]  AssertionFailedError  	18	22	add
7	[BUG]  [BUGGY]  g2.fill(rotatedLabelBounds);  g2.fill(rotatedLabelBounds);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.fill(rotatedLabelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.fill(rotatedLabelBounds);    g2.fill(rotatedLabelBounds);	  	compilable	  [FE]  AssertionFailedError  	18	22	add
8	[BUG]  [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setPaint(rotatedLabelBounds);  [CE]  method  setPaint  in  class  Graphics2D  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setPaint(rotatedLabelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.fill(rotatedLabelBounds);    g2.setPaint(rotatedLabelBounds);	  	non-compiled	[CE]  method  setPaint  in  class  Graphics2D  cannot  be  applied  to  given  types;	18	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	g2.fill(rotatedLabelBounds);    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	18	22	add
10	[BUG]  [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.fill(rotatedLabelBounds);    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	18	22	add
11	[BUG]  [BUGGY]  Font  labelFont  =  g2.getFont().getFont();  [CE]  no  suitable  method  found  for  getFont()  [FE]            AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  g2.getFont().getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  g2.getFont().getFont();	          Font    labelFont    =    g2.getFont();    Font    labelFont    =    g2.getFont().getFont();    	non-compiled	[CE]  no  suitable  method  found  for  getFont()	4	None	replace
12	[BUG]  [BUGGY]  Font  font  =  g2.getFont().getFont();  [CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]              AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  font  =  g2.getFont().getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  font  =  g2.getFont().getFont();	          Font    labelFont    =    g2.getFont();    Font    labelFont    =    g2.getFont().getFont();    	non-compiled	[CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	4	None	replace
13	[BUG]  [BUGGY]  g2.setFont(labelBounds,  rotatedLabelBounds);  [CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.setFont(labelBounds,  rotatedLabelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.setFont(labelBounds,  rotatedLabelBounds);	  g2.setFont(rotatedLabelBounds);    	non-compiled	[CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;	24	None	replace
14	[BUG]  [BUGGY]  g2.setFont(rotatedLabelBounds,  labelBounds);  [CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.setFont(rotatedLabelBounds,  labelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.setFont(rotatedLabelBounds,  labelBounds);	  g2.setFont(rotatedLabelBounds);    	non-compiled	[CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;	24	None	replace
15	[BUG]  [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  TextAnchor  g2  =  g2.getFont();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  TextAnchor  g2  =  g2.getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  rotatedLabelBounds.getFont();  TextAnchor  g2  =  g2.getFont();	          Font    labelFont    =    g2.getFont();    TextAnchor    g2    =    g2.getFont();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
16	[BUG]  [BUGGY]  Color  color  =  getLabelFont();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Color  color  =  getLabelFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Color  color  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Color    color    =    getLabelFont();    	non-compiled	[CE]  incompatible  types	17	None	replace
17	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(labelBounds,  rotatedLabelBounds);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  getLabelFont(labelBounds,  rotatedLabelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  getLabelFont(labelBounds,  rotatedLabelBounds);	  Font    labelFont    =    getLabelFont(rotatedLabelBounds);    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	22	None	replace
18	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(rotatedLabelBounds,  labelBounds);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  getLabelFont(rotatedLabelBounds,  labelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  getLabelFont(rotatedLabelBounds,  labelBounds);	  Font    labelFont    =    getLabelFont(rotatedLabelBounds);    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	22	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  fm.getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	Font  labelFont  =  fm.getFont();	          Font    labelFont    =    g2.getFont();    Font    labelFont    =    g2.getFont();    	compilable	  [FE]  AssertionFailedError  	2	22	replace
20	[BUG]  [BUGGY]  Font  labelFont  =  fm.getFont();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  fm.getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  fm.getFont();	          Font    labelFont    =    g2.getFont();    Font    labelFont    =    g2.getFont();    	compilable	  [FE]  AssertionFailedError  	2	22	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	8	22	add
22	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	8	22	add
23	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	8	22	add
25	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	8	22	add
26	[BUG]  [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(labelFont);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(labelFont);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(labelFont);	          Font    labelFont    =    g2.getFont();    g2.setFont(rotatedLabelBounds);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
27	[BUG]  [BUGGY]  LabelFont  =  getLabelFont();  [CE]  cannot  find  symbol  LabelFont  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  LabelFont  =  getLabelFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	LabelFont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    LabelFont    =    getLabelFont();    	non-compiled	[CE]  cannot  find  symbol  LabelFont	16	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	12	22	add
29	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	12	22	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	12	22	add
31	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	12	22	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.draw(hotspot);	  	compilable	  [FE]  AssertionFailedError  	12	23	add
33	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.draw(hotspot);	  	compilable	  [FE]  AssertionFailedError  	12	23	add
34	[BUG]  [BUGGY]  g2.setFont(rotatedLabelBounds.getFont());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.setFont(rotatedLabelBounds.getFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.setFont(rotatedLabelBounds.getFont());	          Font    labelFont    =    g2.getFont();    g2.setFont(rotatedLabelBounds.getFont());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
35	[BUG]  [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(labelFont.getFont());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(labelFont.getFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(labelFont.getFont());	          Font    labelFont    =    g2.getFont();    g2.setFont(rotatedLabelBounds.getFont());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
36	[BUG]  [BUGGY]  Font  labelBounds  =  g2.getFont();  [CE]  variable  labelBounds  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]          AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelBounds  =  g2.getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelBounds  =  g2.getFont();	          Font    labelFont    =    g2.getFont();    Font    labelBounds    =    g2.getFont();    	non-compiled	[CE]  variable  labelBounds  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	3	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setFont(getLabelFont());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	10	22	add
38	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	10	22	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setFont(getLabelFont());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	10	22	add
40	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	10	22	add
41	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelPaint());  [CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelPaint());	  	non-compiled	[CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;	10	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }	          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());    	compilable	  [FE]  AssertionFailedError  	9	22	replace
43	[BUG]  [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }	          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());    	compilable	  [FE]  AssertionFailedError  	9	22	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	5	22	add
45	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	5	22	add
46	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.draw(hotspot);	  	compilable	  [FE]  AssertionFailedError  	5	23	add
48	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.draw(hotspot);	  	compilable	  [FE]  AssertionFailedError  	5	23	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }	          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());    	compilable	  [FE]  AssertionFailedError  	6	22	replace
50	[BUG]  [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	if(rotatedLabelBounds!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }	          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());    	compilable	  [FE]  AssertionFailedError  	6	22	replace
51	[BUG]  [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(rotatedLabelBounds.getFont());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(rotatedLabelBounds.getFont());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  rotatedLabelBounds.getFont();  g2.setFont(rotatedLabelBounds.getFont());	          Font    labelFont    =    g2.getFont();    g2.setFont(rotatedLabelBounds.getFont());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
52	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
53	[BUG]  [BUGGY]  g2.setFont(rotatedLabelBounds,  rotatedLabelBounds);  [CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.setFont(rotatedLabelBounds,  rotatedLabelBounds);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.setFont(rotatedLabelBounds,  rotatedLabelBounds);	  g2.setFont(rotatedLabelBounds);    	non-compiled	[CE]  method  setFont  in  class  Graphics  cannot  be  applied  to  given  types;	24	None	replace
54	[BUG]  [BUGGY]  Font  font  =  g2.getFont();  [CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  font  =  g2.getFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  font  =  g2.getFont();	          Font    labelFont    =    g2.getFont();    Font    labelFont    =    g2.getFont();    	non-compiled	[CE]  variable  font  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	2	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  }  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	if(rotatedLabelBounds!=  null)  {  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  }	          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());    	compilable	  [FE]  AssertionFailedError  	13	22	replace
56	[BUG]  [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  if(rotatedLabelBounds!=  null)  {  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  }  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	if(rotatedLabelBounds!=  null)  {  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  }	          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());    	compilable	  [FE]  AssertionFailedError  	13	22	replace
57	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
58	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(rotatedLabelBounds,  fm);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelFont  =  getLabelFont(rotatedLabelBounds,  fm);  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelFont  =  getLabelFont(rotatedLabelBounds,  fm);	  Font    labelFont    =    getLabelFont(rotatedLabelBounds);    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	22	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelfont  =  getLabelFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	Font  labelfont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Font    labelFont    =    getLabelFont();    	compilable	  [FE]  AssertionFailedError  	15	22	replace
60	[BUG]  [BUGGY]  Font  labelfont  =  getLabelFont();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  Font  labelfont  =  getLabelFont();  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	Font  labelfont  =  getLabelFont();	          Font    labelFont    =    getLabelFont();    Font    labelFont    =    getLabelFont();    	compilable	  [FE]  AssertionFailedError  	15	22	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	8	22	add
62	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	8	22	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	5	22	add
64	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	5	22	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	add	g2.fill(rotatedLabelBounds);    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	18	22	add
66	[BUG]  [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]  g2.fill(rotatedLabelBounds);  g2.setPaint(getLabelPaint());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	g2.fill(rotatedLabelBounds);    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	18	22	add
67	[BUG]  [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      g2.setPaint(getLabelPaint());  FontMetrics  fm  =  g2.getFontMetrics();  Rectangle2D  labelBounds  =  TextUtilities.getTextBounds(label,  g2,  fm);  Shape  hotspot  =  null;  if  (edge  ==  RectangleEdge.TOP)  {  AffineTransform  t  =  AffineTransform.getRotateInstance(  getLabelAngle(),  labelBounds.getCenterX(),  labelBounds.getCenterY());  Shape  rotatedLabelBounds  =  t.createTransformedShape(labelBounds);      [BUGGY]          g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  [BUGGY]      labelBounds  =  rotatedLabelBounds.getBounds2D();  float  w  =  (float)  labelBounds.getWidth();  float  h  =  (float)  labelBounds.getHeight();  float  labelx  =  (float)  dataArea.getCenterX();  float  labely  =  (float)  (state.getCursor()  -  insets.getBottom()  -  h  /  2.0);  TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle(),  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorUp(insets.getTop()  +  labelBounds.getHeight()  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.67700320038633	1118	1118	22	replace	                g2.setFont(getLabelFont());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
