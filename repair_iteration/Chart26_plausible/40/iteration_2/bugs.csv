bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  g2.setStroke(getLabelStroke());  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	g2.setStroke(getLabelStroke());	      g2.setPaint(getLabelPaint());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
2	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip,  hotspot);  [CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip,  hotspot);  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip,  hotspot);	  EntityCollection    entities    =    owner.getEntityCollection(hotspot);    	non-compiled	[CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;	13	None	replace
3	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip);  [CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip);  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntityCollection(this.labelToolTip);	  EntityCollection    entities    =    owner.getEntityCollection(hotspot);    	non-compiled	[CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;	13	None	replace
4	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(hotspot);  [CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  Font  labelFont  =  getLabelFont(hotspot);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	Font  labelFont  =  getLabelFont(hotspot);	      Font    labelFont    =    getLabelFont();    	non-compiled	[CE]  method  getLabelFont  in  class  Axis  cannot  be  applied  to  given  types;	9	None	replace
5	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -	      TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    	non-compiled	[CE]  not  a  statement	12	None	replace
6	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);	      TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    	non-compiled	[CE]  not  a  statement	12	None	replace
7	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelFont  =  getLabelFont();  [CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelFont  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    Font  labelFont  =  getLabelFont();	  	non-compiled	[CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	8	None	add
8	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  LabelFont  =  getLabelFont();  [CE]  cannot  find  symbol  LabelFont  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  LabelFont  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    LabelFont  =  getLabelFont();	  	non-compiled	[CE]  cannot  find  symbol  LabelFont	8	None	add
9	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Paint  labelFont  =  getLabelFont();  [CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  Paint  labelFont  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    Paint  labelFont  =  getLabelFont();	  	non-compiled	[CE]  variable  labelFont  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	8	None	add
10	[BUG]  [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  [CE]  variable  entities  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection    entities    =    owner!=    null?    null    :    owner.getEntityCollection();    EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();	  	non-compiled	[CE]  variable  entities  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	1	None	add
11	[BUG]  [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  EntityCollection  entities  =  owner  ==  null?  null  :  owner.getEntityCollection();  [CE]  variable  entities  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  EntityCollection  entities  =  owner  ==  null?  null  :  owner.getEntityCollection();  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection    entities    =    owner!=    null?    null    :    owner.getEntityCollection();    EntityCollection  entities  =  owner  ==  null?  null  :  owner.getEntityCollection();	  	non-compiled	[CE]  variable  entities  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	1	None	add
12	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f	      TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    h    /    2.0f    	non-compiled	[CE]  not  a  statement	10	None	replace
13	[BUG]  [BUGGY]  g2.setStroke(this.labelStroke);  [CE]  cannot  find  symbol  labelStroke  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  g2.setStroke(this.labelStroke);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	g2.setStroke(this.labelStroke);	      g2.setPaint(this.labelPaint);    	non-compiled	[CE]  cannot  find  symbol  labelStroke	7	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	4	22	add
15	[BUG]  [BUGGY]      g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	4	22	add
16	[BUG]  [BUGGY]      g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	4	22	add
18	[BUG]  [BUGGY]      g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	4	22	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);	  	compilable	  [FE]  AssertionFailedError  	6	22	add
20	[BUG]  [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);	  	compilable	  [FE]  AssertionFailedError  	6	22	add
21	[BUG]  [BUGGY]      g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  [CE]  cannot  find  symbol  labelStroke  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setStroke(this.labelStroke);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(this.labelPaint);    g2.setStroke(this.labelStroke);	  	non-compiled	[CE]  cannot  find  symbol  labelStroke	6	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;	  	compilable	  [FE]  AssertionFailedError  	6	22	add
23	[BUG]  [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelPaint  =  null;  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelPaint  =  null;	  	compilable	  [FE]  AssertionFailedError  	6	22	add
24	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.entities();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner.entities();  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.entities();	      	non-compiled	[CE]  cannot  find  symbol	3	None	replace
25	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);	  	non-compiled	[CE]  not  a  statement	8	None	add
26	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  labelFont  =  getLabelFont();  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  labelFont  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  labelFont  =  getLabelFont();	  	non-compiled	[CE]  not  a  statement	8	None	add
27	[BUG]  [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  EntityCollection  entities  =  owner  >>  null?  null  :  owner.getEntityCollection();  [CE]  variable  entities  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  EntityCollection  entities  =  owner  >>  null?  null  :  owner.getEntityCollection();  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection    entities    =    owner!=    null?    null    :    owner.getEntityCollection();    EntityCollection  entities  =  owner  >>  null?  null  :  owner.getEntityCollection();	  	non-compiled	[CE]  variable  entities  is  already  defined  in  method  drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)	1	None	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	6	22	add
29	[BUG]  [BUGGY]      g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setFont(this.labelFont);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(this.labelPaint);    g2.setFont(this.labelFont);	  	compilable	  [FE]  AssertionFailedError  	6	22	add
30	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntities();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner.getEntities();  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntities();	      	non-compiled	[CE]  cannot  find  symbol	3	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();	  	compilable	  [FE]  AssertionFailedError  	8	22	add
32	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelLabelFont  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    Font  labelLabelFont  =  getLabelFont();	  	compilable	  [FE]  AssertionFailedError  	8	22	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	add	        Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();	  	compilable	  [FE]  AssertionFailedError  	8	22	add
34	[BUG]  [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      Font  labelFont  =  getLabelFont();  Font  labelBound  =  getLabelFont();  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        Font    labelFont    =    getLabelFont();    Font  labelBound  =  getLabelFont();	  	compilable	  [FE]  AssertionFailedError  	8	22	add
35	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  textAnchor.CENTER);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  textAnchor.CENTER);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  textAnchor.CENTER);	      TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelToolTip);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelToolTip);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelToolTip);	  	non-compiled	[CE]  incompatible  types	6	None	add
37	[BUG]  [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]      g2.setPaint(this.labelPaint);  g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	        g2.setPaint(this.labelPaint);    g2.setPaint(this.labelPaint);  this.labelToolTip  =  new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL);	  	non-compiled	[CE]  incompatible  types	6	None	add
38	[BUG]  [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(hotspot,  this.labelToolTip);  [CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  EntityCollection  entities  =  owner.getEntityCollection(hotspot,  this.labelToolTip);  [BUGGY]    if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	EntityCollection  entities  =  owner.getEntityCollection(hotspot,  this.labelToolTip);	  EntityCollection    entities    =    owner.getEntityCollection(hotspot);    	non-compiled	[CE]  method  getEntityCollection  in  class  ChartRenderingInfo  cannot  be  applied  to  given  types;	13	None	replace
39	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0f,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }  if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();    [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0f,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  [BUGGY]    EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1192	1192	22	replace	TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0f,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -	      TextAnchor.CENTER,    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    labely    -    	non-compiled	[CE]  not  a  statement	12	None	replace
