bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(hotspot);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(hotspot);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(hotspot);	  FontMetrics    hotspotFont    =    getLabelFont().getFontMetrics();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(g2,  state);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(g2,  state);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(g2,  state);	  FontMetrics    hotspotFont    =    getLabelFont().getFontMetrics();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2,  state.getFontMetrics());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2,  state.getFontMetrics());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont(g2,  state.getFontMetrics());	  FontMetrics    hotspotFont    =    getLabelFont(g2.getFontMetrics());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2,  plotArea.getFontMetrics());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2,  plotArea.getFontMetrics());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont(g2,  plotArea.getFontMetrics());	  FontMetrics    hotspotFont    =    getLabelFont(g2.getFontMetrics());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	9	22	add
6	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());	  	compilable	  [FE]  AssertionFailedError  	9	22	add
7	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
8	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setStroke(getLabelStroke());  g2.setFont(getLabelFont());	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
9	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(g2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  Font  labelFont  =  getLabelFont(g2);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	Font  labelFont  =  getLabelFont(g2);	  Font    labelFont    =    getLabelFont();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());	          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  Shape  hotspot  =  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  Shape  hotspot  =  getLabelAngle()  /  2.0,  TextAnchor.CENTER);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	Shape  hotspot  =  getLabelAngle()  /  2.0,  TextAnchor.CENTER);	  Shape    hotspot    =    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    	non-compiled	[CE]  ';'  expected	13	None	replace
12	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2,  hotspot);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2,  hotspot);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont(g2,  hotspot);	  FontMetrics    hotspotFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(g2);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont(g2);	  FontMetrics    hotspotFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont();  if(labelFont!=  null)flush.setFont(labelFont);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  Font  labelFont  =  getLabelFont();  if(labelFont!=  null)flush.setFont(labelFont);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	Font  labelFont  =  getLabelFont();  if(labelFont!=  null)flush.setFont(labelFont);	  Font    labelFont    =    getLabelFont();    if(labelFont!=    null)hotspot.setFont(labelFont);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	6	22	add
16	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	6	22	add
17	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());  g2.setStroke(getLabelStroke());	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	add	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.draw(hotspot);	  	compilable	  [FE]  AssertionFailedError  	6	22	add
19	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  g2.draw(hotspot);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.draw(hotspot);	  	compilable	  [FE]  AssertionFailedError  	6	22	add
20	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());  g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setPaint(getLabelPaint());    g2.setStroke(getLabelStroke());  g2.setPaint(getLabelPaint());	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
21	[BUG]  [BUGGY]  if(plotState!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  if(plotState!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	if(plotState!=  null)  {  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  }	          g2.setPaint(getLabelPaint());    g2.setPaint(getLabelPaint());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(hotspot,  state);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont(hotspot,  state);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont(hotspot,  state);	  FontMetrics    hotspotFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  Shape  hotspot  =  getLabelAngle()  *  Math.PI  /  2.0,  TextAnchor.CENTER);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  Shape  hotspot  =  getLabelAngle()  *  Math.PI  /  2.0,  TextAnchor.CENTER);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	Shape  hotspot  =  getLabelAngle()  *  Math.PI  /  2.0,  TextAnchor.CENTER);	  Shape    hotspot    =    getLabelAngle()    +    Math.PI    /    2.0,    TextAnchor.CENTER);    	non-compiled	[CE]  ';'  expected	13	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	9	22	add
25	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setPaint(getLabelPaint());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	9	22	add
26	[BUG]  [BUGGY]  if(plotState!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  if(plotState!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	if(plotState!=  null)  {  g2.setPaint(getLabelPaint());  g2.setFont(getLabelFont());  }	          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(g2.getFontMetrics());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(g2.getFontMetrics());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspotFont  =  getLabelFont().getFontMetrics(g2.getFontMetrics());	  FontMetrics    hotspotFont    =    getLabelFont().getFontMetrics();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,	  TextAnchor.CENTER,    getLabelAngle()    /    2.0,    TextAnchor.CENTER);    hotspot    =    new    Rectangle2D.Float(labelx    -    w    /    2.0f,    label    	non-compiled	[CE]  not  a  statement	12	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	add	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	9	22	add
30	[BUG]  [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]          g2.setPaint(getLabelPaint());    g2.setFont(getLabelFont());  g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	                g2.setPaint(getLabelPaint());        g2.setFont(getLabelFont());    g2.setFont(getLabelFont());  g2.setPaint(getLabelPaint());	  	compilable	  [FE]  AssertionFailedError  	9	22	add
31	[BUG]  [BUGGY]  FontMetrics  hotspot  =  getLabelFont(g2,  hotspot);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  FontMetrics  hotspot  =  getLabelFont(g2,  hotspot);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	FontMetrics  hotspot  =  getLabelFont(g2,  hotspot);	  FontMetrics    hotspotFont    =    getLabelFont(hotspot);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  Font  labelFont  =  getLabelFont(g2,  state);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        TextUtilities.drawRotatedString(label,  g2,  labelx,  labely,  TextAnchor.CENTER,  getLabelAngle()  +  Math.PI  /  2.0,  TextAnchor.CENTER);  hotspot  =  new  Rectangle2D.Float(labelx  -  w  /  2.0f,  labely  -  h  /  2.0f,  w,  h);  state.cursorRight(insets.getLeft()  +  labelBounds.getWidth()  +  insets.getRight());  }      [BUGGY]  Font  labelFont  =  getLabelFont(g2,  state);  [BUGGY]      if  (plotState  !=  null  &&  hotspot  !=  null)  {  ChartRenderingInfo  owner  =  plotState.getOwner();  EntityCollection  entities  =  owner.getEntityCollection();  if  (entities  !=  null)  {  entities.add(new  AxisLabelEntity(this,  hotspot,  this.labelToolTip,  this.labelURL));  }  }  return  state;  }  [CLASS]  Axis  [METHOD]  drawLabel  [RETURN_TYPE]  AxisState  String  label  Graphics2D  g2  Rectangle2D  plotArea  Rectangle2D  dataArea  RectangleEdge  edge  AxisState  state  PlotRenderingInfo  plotState  [VARIABLES]  Stroke  DEFAULT_AXIS_LINE_STROKE  DEFAULT_TICK_MARK_STROKE  axisLineStroke  stroke  tickMarkStroke  Shape  hotspot  rotatedLabelBounds  PlotRenderingInfo  plotState  double  angle  cursor  dimension  fixedDimension  labelAngle  x  y  Plot  plot  Rectangle2D  dataArea  labelBounds  plotArea  Paint  DEFAULT_AXIS_LABEL_PAINT  DEFAULT_AXIS_LINE_PAINT  DEFAULT_TICK_LABEL_PAINT  DEFAULT_TICK_MARK_PAINT  axisLinePaint  labelPaint  paint  tickLabelPaint  tickMarkPaint  String  axisLabel  existing  label  labelToolTip  labelURL  text  url  float  DEFAULT_TICK_MARK_INSIDE_LENGTH  DEFAULT_TICK_MARK_OUTSIDE_LENGTH  h  labelx  labely  length  tickMarkInsideLength  tickMarkOutsideLength  w  long  serialVersionUID  Font  DEFAULT_AXIS_LABEL_FONT  DEFAULT_TICK_LABEL_FONT  font  labelFont  tickLabelFont  Graphics2D  g2  AxisState  state  boolean  DEFAULT_AXIS_VISIBLE  DEFAULT_TICK_LABELS_VISIBLE  DEFAULT_TICK_MARKS_VISIBLE  axisLineVisible  flag  tickLabelsVisible  tickMarksVisible  visible  EntityCollection  entities  FontMetrics  fm  EventListenerList  listenerList  ChartRenderingInfo  owner  RectangleInsets  DEFAULT_AXIS_LABEL_INSETS  DEFAULT_TICK_LABEL_INSETS  insets  labelInsets  tickLabelInsets  AffineTransform  t  RectangleEdge  edge  	projects/Chart26/source/org/jfree/chart/axis/Axis.java	0.9574271077563381	1190	1190	22	replace	Font  labelFont  =  getLabelFont(g2,  state);	  Font    labelFont    =    getLabelFont();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
